
STEPPER.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00003808  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000108  00800060  00003808  0000387c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00002064  00000000  00000000  00003984  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      0000099c  00000000  00000000  000059e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000180  00000000  00000000  00006384  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 000001d3  00000000  00000000  00006504  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000200f  00000000  00000000  000066d7  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001170  00000000  00000000  000086e6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001001  00000000  00000000  00009856  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001a0  00000000  00000000  0000a858  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000002c1  00000000  00000000  0000a9f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000008ae  00000000  00000000  0000acb9  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  0000b567  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e8 e0       	ldi	r30, 0x08	; 8
      68:	f8 e3       	ldi	r31, 0x38	; 56
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a8 36       	cpi	r26, 0x68	; 104
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 a1 1b 	call	0x3742	; 0x3742 <main>
      7a:	0c 94 02 1c 	jmp	0x3804	; 0x3804 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 41 03 	call	0x682	; 0x682 <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 cb 1b 	jmp	0x3796	; 0x3796 <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a0 e6       	ldi	r26, 0x60	; 96
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 e7 1b 	jmp	0x37ce	; 0x37ce <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 d7 1b 	jmp	0x37ae	; 0x37ae <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 bd 04 	call	0x97a	; 0x97a <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 f3 1b 	jmp	0x37e6	; 0x37e6 <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 d7 1b 	jmp	0x37ae	; 0x37ae <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 bd 04 	call	0x97a	; 0x97a <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 f3 1b 	jmp	0x37e6	; 0x37e6 <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 cb 1b 	jmp	0x3796	; 0x3796 <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	80 e6       	ldi	r24, 0x60	; 96
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 bd 04 	call	0x97a	; 0x97a <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 e7 1b 	jmp	0x37ce	; 0x37ce <__epilogue_restores__>

00000622 <__gtsf2>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 d7 1b 	jmp	0x37ae	; 0x37ae <__prologue_saves__+0x18>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	89 e0       	ldi	r24, 0x09	; 9
     640:	e8 2e       	mov	r14, r24
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     662:	89 85       	ldd	r24, Y+9	; 0x09
     664:	82 30       	cpi	r24, 0x02	; 2
     666:	40 f0       	brcs	.+16     	; 0x678 <__gtsf2+0x56>
     668:	89 89       	ldd	r24, Y+17	; 0x11
     66a:	82 30       	cpi	r24, 0x02	; 2
     66c:	28 f0       	brcs	.+10     	; 0x678 <__gtsf2+0x56>
     66e:	c7 01       	movw	r24, r14
     670:	b8 01       	movw	r22, r16
     672:	0e 94 0a 06 	call	0xc14	; 0xc14 <__fpcmp_parts_f>
     676:	01 c0       	rjmp	.+2      	; 0x67a <__gtsf2+0x58>
     678:	8f ef       	ldi	r24, 0xFF	; 255
     67a:	68 96       	adiw	r28, 0x18	; 24
     67c:	e6 e0       	ldi	r30, 0x06	; 6
     67e:	0c 94 f3 1b 	jmp	0x37e6	; 0x37e6 <__epilogue_restores__+0x18>

00000682 <__gesf2>:
     682:	a8 e1       	ldi	r26, 0x18	; 24
     684:	b0 e0       	ldi	r27, 0x00	; 0
     686:	e7 e4       	ldi	r30, 0x47	; 71
     688:	f3 e0       	ldi	r31, 0x03	; 3
     68a:	0c 94 d7 1b 	jmp	0x37ae	; 0x37ae <__prologue_saves__+0x18>
     68e:	69 83       	std	Y+1, r22	; 0x01
     690:	7a 83       	std	Y+2, r23	; 0x02
     692:	8b 83       	std	Y+3, r24	; 0x03
     694:	9c 83       	std	Y+4, r25	; 0x04
     696:	2d 83       	std	Y+5, r18	; 0x05
     698:	3e 83       	std	Y+6, r19	; 0x06
     69a:	4f 83       	std	Y+7, r20	; 0x07
     69c:	58 87       	std	Y+8, r21	; 0x08
     69e:	89 e0       	ldi	r24, 0x09	; 9
     6a0:	e8 2e       	mov	r14, r24
     6a2:	f1 2c       	mov	r15, r1
     6a4:	ec 0e       	add	r14, r28
     6a6:	fd 1e       	adc	r15, r29
     6a8:	ce 01       	movw	r24, r28
     6aa:	01 96       	adiw	r24, 0x01	; 1
     6ac:	b7 01       	movw	r22, r14
     6ae:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     6b2:	8e 01       	movw	r16, r28
     6b4:	0f 5e       	subi	r16, 0xEF	; 239
     6b6:	1f 4f       	sbci	r17, 0xFF	; 255
     6b8:	ce 01       	movw	r24, r28
     6ba:	05 96       	adiw	r24, 0x05	; 5
     6bc:	b8 01       	movw	r22, r16
     6be:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     6c2:	89 85       	ldd	r24, Y+9	; 0x09
     6c4:	82 30       	cpi	r24, 0x02	; 2
     6c6:	40 f0       	brcs	.+16     	; 0x6d8 <__gesf2+0x56>
     6c8:	89 89       	ldd	r24, Y+17	; 0x11
     6ca:	82 30       	cpi	r24, 0x02	; 2
     6cc:	28 f0       	brcs	.+10     	; 0x6d8 <__gesf2+0x56>
     6ce:	c7 01       	movw	r24, r14
     6d0:	b8 01       	movw	r22, r16
     6d2:	0e 94 0a 06 	call	0xc14	; 0xc14 <__fpcmp_parts_f>
     6d6:	01 c0       	rjmp	.+2      	; 0x6da <__gesf2+0x58>
     6d8:	8f ef       	ldi	r24, 0xFF	; 255
     6da:	68 96       	adiw	r28, 0x18	; 24
     6dc:	e6 e0       	ldi	r30, 0x06	; 6
     6de:	0c 94 f3 1b 	jmp	0x37e6	; 0x37e6 <__epilogue_restores__+0x18>

000006e2 <__ltsf2>:
     6e2:	a8 e1       	ldi	r26, 0x18	; 24
     6e4:	b0 e0       	ldi	r27, 0x00	; 0
     6e6:	e7 e7       	ldi	r30, 0x77	; 119
     6e8:	f3 e0       	ldi	r31, 0x03	; 3
     6ea:	0c 94 d7 1b 	jmp	0x37ae	; 0x37ae <__prologue_saves__+0x18>
     6ee:	69 83       	std	Y+1, r22	; 0x01
     6f0:	7a 83       	std	Y+2, r23	; 0x02
     6f2:	8b 83       	std	Y+3, r24	; 0x03
     6f4:	9c 83       	std	Y+4, r25	; 0x04
     6f6:	2d 83       	std	Y+5, r18	; 0x05
     6f8:	3e 83       	std	Y+6, r19	; 0x06
     6fa:	4f 83       	std	Y+7, r20	; 0x07
     6fc:	58 87       	std	Y+8, r21	; 0x08
     6fe:	89 e0       	ldi	r24, 0x09	; 9
     700:	e8 2e       	mov	r14, r24
     702:	f1 2c       	mov	r15, r1
     704:	ec 0e       	add	r14, r28
     706:	fd 1e       	adc	r15, r29
     708:	ce 01       	movw	r24, r28
     70a:	01 96       	adiw	r24, 0x01	; 1
     70c:	b7 01       	movw	r22, r14
     70e:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     712:	8e 01       	movw	r16, r28
     714:	0f 5e       	subi	r16, 0xEF	; 239
     716:	1f 4f       	sbci	r17, 0xFF	; 255
     718:	ce 01       	movw	r24, r28
     71a:	05 96       	adiw	r24, 0x05	; 5
     71c:	b8 01       	movw	r22, r16
     71e:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     722:	89 85       	ldd	r24, Y+9	; 0x09
     724:	82 30       	cpi	r24, 0x02	; 2
     726:	40 f0       	brcs	.+16     	; 0x738 <__ltsf2+0x56>
     728:	89 89       	ldd	r24, Y+17	; 0x11
     72a:	82 30       	cpi	r24, 0x02	; 2
     72c:	28 f0       	brcs	.+10     	; 0x738 <__ltsf2+0x56>
     72e:	c7 01       	movw	r24, r14
     730:	b8 01       	movw	r22, r16
     732:	0e 94 0a 06 	call	0xc14	; 0xc14 <__fpcmp_parts_f>
     736:	01 c0       	rjmp	.+2      	; 0x73a <__ltsf2+0x58>
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	68 96       	adiw	r28, 0x18	; 24
     73c:	e6 e0       	ldi	r30, 0x06	; 6
     73e:	0c 94 f3 1b 	jmp	0x37e6	; 0x37e6 <__epilogue_restores__+0x18>

00000742 <__fixsfsi>:
     742:	ac e0       	ldi	r26, 0x0C	; 12
     744:	b0 e0       	ldi	r27, 0x00	; 0
     746:	e7 ea       	ldi	r30, 0xA7	; 167
     748:	f3 e0       	ldi	r31, 0x03	; 3
     74a:	0c 94 db 1b 	jmp	0x37b6	; 0x37b6 <__prologue_saves__+0x20>
     74e:	69 83       	std	Y+1, r22	; 0x01
     750:	7a 83       	std	Y+2, r23	; 0x02
     752:	8b 83       	std	Y+3, r24	; 0x03
     754:	9c 83       	std	Y+4, r25	; 0x04
     756:	ce 01       	movw	r24, r28
     758:	01 96       	adiw	r24, 0x01	; 1
     75a:	be 01       	movw	r22, r28
     75c:	6b 5f       	subi	r22, 0xFB	; 251
     75e:	7f 4f       	sbci	r23, 0xFF	; 255
     760:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     764:	8d 81       	ldd	r24, Y+5	; 0x05
     766:	82 30       	cpi	r24, 0x02	; 2
     768:	61 f1       	breq	.+88     	; 0x7c2 <__fixsfsi+0x80>
     76a:	82 30       	cpi	r24, 0x02	; 2
     76c:	50 f1       	brcs	.+84     	; 0x7c2 <__fixsfsi+0x80>
     76e:	84 30       	cpi	r24, 0x04	; 4
     770:	21 f4       	brne	.+8      	; 0x77a <__fixsfsi+0x38>
     772:	8e 81       	ldd	r24, Y+6	; 0x06
     774:	88 23       	and	r24, r24
     776:	51 f1       	breq	.+84     	; 0x7cc <__fixsfsi+0x8a>
     778:	2e c0       	rjmp	.+92     	; 0x7d6 <__fixsfsi+0x94>
     77a:	2f 81       	ldd	r18, Y+7	; 0x07
     77c:	38 85       	ldd	r19, Y+8	; 0x08
     77e:	37 fd       	sbrc	r19, 7
     780:	20 c0       	rjmp	.+64     	; 0x7c2 <__fixsfsi+0x80>
     782:	6e 81       	ldd	r22, Y+6	; 0x06
     784:	2f 31       	cpi	r18, 0x1F	; 31
     786:	31 05       	cpc	r19, r1
     788:	1c f0       	brlt	.+6      	; 0x790 <__fixsfsi+0x4e>
     78a:	66 23       	and	r22, r22
     78c:	f9 f0       	breq	.+62     	; 0x7cc <__fixsfsi+0x8a>
     78e:	23 c0       	rjmp	.+70     	; 0x7d6 <__fixsfsi+0x94>
     790:	8e e1       	ldi	r24, 0x1E	; 30
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	82 1b       	sub	r24, r18
     796:	93 0b       	sbc	r25, r19
     798:	29 85       	ldd	r18, Y+9	; 0x09
     79a:	3a 85       	ldd	r19, Y+10	; 0x0a
     79c:	4b 85       	ldd	r20, Y+11	; 0x0b
     79e:	5c 85       	ldd	r21, Y+12	; 0x0c
     7a0:	04 c0       	rjmp	.+8      	; 0x7aa <__fixsfsi+0x68>
     7a2:	56 95       	lsr	r21
     7a4:	47 95       	ror	r20
     7a6:	37 95       	ror	r19
     7a8:	27 95       	ror	r18
     7aa:	8a 95       	dec	r24
     7ac:	d2 f7       	brpl	.-12     	; 0x7a2 <__fixsfsi+0x60>
     7ae:	66 23       	and	r22, r22
     7b0:	b1 f0       	breq	.+44     	; 0x7de <__fixsfsi+0x9c>
     7b2:	50 95       	com	r21
     7b4:	40 95       	com	r20
     7b6:	30 95       	com	r19
     7b8:	21 95       	neg	r18
     7ba:	3f 4f       	sbci	r19, 0xFF	; 255
     7bc:	4f 4f       	sbci	r20, 0xFF	; 255
     7be:	5f 4f       	sbci	r21, 0xFF	; 255
     7c0:	0e c0       	rjmp	.+28     	; 0x7de <__fixsfsi+0x9c>
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	40 e0       	ldi	r20, 0x00	; 0
     7c8:	50 e0       	ldi	r21, 0x00	; 0
     7ca:	09 c0       	rjmp	.+18     	; 0x7de <__fixsfsi+0x9c>
     7cc:	2f ef       	ldi	r18, 0xFF	; 255
     7ce:	3f ef       	ldi	r19, 0xFF	; 255
     7d0:	4f ef       	ldi	r20, 0xFF	; 255
     7d2:	5f e7       	ldi	r21, 0x7F	; 127
     7d4:	04 c0       	rjmp	.+8      	; 0x7de <__fixsfsi+0x9c>
     7d6:	20 e0       	ldi	r18, 0x00	; 0
     7d8:	30 e0       	ldi	r19, 0x00	; 0
     7da:	40 e0       	ldi	r20, 0x00	; 0
     7dc:	50 e8       	ldi	r21, 0x80	; 128
     7de:	b9 01       	movw	r22, r18
     7e0:	ca 01       	movw	r24, r20
     7e2:	2c 96       	adiw	r28, 0x0c	; 12
     7e4:	e2 e0       	ldi	r30, 0x02	; 2
     7e6:	0c 94 f7 1b 	jmp	0x37ee	; 0x37ee <__epilogue_restores__+0x20>

000007ea <__floatunsisf>:
     7ea:	a8 e0       	ldi	r26, 0x08	; 8
     7ec:	b0 e0       	ldi	r27, 0x00	; 0
     7ee:	eb ef       	ldi	r30, 0xFB	; 251
     7f0:	f3 e0       	ldi	r31, 0x03	; 3
     7f2:	0c 94 d3 1b 	jmp	0x37a6	; 0x37a6 <__prologue_saves__+0x10>
     7f6:	7b 01       	movw	r14, r22
     7f8:	8c 01       	movw	r16, r24
     7fa:	61 15       	cp	r22, r1
     7fc:	71 05       	cpc	r23, r1
     7fe:	81 05       	cpc	r24, r1
     800:	91 05       	cpc	r25, r1
     802:	19 f4       	brne	.+6      	; 0x80a <__floatunsisf+0x20>
     804:	82 e0       	ldi	r24, 0x02	; 2
     806:	89 83       	std	Y+1, r24	; 0x01
     808:	60 c0       	rjmp	.+192    	; 0x8ca <__stack+0x6b>
     80a:	83 e0       	ldi	r24, 0x03	; 3
     80c:	89 83       	std	Y+1, r24	; 0x01
     80e:	8e e1       	ldi	r24, 0x1E	; 30
     810:	c8 2e       	mov	r12, r24
     812:	d1 2c       	mov	r13, r1
     814:	dc 82       	std	Y+4, r13	; 0x04
     816:	cb 82       	std	Y+3, r12	; 0x03
     818:	ed 82       	std	Y+5, r14	; 0x05
     81a:	fe 82       	std	Y+6, r15	; 0x06
     81c:	0f 83       	std	Y+7, r16	; 0x07
     81e:	18 87       	std	Y+8, r17	; 0x08
     820:	c8 01       	movw	r24, r16
     822:	b7 01       	movw	r22, r14
     824:	0e 94 6e 04 	call	0x8dc	; 0x8dc <__clzsi2>
     828:	fc 01       	movw	r30, r24
     82a:	31 97       	sbiw	r30, 0x01	; 1
     82c:	f7 ff       	sbrs	r31, 7
     82e:	3b c0       	rjmp	.+118    	; 0x8a6 <__stack+0x47>
     830:	22 27       	eor	r18, r18
     832:	33 27       	eor	r19, r19
     834:	2e 1b       	sub	r18, r30
     836:	3f 0b       	sbc	r19, r31
     838:	57 01       	movw	r10, r14
     83a:	68 01       	movw	r12, r16
     83c:	02 2e       	mov	r0, r18
     83e:	04 c0       	rjmp	.+8      	; 0x848 <__floatunsisf+0x5e>
     840:	d6 94       	lsr	r13
     842:	c7 94       	ror	r12
     844:	b7 94       	ror	r11
     846:	a7 94       	ror	r10
     848:	0a 94       	dec	r0
     84a:	d2 f7       	brpl	.-12     	; 0x840 <__floatunsisf+0x56>
     84c:	40 e0       	ldi	r20, 0x00	; 0
     84e:	50 e0       	ldi	r21, 0x00	; 0
     850:	60 e0       	ldi	r22, 0x00	; 0
     852:	70 e0       	ldi	r23, 0x00	; 0
     854:	81 e0       	ldi	r24, 0x01	; 1
     856:	90 e0       	ldi	r25, 0x00	; 0
     858:	a0 e0       	ldi	r26, 0x00	; 0
     85a:	b0 e0       	ldi	r27, 0x00	; 0
     85c:	04 c0       	rjmp	.+8      	; 0x866 <__stack+0x7>
     85e:	88 0f       	add	r24, r24
     860:	99 1f       	adc	r25, r25
     862:	aa 1f       	adc	r26, r26
     864:	bb 1f       	adc	r27, r27
     866:	2a 95       	dec	r18
     868:	d2 f7       	brpl	.-12     	; 0x85e <__floatunsisf+0x74>
     86a:	01 97       	sbiw	r24, 0x01	; 1
     86c:	a1 09       	sbc	r26, r1
     86e:	b1 09       	sbc	r27, r1
     870:	8e 21       	and	r24, r14
     872:	9f 21       	and	r25, r15
     874:	a0 23       	and	r26, r16
     876:	b1 23       	and	r27, r17
     878:	00 97       	sbiw	r24, 0x00	; 0
     87a:	a1 05       	cpc	r26, r1
     87c:	b1 05       	cpc	r27, r1
     87e:	21 f0       	breq	.+8      	; 0x888 <__stack+0x29>
     880:	41 e0       	ldi	r20, 0x01	; 1
     882:	50 e0       	ldi	r21, 0x00	; 0
     884:	60 e0       	ldi	r22, 0x00	; 0
     886:	70 e0       	ldi	r23, 0x00	; 0
     888:	4a 29       	or	r20, r10
     88a:	5b 29       	or	r21, r11
     88c:	6c 29       	or	r22, r12
     88e:	7d 29       	or	r23, r13
     890:	4d 83       	std	Y+5, r20	; 0x05
     892:	5e 83       	std	Y+6, r21	; 0x06
     894:	6f 83       	std	Y+7, r22	; 0x07
     896:	78 87       	std	Y+8, r23	; 0x08
     898:	8e e1       	ldi	r24, 0x1E	; 30
     89a:	90 e0       	ldi	r25, 0x00	; 0
     89c:	8e 1b       	sub	r24, r30
     89e:	9f 0b       	sbc	r25, r31
     8a0:	9c 83       	std	Y+4, r25	; 0x04
     8a2:	8b 83       	std	Y+3, r24	; 0x03
     8a4:	12 c0       	rjmp	.+36     	; 0x8ca <__stack+0x6b>
     8a6:	30 97       	sbiw	r30, 0x00	; 0
     8a8:	81 f0       	breq	.+32     	; 0x8ca <__stack+0x6b>
     8aa:	0e 2e       	mov	r0, r30
     8ac:	04 c0       	rjmp	.+8      	; 0x8b6 <__stack+0x57>
     8ae:	ee 0c       	add	r14, r14
     8b0:	ff 1c       	adc	r15, r15
     8b2:	00 1f       	adc	r16, r16
     8b4:	11 1f       	adc	r17, r17
     8b6:	0a 94       	dec	r0
     8b8:	d2 f7       	brpl	.-12     	; 0x8ae <__stack+0x4f>
     8ba:	ed 82       	std	Y+5, r14	; 0x05
     8bc:	fe 82       	std	Y+6, r15	; 0x06
     8be:	0f 83       	std	Y+7, r16	; 0x07
     8c0:	18 87       	std	Y+8, r17	; 0x08
     8c2:	ce 1a       	sub	r12, r30
     8c4:	df 0a       	sbc	r13, r31
     8c6:	dc 82       	std	Y+4, r13	; 0x04
     8c8:	cb 82       	std	Y+3, r12	; 0x03
     8ca:	1a 82       	std	Y+2, r1	; 0x02
     8cc:	ce 01       	movw	r24, r28
     8ce:	01 96       	adiw	r24, 0x01	; 1
     8d0:	0e 94 bd 04 	call	0x97a	; 0x97a <__pack_f>
     8d4:	28 96       	adiw	r28, 0x08	; 8
     8d6:	ea e0       	ldi	r30, 0x0A	; 10
     8d8:	0c 94 ef 1b 	jmp	0x37de	; 0x37de <__epilogue_restores__+0x10>

000008dc <__clzsi2>:
     8dc:	ef 92       	push	r14
     8de:	ff 92       	push	r15
     8e0:	0f 93       	push	r16
     8e2:	1f 93       	push	r17
     8e4:	7b 01       	movw	r14, r22
     8e6:	8c 01       	movw	r16, r24
     8e8:	80 e0       	ldi	r24, 0x00	; 0
     8ea:	e8 16       	cp	r14, r24
     8ec:	80 e0       	ldi	r24, 0x00	; 0
     8ee:	f8 06       	cpc	r15, r24
     8f0:	81 e0       	ldi	r24, 0x01	; 1
     8f2:	08 07       	cpc	r16, r24
     8f4:	80 e0       	ldi	r24, 0x00	; 0
     8f6:	18 07       	cpc	r17, r24
     8f8:	88 f4       	brcc	.+34     	; 0x91c <__clzsi2+0x40>
     8fa:	8f ef       	ldi	r24, 0xFF	; 255
     8fc:	e8 16       	cp	r14, r24
     8fe:	f1 04       	cpc	r15, r1
     900:	01 05       	cpc	r16, r1
     902:	11 05       	cpc	r17, r1
     904:	31 f0       	breq	.+12     	; 0x912 <__clzsi2+0x36>
     906:	28 f0       	brcs	.+10     	; 0x912 <__clzsi2+0x36>
     908:	88 e0       	ldi	r24, 0x08	; 8
     90a:	90 e0       	ldi	r25, 0x00	; 0
     90c:	a0 e0       	ldi	r26, 0x00	; 0
     90e:	b0 e0       	ldi	r27, 0x00	; 0
     910:	17 c0       	rjmp	.+46     	; 0x940 <__clzsi2+0x64>
     912:	80 e0       	ldi	r24, 0x00	; 0
     914:	90 e0       	ldi	r25, 0x00	; 0
     916:	a0 e0       	ldi	r26, 0x00	; 0
     918:	b0 e0       	ldi	r27, 0x00	; 0
     91a:	12 c0       	rjmp	.+36     	; 0x940 <__clzsi2+0x64>
     91c:	80 e0       	ldi	r24, 0x00	; 0
     91e:	e8 16       	cp	r14, r24
     920:	80 e0       	ldi	r24, 0x00	; 0
     922:	f8 06       	cpc	r15, r24
     924:	80 e0       	ldi	r24, 0x00	; 0
     926:	08 07       	cpc	r16, r24
     928:	81 e0       	ldi	r24, 0x01	; 1
     92a:	18 07       	cpc	r17, r24
     92c:	28 f0       	brcs	.+10     	; 0x938 <__clzsi2+0x5c>
     92e:	88 e1       	ldi	r24, 0x18	; 24
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	a0 e0       	ldi	r26, 0x00	; 0
     934:	b0 e0       	ldi	r27, 0x00	; 0
     936:	04 c0       	rjmp	.+8      	; 0x940 <__clzsi2+0x64>
     938:	80 e1       	ldi	r24, 0x10	; 16
     93a:	90 e0       	ldi	r25, 0x00	; 0
     93c:	a0 e0       	ldi	r26, 0x00	; 0
     93e:	b0 e0       	ldi	r27, 0x00	; 0
     940:	20 e2       	ldi	r18, 0x20	; 32
     942:	30 e0       	ldi	r19, 0x00	; 0
     944:	40 e0       	ldi	r20, 0x00	; 0
     946:	50 e0       	ldi	r21, 0x00	; 0
     948:	28 1b       	sub	r18, r24
     94a:	39 0b       	sbc	r19, r25
     94c:	4a 0b       	sbc	r20, r26
     94e:	5b 0b       	sbc	r21, r27
     950:	04 c0       	rjmp	.+8      	; 0x95a <__clzsi2+0x7e>
     952:	16 95       	lsr	r17
     954:	07 95       	ror	r16
     956:	f7 94       	ror	r15
     958:	e7 94       	ror	r14
     95a:	8a 95       	dec	r24
     95c:	d2 f7       	brpl	.-12     	; 0x952 <__clzsi2+0x76>
     95e:	f7 01       	movw	r30, r14
     960:	e8 59       	subi	r30, 0x98	; 152
     962:	ff 4f       	sbci	r31, 0xFF	; 255
     964:	80 81       	ld	r24, Z
     966:	28 1b       	sub	r18, r24
     968:	31 09       	sbc	r19, r1
     96a:	41 09       	sbc	r20, r1
     96c:	51 09       	sbc	r21, r1
     96e:	c9 01       	movw	r24, r18
     970:	1f 91       	pop	r17
     972:	0f 91       	pop	r16
     974:	ff 90       	pop	r15
     976:	ef 90       	pop	r14
     978:	08 95       	ret

0000097a <__pack_f>:
     97a:	df 92       	push	r13
     97c:	ef 92       	push	r14
     97e:	ff 92       	push	r15
     980:	0f 93       	push	r16
     982:	1f 93       	push	r17
     984:	fc 01       	movw	r30, r24
     986:	e4 80       	ldd	r14, Z+4	; 0x04
     988:	f5 80       	ldd	r15, Z+5	; 0x05
     98a:	06 81       	ldd	r16, Z+6	; 0x06
     98c:	17 81       	ldd	r17, Z+7	; 0x07
     98e:	d1 80       	ldd	r13, Z+1	; 0x01
     990:	80 81       	ld	r24, Z
     992:	82 30       	cpi	r24, 0x02	; 2
     994:	48 f4       	brcc	.+18     	; 0x9a8 <__pack_f+0x2e>
     996:	80 e0       	ldi	r24, 0x00	; 0
     998:	90 e0       	ldi	r25, 0x00	; 0
     99a:	a0 e1       	ldi	r26, 0x10	; 16
     99c:	b0 e0       	ldi	r27, 0x00	; 0
     99e:	e8 2a       	or	r14, r24
     9a0:	f9 2a       	or	r15, r25
     9a2:	0a 2b       	or	r16, r26
     9a4:	1b 2b       	or	r17, r27
     9a6:	a5 c0       	rjmp	.+330    	; 0xaf2 <__pack_f+0x178>
     9a8:	84 30       	cpi	r24, 0x04	; 4
     9aa:	09 f4       	brne	.+2      	; 0x9ae <__pack_f+0x34>
     9ac:	9f c0       	rjmp	.+318    	; 0xaec <__pack_f+0x172>
     9ae:	82 30       	cpi	r24, 0x02	; 2
     9b0:	21 f4       	brne	.+8      	; 0x9ba <__pack_f+0x40>
     9b2:	ee 24       	eor	r14, r14
     9b4:	ff 24       	eor	r15, r15
     9b6:	87 01       	movw	r16, r14
     9b8:	05 c0       	rjmp	.+10     	; 0x9c4 <__pack_f+0x4a>
     9ba:	e1 14       	cp	r14, r1
     9bc:	f1 04       	cpc	r15, r1
     9be:	01 05       	cpc	r16, r1
     9c0:	11 05       	cpc	r17, r1
     9c2:	19 f4       	brne	.+6      	; 0x9ca <__pack_f+0x50>
     9c4:	e0 e0       	ldi	r30, 0x00	; 0
     9c6:	f0 e0       	ldi	r31, 0x00	; 0
     9c8:	96 c0       	rjmp	.+300    	; 0xaf6 <__pack_f+0x17c>
     9ca:	62 81       	ldd	r22, Z+2	; 0x02
     9cc:	73 81       	ldd	r23, Z+3	; 0x03
     9ce:	9f ef       	ldi	r25, 0xFF	; 255
     9d0:	62 38       	cpi	r22, 0x82	; 130
     9d2:	79 07       	cpc	r23, r25
     9d4:	0c f0       	brlt	.+2      	; 0x9d8 <__pack_f+0x5e>
     9d6:	5b c0       	rjmp	.+182    	; 0xa8e <__pack_f+0x114>
     9d8:	22 e8       	ldi	r18, 0x82	; 130
     9da:	3f ef       	ldi	r19, 0xFF	; 255
     9dc:	26 1b       	sub	r18, r22
     9de:	37 0b       	sbc	r19, r23
     9e0:	2a 31       	cpi	r18, 0x1A	; 26
     9e2:	31 05       	cpc	r19, r1
     9e4:	2c f0       	brlt	.+10     	; 0x9f0 <__pack_f+0x76>
     9e6:	20 e0       	ldi	r18, 0x00	; 0
     9e8:	30 e0       	ldi	r19, 0x00	; 0
     9ea:	40 e0       	ldi	r20, 0x00	; 0
     9ec:	50 e0       	ldi	r21, 0x00	; 0
     9ee:	2a c0       	rjmp	.+84     	; 0xa44 <__pack_f+0xca>
     9f0:	b8 01       	movw	r22, r16
     9f2:	a7 01       	movw	r20, r14
     9f4:	02 2e       	mov	r0, r18
     9f6:	04 c0       	rjmp	.+8      	; 0xa00 <__pack_f+0x86>
     9f8:	76 95       	lsr	r23
     9fa:	67 95       	ror	r22
     9fc:	57 95       	ror	r21
     9fe:	47 95       	ror	r20
     a00:	0a 94       	dec	r0
     a02:	d2 f7       	brpl	.-12     	; 0x9f8 <__pack_f+0x7e>
     a04:	81 e0       	ldi	r24, 0x01	; 1
     a06:	90 e0       	ldi	r25, 0x00	; 0
     a08:	a0 e0       	ldi	r26, 0x00	; 0
     a0a:	b0 e0       	ldi	r27, 0x00	; 0
     a0c:	04 c0       	rjmp	.+8      	; 0xa16 <__pack_f+0x9c>
     a0e:	88 0f       	add	r24, r24
     a10:	99 1f       	adc	r25, r25
     a12:	aa 1f       	adc	r26, r26
     a14:	bb 1f       	adc	r27, r27
     a16:	2a 95       	dec	r18
     a18:	d2 f7       	brpl	.-12     	; 0xa0e <__pack_f+0x94>
     a1a:	01 97       	sbiw	r24, 0x01	; 1
     a1c:	a1 09       	sbc	r26, r1
     a1e:	b1 09       	sbc	r27, r1
     a20:	8e 21       	and	r24, r14
     a22:	9f 21       	and	r25, r15
     a24:	a0 23       	and	r26, r16
     a26:	b1 23       	and	r27, r17
     a28:	00 97       	sbiw	r24, 0x00	; 0
     a2a:	a1 05       	cpc	r26, r1
     a2c:	b1 05       	cpc	r27, r1
     a2e:	21 f0       	breq	.+8      	; 0xa38 <__pack_f+0xbe>
     a30:	81 e0       	ldi	r24, 0x01	; 1
     a32:	90 e0       	ldi	r25, 0x00	; 0
     a34:	a0 e0       	ldi	r26, 0x00	; 0
     a36:	b0 e0       	ldi	r27, 0x00	; 0
     a38:	9a 01       	movw	r18, r20
     a3a:	ab 01       	movw	r20, r22
     a3c:	28 2b       	or	r18, r24
     a3e:	39 2b       	or	r19, r25
     a40:	4a 2b       	or	r20, r26
     a42:	5b 2b       	or	r21, r27
     a44:	da 01       	movw	r26, r20
     a46:	c9 01       	movw	r24, r18
     a48:	8f 77       	andi	r24, 0x7F	; 127
     a4a:	90 70       	andi	r25, 0x00	; 0
     a4c:	a0 70       	andi	r26, 0x00	; 0
     a4e:	b0 70       	andi	r27, 0x00	; 0
     a50:	80 34       	cpi	r24, 0x40	; 64
     a52:	91 05       	cpc	r25, r1
     a54:	a1 05       	cpc	r26, r1
     a56:	b1 05       	cpc	r27, r1
     a58:	39 f4       	brne	.+14     	; 0xa68 <__pack_f+0xee>
     a5a:	27 ff       	sbrs	r18, 7
     a5c:	09 c0       	rjmp	.+18     	; 0xa70 <__pack_f+0xf6>
     a5e:	20 5c       	subi	r18, 0xC0	; 192
     a60:	3f 4f       	sbci	r19, 0xFF	; 255
     a62:	4f 4f       	sbci	r20, 0xFF	; 255
     a64:	5f 4f       	sbci	r21, 0xFF	; 255
     a66:	04 c0       	rjmp	.+8      	; 0xa70 <__pack_f+0xf6>
     a68:	21 5c       	subi	r18, 0xC1	; 193
     a6a:	3f 4f       	sbci	r19, 0xFF	; 255
     a6c:	4f 4f       	sbci	r20, 0xFF	; 255
     a6e:	5f 4f       	sbci	r21, 0xFF	; 255
     a70:	e0 e0       	ldi	r30, 0x00	; 0
     a72:	f0 e0       	ldi	r31, 0x00	; 0
     a74:	20 30       	cpi	r18, 0x00	; 0
     a76:	a0 e0       	ldi	r26, 0x00	; 0
     a78:	3a 07       	cpc	r19, r26
     a7a:	a0 e0       	ldi	r26, 0x00	; 0
     a7c:	4a 07       	cpc	r20, r26
     a7e:	a0 e4       	ldi	r26, 0x40	; 64
     a80:	5a 07       	cpc	r21, r26
     a82:	10 f0       	brcs	.+4      	; 0xa88 <__pack_f+0x10e>
     a84:	e1 e0       	ldi	r30, 0x01	; 1
     a86:	f0 e0       	ldi	r31, 0x00	; 0
     a88:	79 01       	movw	r14, r18
     a8a:	8a 01       	movw	r16, r20
     a8c:	27 c0       	rjmp	.+78     	; 0xadc <__pack_f+0x162>
     a8e:	60 38       	cpi	r22, 0x80	; 128
     a90:	71 05       	cpc	r23, r1
     a92:	64 f5       	brge	.+88     	; 0xaec <__pack_f+0x172>
     a94:	fb 01       	movw	r30, r22
     a96:	e1 58       	subi	r30, 0x81	; 129
     a98:	ff 4f       	sbci	r31, 0xFF	; 255
     a9a:	d8 01       	movw	r26, r16
     a9c:	c7 01       	movw	r24, r14
     a9e:	8f 77       	andi	r24, 0x7F	; 127
     aa0:	90 70       	andi	r25, 0x00	; 0
     aa2:	a0 70       	andi	r26, 0x00	; 0
     aa4:	b0 70       	andi	r27, 0x00	; 0
     aa6:	80 34       	cpi	r24, 0x40	; 64
     aa8:	91 05       	cpc	r25, r1
     aaa:	a1 05       	cpc	r26, r1
     aac:	b1 05       	cpc	r27, r1
     aae:	39 f4       	brne	.+14     	; 0xabe <__pack_f+0x144>
     ab0:	e7 fe       	sbrs	r14, 7
     ab2:	0d c0       	rjmp	.+26     	; 0xace <__pack_f+0x154>
     ab4:	80 e4       	ldi	r24, 0x40	; 64
     ab6:	90 e0       	ldi	r25, 0x00	; 0
     ab8:	a0 e0       	ldi	r26, 0x00	; 0
     aba:	b0 e0       	ldi	r27, 0x00	; 0
     abc:	04 c0       	rjmp	.+8      	; 0xac6 <__pack_f+0x14c>
     abe:	8f e3       	ldi	r24, 0x3F	; 63
     ac0:	90 e0       	ldi	r25, 0x00	; 0
     ac2:	a0 e0       	ldi	r26, 0x00	; 0
     ac4:	b0 e0       	ldi	r27, 0x00	; 0
     ac6:	e8 0e       	add	r14, r24
     ac8:	f9 1e       	adc	r15, r25
     aca:	0a 1f       	adc	r16, r26
     acc:	1b 1f       	adc	r17, r27
     ace:	17 ff       	sbrs	r17, 7
     ad0:	05 c0       	rjmp	.+10     	; 0xadc <__pack_f+0x162>
     ad2:	16 95       	lsr	r17
     ad4:	07 95       	ror	r16
     ad6:	f7 94       	ror	r15
     ad8:	e7 94       	ror	r14
     ada:	31 96       	adiw	r30, 0x01	; 1
     adc:	87 e0       	ldi	r24, 0x07	; 7
     ade:	16 95       	lsr	r17
     ae0:	07 95       	ror	r16
     ae2:	f7 94       	ror	r15
     ae4:	e7 94       	ror	r14
     ae6:	8a 95       	dec	r24
     ae8:	d1 f7       	brne	.-12     	; 0xade <__pack_f+0x164>
     aea:	05 c0       	rjmp	.+10     	; 0xaf6 <__pack_f+0x17c>
     aec:	ee 24       	eor	r14, r14
     aee:	ff 24       	eor	r15, r15
     af0:	87 01       	movw	r16, r14
     af2:	ef ef       	ldi	r30, 0xFF	; 255
     af4:	f0 e0       	ldi	r31, 0x00	; 0
     af6:	6e 2f       	mov	r22, r30
     af8:	67 95       	ror	r22
     afa:	66 27       	eor	r22, r22
     afc:	67 95       	ror	r22
     afe:	90 2f       	mov	r25, r16
     b00:	9f 77       	andi	r25, 0x7F	; 127
     b02:	d7 94       	ror	r13
     b04:	dd 24       	eor	r13, r13
     b06:	d7 94       	ror	r13
     b08:	8e 2f       	mov	r24, r30
     b0a:	86 95       	lsr	r24
     b0c:	49 2f       	mov	r20, r25
     b0e:	46 2b       	or	r20, r22
     b10:	58 2f       	mov	r21, r24
     b12:	5d 29       	or	r21, r13
     b14:	b7 01       	movw	r22, r14
     b16:	ca 01       	movw	r24, r20
     b18:	1f 91       	pop	r17
     b1a:	0f 91       	pop	r16
     b1c:	ff 90       	pop	r15
     b1e:	ef 90       	pop	r14
     b20:	df 90       	pop	r13
     b22:	08 95       	ret

00000b24 <__unpack_f>:
     b24:	fc 01       	movw	r30, r24
     b26:	db 01       	movw	r26, r22
     b28:	40 81       	ld	r20, Z
     b2a:	51 81       	ldd	r21, Z+1	; 0x01
     b2c:	22 81       	ldd	r18, Z+2	; 0x02
     b2e:	62 2f       	mov	r22, r18
     b30:	6f 77       	andi	r22, 0x7F	; 127
     b32:	70 e0       	ldi	r23, 0x00	; 0
     b34:	22 1f       	adc	r18, r18
     b36:	22 27       	eor	r18, r18
     b38:	22 1f       	adc	r18, r18
     b3a:	93 81       	ldd	r25, Z+3	; 0x03
     b3c:	89 2f       	mov	r24, r25
     b3e:	88 0f       	add	r24, r24
     b40:	82 2b       	or	r24, r18
     b42:	28 2f       	mov	r18, r24
     b44:	30 e0       	ldi	r19, 0x00	; 0
     b46:	99 1f       	adc	r25, r25
     b48:	99 27       	eor	r25, r25
     b4a:	99 1f       	adc	r25, r25
     b4c:	11 96       	adiw	r26, 0x01	; 1
     b4e:	9c 93       	st	X, r25
     b50:	11 97       	sbiw	r26, 0x01	; 1
     b52:	21 15       	cp	r18, r1
     b54:	31 05       	cpc	r19, r1
     b56:	a9 f5       	brne	.+106    	; 0xbc2 <__unpack_f+0x9e>
     b58:	41 15       	cp	r20, r1
     b5a:	51 05       	cpc	r21, r1
     b5c:	61 05       	cpc	r22, r1
     b5e:	71 05       	cpc	r23, r1
     b60:	11 f4       	brne	.+4      	; 0xb66 <__unpack_f+0x42>
     b62:	82 e0       	ldi	r24, 0x02	; 2
     b64:	37 c0       	rjmp	.+110    	; 0xbd4 <__unpack_f+0xb0>
     b66:	82 e8       	ldi	r24, 0x82	; 130
     b68:	9f ef       	ldi	r25, 0xFF	; 255
     b6a:	13 96       	adiw	r26, 0x03	; 3
     b6c:	9c 93       	st	X, r25
     b6e:	8e 93       	st	-X, r24
     b70:	12 97       	sbiw	r26, 0x02	; 2
     b72:	9a 01       	movw	r18, r20
     b74:	ab 01       	movw	r20, r22
     b76:	67 e0       	ldi	r22, 0x07	; 7
     b78:	22 0f       	add	r18, r18
     b7a:	33 1f       	adc	r19, r19
     b7c:	44 1f       	adc	r20, r20
     b7e:	55 1f       	adc	r21, r21
     b80:	6a 95       	dec	r22
     b82:	d1 f7       	brne	.-12     	; 0xb78 <__unpack_f+0x54>
     b84:	83 e0       	ldi	r24, 0x03	; 3
     b86:	8c 93       	st	X, r24
     b88:	0d c0       	rjmp	.+26     	; 0xba4 <__unpack_f+0x80>
     b8a:	22 0f       	add	r18, r18
     b8c:	33 1f       	adc	r19, r19
     b8e:	44 1f       	adc	r20, r20
     b90:	55 1f       	adc	r21, r21
     b92:	12 96       	adiw	r26, 0x02	; 2
     b94:	8d 91       	ld	r24, X+
     b96:	9c 91       	ld	r25, X
     b98:	13 97       	sbiw	r26, 0x03	; 3
     b9a:	01 97       	sbiw	r24, 0x01	; 1
     b9c:	13 96       	adiw	r26, 0x03	; 3
     b9e:	9c 93       	st	X, r25
     ba0:	8e 93       	st	-X, r24
     ba2:	12 97       	sbiw	r26, 0x02	; 2
     ba4:	20 30       	cpi	r18, 0x00	; 0
     ba6:	80 e0       	ldi	r24, 0x00	; 0
     ba8:	38 07       	cpc	r19, r24
     baa:	80 e0       	ldi	r24, 0x00	; 0
     bac:	48 07       	cpc	r20, r24
     bae:	80 e4       	ldi	r24, 0x40	; 64
     bb0:	58 07       	cpc	r21, r24
     bb2:	58 f3       	brcs	.-42     	; 0xb8a <__unpack_f+0x66>
     bb4:	14 96       	adiw	r26, 0x04	; 4
     bb6:	2d 93       	st	X+, r18
     bb8:	3d 93       	st	X+, r19
     bba:	4d 93       	st	X+, r20
     bbc:	5c 93       	st	X, r21
     bbe:	17 97       	sbiw	r26, 0x07	; 7
     bc0:	08 95       	ret
     bc2:	2f 3f       	cpi	r18, 0xFF	; 255
     bc4:	31 05       	cpc	r19, r1
     bc6:	79 f4       	brne	.+30     	; 0xbe6 <__unpack_f+0xc2>
     bc8:	41 15       	cp	r20, r1
     bca:	51 05       	cpc	r21, r1
     bcc:	61 05       	cpc	r22, r1
     bce:	71 05       	cpc	r23, r1
     bd0:	19 f4       	brne	.+6      	; 0xbd8 <__unpack_f+0xb4>
     bd2:	84 e0       	ldi	r24, 0x04	; 4
     bd4:	8c 93       	st	X, r24
     bd6:	08 95       	ret
     bd8:	64 ff       	sbrs	r22, 4
     bda:	03 c0       	rjmp	.+6      	; 0xbe2 <__unpack_f+0xbe>
     bdc:	81 e0       	ldi	r24, 0x01	; 1
     bde:	8c 93       	st	X, r24
     be0:	12 c0       	rjmp	.+36     	; 0xc06 <__unpack_f+0xe2>
     be2:	1c 92       	st	X, r1
     be4:	10 c0       	rjmp	.+32     	; 0xc06 <__unpack_f+0xe2>
     be6:	2f 57       	subi	r18, 0x7F	; 127
     be8:	30 40       	sbci	r19, 0x00	; 0
     bea:	13 96       	adiw	r26, 0x03	; 3
     bec:	3c 93       	st	X, r19
     bee:	2e 93       	st	-X, r18
     bf0:	12 97       	sbiw	r26, 0x02	; 2
     bf2:	83 e0       	ldi	r24, 0x03	; 3
     bf4:	8c 93       	st	X, r24
     bf6:	87 e0       	ldi	r24, 0x07	; 7
     bf8:	44 0f       	add	r20, r20
     bfa:	55 1f       	adc	r21, r21
     bfc:	66 1f       	adc	r22, r22
     bfe:	77 1f       	adc	r23, r23
     c00:	8a 95       	dec	r24
     c02:	d1 f7       	brne	.-12     	; 0xbf8 <__unpack_f+0xd4>
     c04:	70 64       	ori	r23, 0x40	; 64
     c06:	14 96       	adiw	r26, 0x04	; 4
     c08:	4d 93       	st	X+, r20
     c0a:	5d 93       	st	X+, r21
     c0c:	6d 93       	st	X+, r22
     c0e:	7c 93       	st	X, r23
     c10:	17 97       	sbiw	r26, 0x07	; 7
     c12:	08 95       	ret

00000c14 <__fpcmp_parts_f>:
     c14:	1f 93       	push	r17
     c16:	dc 01       	movw	r26, r24
     c18:	fb 01       	movw	r30, r22
     c1a:	9c 91       	ld	r25, X
     c1c:	92 30       	cpi	r25, 0x02	; 2
     c1e:	08 f4       	brcc	.+2      	; 0xc22 <__fpcmp_parts_f+0xe>
     c20:	47 c0       	rjmp	.+142    	; 0xcb0 <__fpcmp_parts_f+0x9c>
     c22:	80 81       	ld	r24, Z
     c24:	82 30       	cpi	r24, 0x02	; 2
     c26:	08 f4       	brcc	.+2      	; 0xc2a <__fpcmp_parts_f+0x16>
     c28:	43 c0       	rjmp	.+134    	; 0xcb0 <__fpcmp_parts_f+0x9c>
     c2a:	94 30       	cpi	r25, 0x04	; 4
     c2c:	51 f4       	brne	.+20     	; 0xc42 <__fpcmp_parts_f+0x2e>
     c2e:	11 96       	adiw	r26, 0x01	; 1
     c30:	1c 91       	ld	r17, X
     c32:	84 30       	cpi	r24, 0x04	; 4
     c34:	99 f5       	brne	.+102    	; 0xc9c <__fpcmp_parts_f+0x88>
     c36:	81 81       	ldd	r24, Z+1	; 0x01
     c38:	68 2f       	mov	r22, r24
     c3a:	70 e0       	ldi	r23, 0x00	; 0
     c3c:	61 1b       	sub	r22, r17
     c3e:	71 09       	sbc	r23, r1
     c40:	3f c0       	rjmp	.+126    	; 0xcc0 <__fpcmp_parts_f+0xac>
     c42:	84 30       	cpi	r24, 0x04	; 4
     c44:	21 f0       	breq	.+8      	; 0xc4e <__fpcmp_parts_f+0x3a>
     c46:	92 30       	cpi	r25, 0x02	; 2
     c48:	31 f4       	brne	.+12     	; 0xc56 <__fpcmp_parts_f+0x42>
     c4a:	82 30       	cpi	r24, 0x02	; 2
     c4c:	b9 f1       	breq	.+110    	; 0xcbc <__fpcmp_parts_f+0xa8>
     c4e:	81 81       	ldd	r24, Z+1	; 0x01
     c50:	88 23       	and	r24, r24
     c52:	89 f1       	breq	.+98     	; 0xcb6 <__fpcmp_parts_f+0xa2>
     c54:	2d c0       	rjmp	.+90     	; 0xcb0 <__fpcmp_parts_f+0x9c>
     c56:	11 96       	adiw	r26, 0x01	; 1
     c58:	1c 91       	ld	r17, X
     c5a:	11 97       	sbiw	r26, 0x01	; 1
     c5c:	82 30       	cpi	r24, 0x02	; 2
     c5e:	f1 f0       	breq	.+60     	; 0xc9c <__fpcmp_parts_f+0x88>
     c60:	81 81       	ldd	r24, Z+1	; 0x01
     c62:	18 17       	cp	r17, r24
     c64:	d9 f4       	brne	.+54     	; 0xc9c <__fpcmp_parts_f+0x88>
     c66:	12 96       	adiw	r26, 0x02	; 2
     c68:	2d 91       	ld	r18, X+
     c6a:	3c 91       	ld	r19, X
     c6c:	13 97       	sbiw	r26, 0x03	; 3
     c6e:	82 81       	ldd	r24, Z+2	; 0x02
     c70:	93 81       	ldd	r25, Z+3	; 0x03
     c72:	82 17       	cp	r24, r18
     c74:	93 07       	cpc	r25, r19
     c76:	94 f0       	brlt	.+36     	; 0xc9c <__fpcmp_parts_f+0x88>
     c78:	28 17       	cp	r18, r24
     c7a:	39 07       	cpc	r19, r25
     c7c:	bc f0       	brlt	.+46     	; 0xcac <__fpcmp_parts_f+0x98>
     c7e:	14 96       	adiw	r26, 0x04	; 4
     c80:	8d 91       	ld	r24, X+
     c82:	9d 91       	ld	r25, X+
     c84:	0d 90       	ld	r0, X+
     c86:	bc 91       	ld	r27, X
     c88:	a0 2d       	mov	r26, r0
     c8a:	24 81       	ldd	r18, Z+4	; 0x04
     c8c:	35 81       	ldd	r19, Z+5	; 0x05
     c8e:	46 81       	ldd	r20, Z+6	; 0x06
     c90:	57 81       	ldd	r21, Z+7	; 0x07
     c92:	28 17       	cp	r18, r24
     c94:	39 07       	cpc	r19, r25
     c96:	4a 07       	cpc	r20, r26
     c98:	5b 07       	cpc	r21, r27
     c9a:	18 f4       	brcc	.+6      	; 0xca2 <__fpcmp_parts_f+0x8e>
     c9c:	11 23       	and	r17, r17
     c9e:	41 f0       	breq	.+16     	; 0xcb0 <__fpcmp_parts_f+0x9c>
     ca0:	0a c0       	rjmp	.+20     	; 0xcb6 <__fpcmp_parts_f+0xa2>
     ca2:	82 17       	cp	r24, r18
     ca4:	93 07       	cpc	r25, r19
     ca6:	a4 07       	cpc	r26, r20
     ca8:	b5 07       	cpc	r27, r21
     caa:	40 f4       	brcc	.+16     	; 0xcbc <__fpcmp_parts_f+0xa8>
     cac:	11 23       	and	r17, r17
     cae:	19 f0       	breq	.+6      	; 0xcb6 <__fpcmp_parts_f+0xa2>
     cb0:	61 e0       	ldi	r22, 0x01	; 1
     cb2:	70 e0       	ldi	r23, 0x00	; 0
     cb4:	05 c0       	rjmp	.+10     	; 0xcc0 <__fpcmp_parts_f+0xac>
     cb6:	6f ef       	ldi	r22, 0xFF	; 255
     cb8:	7f ef       	ldi	r23, 0xFF	; 255
     cba:	02 c0       	rjmp	.+4      	; 0xcc0 <__fpcmp_parts_f+0xac>
     cbc:	60 e0       	ldi	r22, 0x00	; 0
     cbe:	70 e0       	ldi	r23, 0x00	; 0
     cc0:	cb 01       	movw	r24, r22
     cc2:	1f 91       	pop	r17
     cc4:	08 95       	ret

00000cc6 <HStepper_init>:
/*------------------------------------------------------------*/
/*             functions implementations                      */
/*------------------------------------------------------------*/


void HStepper_init(u8 copy_u8StepperDir) {
     cc6:	df 93       	push	r29
     cc8:	cf 93       	push	r28
     cca:	0f 92       	push	r0
     ccc:	cd b7       	in	r28, 0x3d	; 61
     cce:	de b7       	in	r29, 0x3e	; 62
     cd0:	89 83       	std	Y+1, r24	; 0x01
	MDIO_vSetPortDirection(STEPPER_PORT, copy_u8StepperDir);
     cd2:	83 e0       	ldi	r24, 0x03	; 3
     cd4:	69 81       	ldd	r22, Y+1	; 0x01
     cd6:	0e 94 63 18 	call	0x30c6	; 0x30c6 <MDIO_vSetPortDirection>

}
     cda:	0f 90       	pop	r0
     cdc:	cf 91       	pop	r28
     cde:	df 91       	pop	r29
     ce0:	08 95       	ret

00000ce2 <HStepper_DIR_MODE>:

void HStepper_DIR_MODE(u8 DIRECTION,u8 steps_mode)

{
     ce2:	0f 93       	push	r16
     ce4:	1f 93       	push	r17
     ce6:	df 93       	push	r29
     ce8:	cf 93       	push	r28
     cea:	cd b7       	in	r28, 0x3d	; 61
     cec:	de b7       	in	r29, 0x3e	; 62
     cee:	c6 55       	subi	r28, 0x56	; 86
     cf0:	d1 40       	sbci	r29, 0x01	; 1
     cf2:	0f b6       	in	r0, 0x3f	; 63
     cf4:	f8 94       	cli
     cf6:	de bf       	out	0x3e, r29	; 62
     cf8:	0f be       	out	0x3f, r0	; 63
     cfa:	cd bf       	out	0x3d, r28	; 61
     cfc:	fe 01       	movw	r30, r28
     cfe:	ef 5a       	subi	r30, 0xAF	; 175
     d00:	fe 4f       	sbci	r31, 0xFE	; 254
     d02:	80 83       	st	Z, r24
     d04:	fe 01       	movw	r30, r28
     d06:	ee 5a       	subi	r30, 0xAE	; 174
     d08:	fe 4f       	sbci	r31, 0xFE	; 254
     d0a:	60 83       	st	Z, r22
	if (steps_mode==Full_step)
     d0c:	fe 01       	movw	r30, r28
     d0e:	ee 5a       	subi	r30, 0xAE	; 174
     d10:	fe 4f       	sbci	r31, 0xFE	; 254
     d12:	80 81       	ld	r24, Z
     d14:	81 30       	cpi	r24, 0x01	; 1
     d16:	09 f0       	breq	.+2      	; 0xd1a <HStepper_DIR_MODE+0x38>
     d18:	61 c6       	rjmp	.+3266   	; 0x19dc <HStepper_DIR_MODE+0xcfa>
	{



	switch (DIRECTION) {
     d1a:	fe 01       	movw	r30, r28
     d1c:	ef 5a       	subi	r30, 0xAF	; 175
     d1e:	fe 4f       	sbci	r31, 0xFE	; 254
     d20:	80 81       	ld	r24, Z
     d22:	28 2f       	mov	r18, r24
     d24:	30 e0       	ldi	r19, 0x00	; 0
     d26:	cb 5a       	subi	r28, 0xAB	; 171
     d28:	de 4f       	sbci	r29, 0xFE	; 254
     d2a:	39 83       	std	Y+1, r19	; 0x01
     d2c:	28 83       	st	Y, r18
     d2e:	c5 55       	subi	r28, 0x55	; 85
     d30:	d1 40       	sbci	r29, 0x01	; 1
     d32:	cb 5a       	subi	r28, 0xAB	; 171
     d34:	de 4f       	sbci	r29, 0xFE	; 254
     d36:	88 81       	ld	r24, Y
     d38:	99 81       	ldd	r25, Y+1	; 0x01
     d3a:	c5 55       	subi	r28, 0x55	; 85
     d3c:	d1 40       	sbci	r29, 0x01	; 1
     d3e:	81 30       	cpi	r24, 0x01	; 1
     d40:	91 05       	cpc	r25, r1
     d42:	61 f0       	breq	.+24     	; 0xd5c <HStepper_DIR_MODE+0x7a>
     d44:	cb 5a       	subi	r28, 0xAB	; 171
     d46:	de 4f       	sbci	r29, 0xFE	; 254
     d48:	e8 81       	ld	r30, Y
     d4a:	f9 81       	ldd	r31, Y+1	; 0x01
     d4c:	c5 55       	subi	r28, 0x55	; 85
     d4e:	d1 40       	sbci	r29, 0x01	; 1
     d50:	e2 30       	cpi	r30, 0x02	; 2
     d52:	f1 05       	cpc	r31, r1
     d54:	09 f4       	brne	.+2      	; 0xd58 <HStepper_DIR_MODE+0x76>
     d56:	22 c3       	rjmp	.+1604   	; 0x139c <HStepper_DIR_MODE+0x6ba>
     d58:	0c 94 57 18 	jmp	0x30ae	; 0x30ae <HStepper_DIR_MODE+0x23cc>
	case ClockWise:

		MDIO_vSetPinValue(HW_PORT,Coil_Blue,DIO_HIGH);
     d5c:	83 e0       	ldi	r24, 0x03	; 3
     d5e:	60 e0       	ldi	r22, 0x00	; 0
     d60:	41 e0       	ldi	r20, 0x01	; 1
     d62:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
		MDIO_vSetPinValue(HW_PORT,Coil_Pink,DIO_LOW);
     d66:	83 e0       	ldi	r24, 0x03	; 3
     d68:	61 e0       	ldi	r22, 0x01	; 1
     d6a:	40 e0       	ldi	r20, 0x00	; 0
     d6c:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
		MDIO_vSetPinValue(HW_PORT,Coil_Yellow,DIO_LOW);
     d70:	83 e0       	ldi	r24, 0x03	; 3
     d72:	62 e0       	ldi	r22, 0x02	; 2
     d74:	40 e0       	ldi	r20, 0x00	; 0
     d76:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
		MDIO_vSetPinValue(HW_PORT,Coil_Orange,DIO_LOW);
     d7a:	83 e0       	ldi	r24, 0x03	; 3
     d7c:	63 e0       	ldi	r22, 0x03	; 3
     d7e:	40 e0       	ldi	r20, 0x00	; 0
     d80:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
     d84:	fe 01       	movw	r30, r28
     d86:	e3 5b       	subi	r30, 0xB3	; 179
     d88:	fe 4f       	sbci	r31, 0xFE	; 254
     d8a:	80 e0       	ldi	r24, 0x00	; 0
     d8c:	90 e0       	ldi	r25, 0x00	; 0
     d8e:	a0 ea       	ldi	r26, 0xA0	; 160
     d90:	b0 e4       	ldi	r27, 0x40	; 64
     d92:	80 83       	st	Z, r24
     d94:	91 83       	std	Z+1, r25	; 0x01
     d96:	a2 83       	std	Z+2, r26	; 0x02
     d98:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     d9a:	8e 01       	movw	r16, r28
     d9c:	07 5b       	subi	r16, 0xB7	; 183
     d9e:	1e 4f       	sbci	r17, 0xFE	; 254
     da0:	fe 01       	movw	r30, r28
     da2:	e3 5b       	subi	r30, 0xB3	; 179
     da4:	fe 4f       	sbci	r31, 0xFE	; 254
     da6:	60 81       	ld	r22, Z
     da8:	71 81       	ldd	r23, Z+1	; 0x01
     daa:	82 81       	ldd	r24, Z+2	; 0x02
     dac:	93 81       	ldd	r25, Z+3	; 0x03
     dae:	20 e0       	ldi	r18, 0x00	; 0
     db0:	30 e0       	ldi	r19, 0x00	; 0
     db2:	4a ef       	ldi	r20, 0xFA	; 250
     db4:	54 e4       	ldi	r21, 0x44	; 68
     db6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     dba:	dc 01       	movw	r26, r24
     dbc:	cb 01       	movw	r24, r22
     dbe:	f8 01       	movw	r30, r16
     dc0:	80 83       	st	Z, r24
     dc2:	91 83       	std	Z+1, r25	; 0x01
     dc4:	a2 83       	std	Z+2, r26	; 0x02
     dc6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     dc8:	fe 01       	movw	r30, r28
     dca:	e7 5b       	subi	r30, 0xB7	; 183
     dcc:	fe 4f       	sbci	r31, 0xFE	; 254
     dce:	60 81       	ld	r22, Z
     dd0:	71 81       	ldd	r23, Z+1	; 0x01
     dd2:	82 81       	ldd	r24, Z+2	; 0x02
     dd4:	93 81       	ldd	r25, Z+3	; 0x03
     dd6:	20 e0       	ldi	r18, 0x00	; 0
     dd8:	30 e0       	ldi	r19, 0x00	; 0
     dda:	40 e8       	ldi	r20, 0x80	; 128
     ddc:	5f e3       	ldi	r21, 0x3F	; 63
     dde:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
     de2:	88 23       	and	r24, r24
     de4:	44 f4       	brge	.+16     	; 0xdf6 <HStepper_DIR_MODE+0x114>
		__ticks = 1;
     de6:	fe 01       	movw	r30, r28
     de8:	e9 5b       	subi	r30, 0xB9	; 185
     dea:	fe 4f       	sbci	r31, 0xFE	; 254
     dec:	81 e0       	ldi	r24, 0x01	; 1
     dee:	90 e0       	ldi	r25, 0x00	; 0
     df0:	91 83       	std	Z+1, r25	; 0x01
     df2:	80 83       	st	Z, r24
     df4:	64 c0       	rjmp	.+200    	; 0xebe <HStepper_DIR_MODE+0x1dc>
	else if (__tmp > 65535)
     df6:	fe 01       	movw	r30, r28
     df8:	e7 5b       	subi	r30, 0xB7	; 183
     dfa:	fe 4f       	sbci	r31, 0xFE	; 254
     dfc:	60 81       	ld	r22, Z
     dfe:	71 81       	ldd	r23, Z+1	; 0x01
     e00:	82 81       	ldd	r24, Z+2	; 0x02
     e02:	93 81       	ldd	r25, Z+3	; 0x03
     e04:	20 e0       	ldi	r18, 0x00	; 0
     e06:	3f ef       	ldi	r19, 0xFF	; 255
     e08:	4f e7       	ldi	r20, 0x7F	; 127
     e0a:	57 e4       	ldi	r21, 0x47	; 71
     e0c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
     e10:	18 16       	cp	r1, r24
     e12:	0c f0       	brlt	.+2      	; 0xe16 <HStepper_DIR_MODE+0x134>
     e14:	43 c0       	rjmp	.+134    	; 0xe9c <HStepper_DIR_MODE+0x1ba>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     e16:	fe 01       	movw	r30, r28
     e18:	e3 5b       	subi	r30, 0xB3	; 179
     e1a:	fe 4f       	sbci	r31, 0xFE	; 254
     e1c:	60 81       	ld	r22, Z
     e1e:	71 81       	ldd	r23, Z+1	; 0x01
     e20:	82 81       	ldd	r24, Z+2	; 0x02
     e22:	93 81       	ldd	r25, Z+3	; 0x03
     e24:	20 e0       	ldi	r18, 0x00	; 0
     e26:	30 e0       	ldi	r19, 0x00	; 0
     e28:	40 e2       	ldi	r20, 0x20	; 32
     e2a:	51 e4       	ldi	r21, 0x41	; 65
     e2c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     e30:	dc 01       	movw	r26, r24
     e32:	cb 01       	movw	r24, r22
     e34:	8e 01       	movw	r16, r28
     e36:	09 5b       	subi	r16, 0xB9	; 185
     e38:	1e 4f       	sbci	r17, 0xFE	; 254
     e3a:	bc 01       	movw	r22, r24
     e3c:	cd 01       	movw	r24, r26
     e3e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     e42:	dc 01       	movw	r26, r24
     e44:	cb 01       	movw	r24, r22
     e46:	f8 01       	movw	r30, r16
     e48:	91 83       	std	Z+1, r25	; 0x01
     e4a:	80 83       	st	Z, r24
     e4c:	1f c0       	rjmp	.+62     	; 0xe8c <HStepper_DIR_MODE+0x1aa>
     e4e:	fe 01       	movw	r30, r28
     e50:	eb 5b       	subi	r30, 0xBB	; 187
     e52:	fe 4f       	sbci	r31, 0xFE	; 254
     e54:	88 ec       	ldi	r24, 0xC8	; 200
     e56:	90 e0       	ldi	r25, 0x00	; 0
     e58:	91 83       	std	Z+1, r25	; 0x01
     e5a:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     e5c:	fe 01       	movw	r30, r28
     e5e:	eb 5b       	subi	r30, 0xBB	; 187
     e60:	fe 4f       	sbci	r31, 0xFE	; 254
     e62:	80 81       	ld	r24, Z
     e64:	91 81       	ldd	r25, Z+1	; 0x01
     e66:	01 97       	sbiw	r24, 0x01	; 1
     e68:	f1 f7       	brne	.-4      	; 0xe66 <HStepper_DIR_MODE+0x184>
     e6a:	fe 01       	movw	r30, r28
     e6c:	eb 5b       	subi	r30, 0xBB	; 187
     e6e:	fe 4f       	sbci	r31, 0xFE	; 254
     e70:	91 83       	std	Z+1, r25	; 0x01
     e72:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     e74:	de 01       	movw	r26, r28
     e76:	a9 5b       	subi	r26, 0xB9	; 185
     e78:	be 4f       	sbci	r27, 0xFE	; 254
     e7a:	fe 01       	movw	r30, r28
     e7c:	e9 5b       	subi	r30, 0xB9	; 185
     e7e:	fe 4f       	sbci	r31, 0xFE	; 254
     e80:	80 81       	ld	r24, Z
     e82:	91 81       	ldd	r25, Z+1	; 0x01
     e84:	01 97       	sbiw	r24, 0x01	; 1
     e86:	11 96       	adiw	r26, 0x01	; 1
     e88:	9c 93       	st	X, r25
     e8a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     e8c:	fe 01       	movw	r30, r28
     e8e:	e9 5b       	subi	r30, 0xB9	; 185
     e90:	fe 4f       	sbci	r31, 0xFE	; 254
     e92:	80 81       	ld	r24, Z
     e94:	91 81       	ldd	r25, Z+1	; 0x01
     e96:	00 97       	sbiw	r24, 0x00	; 0
     e98:	d1 f6       	brne	.-76     	; 0xe4e <HStepper_DIR_MODE+0x16c>
     e9a:	27 c0       	rjmp	.+78     	; 0xeea <HStepper_DIR_MODE+0x208>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     e9c:	8e 01       	movw	r16, r28
     e9e:	09 5b       	subi	r16, 0xB9	; 185
     ea0:	1e 4f       	sbci	r17, 0xFE	; 254
     ea2:	fe 01       	movw	r30, r28
     ea4:	e7 5b       	subi	r30, 0xB7	; 183
     ea6:	fe 4f       	sbci	r31, 0xFE	; 254
     ea8:	60 81       	ld	r22, Z
     eaa:	71 81       	ldd	r23, Z+1	; 0x01
     eac:	82 81       	ldd	r24, Z+2	; 0x02
     eae:	93 81       	ldd	r25, Z+3	; 0x03
     eb0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     eb4:	dc 01       	movw	r26, r24
     eb6:	cb 01       	movw	r24, r22
     eb8:	f8 01       	movw	r30, r16
     eba:	91 83       	std	Z+1, r25	; 0x01
     ebc:	80 83       	st	Z, r24
     ebe:	de 01       	movw	r26, r28
     ec0:	ad 5b       	subi	r26, 0xBD	; 189
     ec2:	be 4f       	sbci	r27, 0xFE	; 254
     ec4:	fe 01       	movw	r30, r28
     ec6:	e9 5b       	subi	r30, 0xB9	; 185
     ec8:	fe 4f       	sbci	r31, 0xFE	; 254
     eca:	80 81       	ld	r24, Z
     ecc:	91 81       	ldd	r25, Z+1	; 0x01
     ece:	8d 93       	st	X+, r24
     ed0:	9c 93       	st	X, r25
     ed2:	fe 01       	movw	r30, r28
     ed4:	ed 5b       	subi	r30, 0xBD	; 189
     ed6:	fe 4f       	sbci	r31, 0xFE	; 254
     ed8:	80 81       	ld	r24, Z
     eda:	91 81       	ldd	r25, Z+1	; 0x01
     edc:	01 97       	sbiw	r24, 0x01	; 1
     ede:	f1 f7       	brne	.-4      	; 0xedc <HStepper_DIR_MODE+0x1fa>
     ee0:	fe 01       	movw	r30, r28
     ee2:	ed 5b       	subi	r30, 0xBD	; 189
     ee4:	fe 4f       	sbci	r31, 0xFE	; 254
     ee6:	91 83       	std	Z+1, r25	; 0x01
     ee8:	80 83       	st	Z, r24

/*		HW_PORT=HW_PORT |(1<<Coil_Blue) & ~(1<<Coil_Pink) & ~(1<<Coil_Yellow) & ~(1<<Coil_Orange);*/

		_delay_ms(Stepper_speed);

		MDIO_vSetPinValue(HW_PORT,Coil_Blue,DIO_LOW);
     eea:	83 e0       	ldi	r24, 0x03	; 3
     eec:	60 e0       	ldi	r22, 0x00	; 0
     eee:	40 e0       	ldi	r20, 0x00	; 0
     ef0:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
		MDIO_vSetPinValue(HW_PORT,Coil_Pink,DIO_HIGH);
     ef4:	83 e0       	ldi	r24, 0x03	; 3
     ef6:	61 e0       	ldi	r22, 0x01	; 1
     ef8:	41 e0       	ldi	r20, 0x01	; 1
     efa:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
		MDIO_vSetPinValue(HW_PORT,Coil_Yellow,DIO_LOW);
     efe:	83 e0       	ldi	r24, 0x03	; 3
     f00:	62 e0       	ldi	r22, 0x02	; 2
     f02:	40 e0       	ldi	r20, 0x00	; 0
     f04:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
		MDIO_vSetPinValue(HW_PORT,Coil_Orange,DIO_LOW);
     f08:	83 e0       	ldi	r24, 0x03	; 3
     f0a:	63 e0       	ldi	r22, 0x03	; 3
     f0c:	40 e0       	ldi	r20, 0x00	; 0
     f0e:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
     f12:	fe 01       	movw	r30, r28
     f14:	e1 5c       	subi	r30, 0xC1	; 193
     f16:	fe 4f       	sbci	r31, 0xFE	; 254
     f18:	80 e0       	ldi	r24, 0x00	; 0
     f1a:	90 e0       	ldi	r25, 0x00	; 0
     f1c:	a0 ea       	ldi	r26, 0xA0	; 160
     f1e:	b0 e4       	ldi	r27, 0x40	; 64
     f20:	80 83       	st	Z, r24
     f22:	91 83       	std	Z+1, r25	; 0x01
     f24:	a2 83       	std	Z+2, r26	; 0x02
     f26:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     f28:	8e 01       	movw	r16, r28
     f2a:	05 5c       	subi	r16, 0xC5	; 197
     f2c:	1e 4f       	sbci	r17, 0xFE	; 254
     f2e:	fe 01       	movw	r30, r28
     f30:	e1 5c       	subi	r30, 0xC1	; 193
     f32:	fe 4f       	sbci	r31, 0xFE	; 254
     f34:	60 81       	ld	r22, Z
     f36:	71 81       	ldd	r23, Z+1	; 0x01
     f38:	82 81       	ldd	r24, Z+2	; 0x02
     f3a:	93 81       	ldd	r25, Z+3	; 0x03
     f3c:	20 e0       	ldi	r18, 0x00	; 0
     f3e:	30 e0       	ldi	r19, 0x00	; 0
     f40:	4a ef       	ldi	r20, 0xFA	; 250
     f42:	54 e4       	ldi	r21, 0x44	; 68
     f44:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     f48:	dc 01       	movw	r26, r24
     f4a:	cb 01       	movw	r24, r22
     f4c:	f8 01       	movw	r30, r16
     f4e:	80 83       	st	Z, r24
     f50:	91 83       	std	Z+1, r25	; 0x01
     f52:	a2 83       	std	Z+2, r26	; 0x02
     f54:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     f56:	fe 01       	movw	r30, r28
     f58:	e5 5c       	subi	r30, 0xC5	; 197
     f5a:	fe 4f       	sbci	r31, 0xFE	; 254
     f5c:	60 81       	ld	r22, Z
     f5e:	71 81       	ldd	r23, Z+1	; 0x01
     f60:	82 81       	ldd	r24, Z+2	; 0x02
     f62:	93 81       	ldd	r25, Z+3	; 0x03
     f64:	20 e0       	ldi	r18, 0x00	; 0
     f66:	30 e0       	ldi	r19, 0x00	; 0
     f68:	40 e8       	ldi	r20, 0x80	; 128
     f6a:	5f e3       	ldi	r21, 0x3F	; 63
     f6c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
     f70:	88 23       	and	r24, r24
     f72:	44 f4       	brge	.+16     	; 0xf84 <HStepper_DIR_MODE+0x2a2>
		__ticks = 1;
     f74:	fe 01       	movw	r30, r28
     f76:	e7 5c       	subi	r30, 0xC7	; 199
     f78:	fe 4f       	sbci	r31, 0xFE	; 254
     f7a:	81 e0       	ldi	r24, 0x01	; 1
     f7c:	90 e0       	ldi	r25, 0x00	; 0
     f7e:	91 83       	std	Z+1, r25	; 0x01
     f80:	80 83       	st	Z, r24
     f82:	64 c0       	rjmp	.+200    	; 0x104c <HStepper_DIR_MODE+0x36a>
	else if (__tmp > 65535)
     f84:	fe 01       	movw	r30, r28
     f86:	e5 5c       	subi	r30, 0xC5	; 197
     f88:	fe 4f       	sbci	r31, 0xFE	; 254
     f8a:	60 81       	ld	r22, Z
     f8c:	71 81       	ldd	r23, Z+1	; 0x01
     f8e:	82 81       	ldd	r24, Z+2	; 0x02
     f90:	93 81       	ldd	r25, Z+3	; 0x03
     f92:	20 e0       	ldi	r18, 0x00	; 0
     f94:	3f ef       	ldi	r19, 0xFF	; 255
     f96:	4f e7       	ldi	r20, 0x7F	; 127
     f98:	57 e4       	ldi	r21, 0x47	; 71
     f9a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
     f9e:	18 16       	cp	r1, r24
     fa0:	0c f0       	brlt	.+2      	; 0xfa4 <HStepper_DIR_MODE+0x2c2>
     fa2:	43 c0       	rjmp	.+134    	; 0x102a <HStepper_DIR_MODE+0x348>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     fa4:	fe 01       	movw	r30, r28
     fa6:	e1 5c       	subi	r30, 0xC1	; 193
     fa8:	fe 4f       	sbci	r31, 0xFE	; 254
     faa:	60 81       	ld	r22, Z
     fac:	71 81       	ldd	r23, Z+1	; 0x01
     fae:	82 81       	ldd	r24, Z+2	; 0x02
     fb0:	93 81       	ldd	r25, Z+3	; 0x03
     fb2:	20 e0       	ldi	r18, 0x00	; 0
     fb4:	30 e0       	ldi	r19, 0x00	; 0
     fb6:	40 e2       	ldi	r20, 0x20	; 32
     fb8:	51 e4       	ldi	r21, 0x41	; 65
     fba:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     fbe:	dc 01       	movw	r26, r24
     fc0:	cb 01       	movw	r24, r22
     fc2:	8e 01       	movw	r16, r28
     fc4:	07 5c       	subi	r16, 0xC7	; 199
     fc6:	1e 4f       	sbci	r17, 0xFE	; 254
     fc8:	bc 01       	movw	r22, r24
     fca:	cd 01       	movw	r24, r26
     fcc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     fd0:	dc 01       	movw	r26, r24
     fd2:	cb 01       	movw	r24, r22
     fd4:	f8 01       	movw	r30, r16
     fd6:	91 83       	std	Z+1, r25	; 0x01
     fd8:	80 83       	st	Z, r24
     fda:	1f c0       	rjmp	.+62     	; 0x101a <HStepper_DIR_MODE+0x338>
     fdc:	fe 01       	movw	r30, r28
     fde:	e9 5c       	subi	r30, 0xC9	; 201
     fe0:	fe 4f       	sbci	r31, 0xFE	; 254
     fe2:	88 ec       	ldi	r24, 0xC8	; 200
     fe4:	90 e0       	ldi	r25, 0x00	; 0
     fe6:	91 83       	std	Z+1, r25	; 0x01
     fe8:	80 83       	st	Z, r24
     fea:	fe 01       	movw	r30, r28
     fec:	e9 5c       	subi	r30, 0xC9	; 201
     fee:	fe 4f       	sbci	r31, 0xFE	; 254
     ff0:	80 81       	ld	r24, Z
     ff2:	91 81       	ldd	r25, Z+1	; 0x01
     ff4:	01 97       	sbiw	r24, 0x01	; 1
     ff6:	f1 f7       	brne	.-4      	; 0xff4 <HStepper_DIR_MODE+0x312>
     ff8:	fe 01       	movw	r30, r28
     ffa:	e9 5c       	subi	r30, 0xC9	; 201
     ffc:	fe 4f       	sbci	r31, 0xFE	; 254
     ffe:	91 83       	std	Z+1, r25	; 0x01
    1000:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1002:	de 01       	movw	r26, r28
    1004:	a7 5c       	subi	r26, 0xC7	; 199
    1006:	be 4f       	sbci	r27, 0xFE	; 254
    1008:	fe 01       	movw	r30, r28
    100a:	e7 5c       	subi	r30, 0xC7	; 199
    100c:	fe 4f       	sbci	r31, 0xFE	; 254
    100e:	80 81       	ld	r24, Z
    1010:	91 81       	ldd	r25, Z+1	; 0x01
    1012:	01 97       	sbiw	r24, 0x01	; 1
    1014:	11 96       	adiw	r26, 0x01	; 1
    1016:	9c 93       	st	X, r25
    1018:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    101a:	fe 01       	movw	r30, r28
    101c:	e7 5c       	subi	r30, 0xC7	; 199
    101e:	fe 4f       	sbci	r31, 0xFE	; 254
    1020:	80 81       	ld	r24, Z
    1022:	91 81       	ldd	r25, Z+1	; 0x01
    1024:	00 97       	sbiw	r24, 0x00	; 0
    1026:	d1 f6       	brne	.-76     	; 0xfdc <HStepper_DIR_MODE+0x2fa>
    1028:	27 c0       	rjmp	.+78     	; 0x1078 <HStepper_DIR_MODE+0x396>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    102a:	8e 01       	movw	r16, r28
    102c:	07 5c       	subi	r16, 0xC7	; 199
    102e:	1e 4f       	sbci	r17, 0xFE	; 254
    1030:	fe 01       	movw	r30, r28
    1032:	e5 5c       	subi	r30, 0xC5	; 197
    1034:	fe 4f       	sbci	r31, 0xFE	; 254
    1036:	60 81       	ld	r22, Z
    1038:	71 81       	ldd	r23, Z+1	; 0x01
    103a:	82 81       	ldd	r24, Z+2	; 0x02
    103c:	93 81       	ldd	r25, Z+3	; 0x03
    103e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1042:	dc 01       	movw	r26, r24
    1044:	cb 01       	movw	r24, r22
    1046:	f8 01       	movw	r30, r16
    1048:	91 83       	std	Z+1, r25	; 0x01
    104a:	80 83       	st	Z, r24
    104c:	de 01       	movw	r26, r28
    104e:	ab 5c       	subi	r26, 0xCB	; 203
    1050:	be 4f       	sbci	r27, 0xFE	; 254
    1052:	fe 01       	movw	r30, r28
    1054:	e7 5c       	subi	r30, 0xC7	; 199
    1056:	fe 4f       	sbci	r31, 0xFE	; 254
    1058:	80 81       	ld	r24, Z
    105a:	91 81       	ldd	r25, Z+1	; 0x01
    105c:	8d 93       	st	X+, r24
    105e:	9c 93       	st	X, r25
    1060:	fe 01       	movw	r30, r28
    1062:	eb 5c       	subi	r30, 0xCB	; 203
    1064:	fe 4f       	sbci	r31, 0xFE	; 254
    1066:	80 81       	ld	r24, Z
    1068:	91 81       	ldd	r25, Z+1	; 0x01
    106a:	01 97       	sbiw	r24, 0x01	; 1
    106c:	f1 f7       	brne	.-4      	; 0x106a <HStepper_DIR_MODE+0x388>
    106e:	fe 01       	movw	r30, r28
    1070:	eb 5c       	subi	r30, 0xCB	; 203
    1072:	fe 4f       	sbci	r31, 0xFE	; 254
    1074:	91 83       	std	Z+1, r25	; 0x01
    1076:	80 83       	st	Z, r24

/*		HW_PORT=HW_PORT &~(1<<Coil_Blue) |(1<<Coil_Pink) & ~(1<<Coil_Yellow) & ~(1<<Coil_Orange);*/

		_delay_ms(Stepper_speed);

		MDIO_vSetPinValue(HW_PORT,Coil_Blue,DIO_LOW);
    1078:	83 e0       	ldi	r24, 0x03	; 3
    107a:	60 e0       	ldi	r22, 0x00	; 0
    107c:	40 e0       	ldi	r20, 0x00	; 0
    107e:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
		MDIO_vSetPinValue(HW_PORT,Coil_Pink,DIO_LOW);
    1082:	83 e0       	ldi	r24, 0x03	; 3
    1084:	61 e0       	ldi	r22, 0x01	; 1
    1086:	40 e0       	ldi	r20, 0x00	; 0
    1088:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
		MDIO_vSetPinValue(HW_PORT,Coil_Yellow,DIO_HIGH);
    108c:	83 e0       	ldi	r24, 0x03	; 3
    108e:	62 e0       	ldi	r22, 0x02	; 2
    1090:	41 e0       	ldi	r20, 0x01	; 1
    1092:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
		MDIO_vSetPinValue(HW_PORT,Coil_Orange,DIO_LOW);
    1096:	83 e0       	ldi	r24, 0x03	; 3
    1098:	63 e0       	ldi	r22, 0x03	; 3
    109a:	40 e0       	ldi	r20, 0x00	; 0
    109c:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
    10a0:	fe 01       	movw	r30, r28
    10a2:	ef 5c       	subi	r30, 0xCF	; 207
    10a4:	fe 4f       	sbci	r31, 0xFE	; 254
    10a6:	80 e0       	ldi	r24, 0x00	; 0
    10a8:	90 e0       	ldi	r25, 0x00	; 0
    10aa:	a0 ea       	ldi	r26, 0xA0	; 160
    10ac:	b0 e4       	ldi	r27, 0x40	; 64
    10ae:	80 83       	st	Z, r24
    10b0:	91 83       	std	Z+1, r25	; 0x01
    10b2:	a2 83       	std	Z+2, r26	; 0x02
    10b4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    10b6:	8e 01       	movw	r16, r28
    10b8:	03 5d       	subi	r16, 0xD3	; 211
    10ba:	1e 4f       	sbci	r17, 0xFE	; 254
    10bc:	fe 01       	movw	r30, r28
    10be:	ef 5c       	subi	r30, 0xCF	; 207
    10c0:	fe 4f       	sbci	r31, 0xFE	; 254
    10c2:	60 81       	ld	r22, Z
    10c4:	71 81       	ldd	r23, Z+1	; 0x01
    10c6:	82 81       	ldd	r24, Z+2	; 0x02
    10c8:	93 81       	ldd	r25, Z+3	; 0x03
    10ca:	20 e0       	ldi	r18, 0x00	; 0
    10cc:	30 e0       	ldi	r19, 0x00	; 0
    10ce:	4a ef       	ldi	r20, 0xFA	; 250
    10d0:	54 e4       	ldi	r21, 0x44	; 68
    10d2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    10d6:	dc 01       	movw	r26, r24
    10d8:	cb 01       	movw	r24, r22
    10da:	f8 01       	movw	r30, r16
    10dc:	80 83       	st	Z, r24
    10de:	91 83       	std	Z+1, r25	; 0x01
    10e0:	a2 83       	std	Z+2, r26	; 0x02
    10e2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    10e4:	fe 01       	movw	r30, r28
    10e6:	e3 5d       	subi	r30, 0xD3	; 211
    10e8:	fe 4f       	sbci	r31, 0xFE	; 254
    10ea:	60 81       	ld	r22, Z
    10ec:	71 81       	ldd	r23, Z+1	; 0x01
    10ee:	82 81       	ldd	r24, Z+2	; 0x02
    10f0:	93 81       	ldd	r25, Z+3	; 0x03
    10f2:	20 e0       	ldi	r18, 0x00	; 0
    10f4:	30 e0       	ldi	r19, 0x00	; 0
    10f6:	40 e8       	ldi	r20, 0x80	; 128
    10f8:	5f e3       	ldi	r21, 0x3F	; 63
    10fa:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    10fe:	88 23       	and	r24, r24
    1100:	44 f4       	brge	.+16     	; 0x1112 <HStepper_DIR_MODE+0x430>
		__ticks = 1;
    1102:	fe 01       	movw	r30, r28
    1104:	e5 5d       	subi	r30, 0xD5	; 213
    1106:	fe 4f       	sbci	r31, 0xFE	; 254
    1108:	81 e0       	ldi	r24, 0x01	; 1
    110a:	90 e0       	ldi	r25, 0x00	; 0
    110c:	91 83       	std	Z+1, r25	; 0x01
    110e:	80 83       	st	Z, r24
    1110:	64 c0       	rjmp	.+200    	; 0x11da <HStepper_DIR_MODE+0x4f8>
	else if (__tmp > 65535)
    1112:	fe 01       	movw	r30, r28
    1114:	e3 5d       	subi	r30, 0xD3	; 211
    1116:	fe 4f       	sbci	r31, 0xFE	; 254
    1118:	60 81       	ld	r22, Z
    111a:	71 81       	ldd	r23, Z+1	; 0x01
    111c:	82 81       	ldd	r24, Z+2	; 0x02
    111e:	93 81       	ldd	r25, Z+3	; 0x03
    1120:	20 e0       	ldi	r18, 0x00	; 0
    1122:	3f ef       	ldi	r19, 0xFF	; 255
    1124:	4f e7       	ldi	r20, 0x7F	; 127
    1126:	57 e4       	ldi	r21, 0x47	; 71
    1128:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    112c:	18 16       	cp	r1, r24
    112e:	0c f0       	brlt	.+2      	; 0x1132 <HStepper_DIR_MODE+0x450>
    1130:	43 c0       	rjmp	.+134    	; 0x11b8 <HStepper_DIR_MODE+0x4d6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1132:	fe 01       	movw	r30, r28
    1134:	ef 5c       	subi	r30, 0xCF	; 207
    1136:	fe 4f       	sbci	r31, 0xFE	; 254
    1138:	60 81       	ld	r22, Z
    113a:	71 81       	ldd	r23, Z+1	; 0x01
    113c:	82 81       	ldd	r24, Z+2	; 0x02
    113e:	93 81       	ldd	r25, Z+3	; 0x03
    1140:	20 e0       	ldi	r18, 0x00	; 0
    1142:	30 e0       	ldi	r19, 0x00	; 0
    1144:	40 e2       	ldi	r20, 0x20	; 32
    1146:	51 e4       	ldi	r21, 0x41	; 65
    1148:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    114c:	dc 01       	movw	r26, r24
    114e:	cb 01       	movw	r24, r22
    1150:	8e 01       	movw	r16, r28
    1152:	05 5d       	subi	r16, 0xD5	; 213
    1154:	1e 4f       	sbci	r17, 0xFE	; 254
    1156:	bc 01       	movw	r22, r24
    1158:	cd 01       	movw	r24, r26
    115a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    115e:	dc 01       	movw	r26, r24
    1160:	cb 01       	movw	r24, r22
    1162:	f8 01       	movw	r30, r16
    1164:	91 83       	std	Z+1, r25	; 0x01
    1166:	80 83       	st	Z, r24
    1168:	1f c0       	rjmp	.+62     	; 0x11a8 <HStepper_DIR_MODE+0x4c6>
    116a:	fe 01       	movw	r30, r28
    116c:	e7 5d       	subi	r30, 0xD7	; 215
    116e:	fe 4f       	sbci	r31, 0xFE	; 254
    1170:	88 ec       	ldi	r24, 0xC8	; 200
    1172:	90 e0       	ldi	r25, 0x00	; 0
    1174:	91 83       	std	Z+1, r25	; 0x01
    1176:	80 83       	st	Z, r24
    1178:	fe 01       	movw	r30, r28
    117a:	e7 5d       	subi	r30, 0xD7	; 215
    117c:	fe 4f       	sbci	r31, 0xFE	; 254
    117e:	80 81       	ld	r24, Z
    1180:	91 81       	ldd	r25, Z+1	; 0x01
    1182:	01 97       	sbiw	r24, 0x01	; 1
    1184:	f1 f7       	brne	.-4      	; 0x1182 <HStepper_DIR_MODE+0x4a0>
    1186:	fe 01       	movw	r30, r28
    1188:	e7 5d       	subi	r30, 0xD7	; 215
    118a:	fe 4f       	sbci	r31, 0xFE	; 254
    118c:	91 83       	std	Z+1, r25	; 0x01
    118e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1190:	de 01       	movw	r26, r28
    1192:	a5 5d       	subi	r26, 0xD5	; 213
    1194:	be 4f       	sbci	r27, 0xFE	; 254
    1196:	fe 01       	movw	r30, r28
    1198:	e5 5d       	subi	r30, 0xD5	; 213
    119a:	fe 4f       	sbci	r31, 0xFE	; 254
    119c:	80 81       	ld	r24, Z
    119e:	91 81       	ldd	r25, Z+1	; 0x01
    11a0:	01 97       	sbiw	r24, 0x01	; 1
    11a2:	11 96       	adiw	r26, 0x01	; 1
    11a4:	9c 93       	st	X, r25
    11a6:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    11a8:	fe 01       	movw	r30, r28
    11aa:	e5 5d       	subi	r30, 0xD5	; 213
    11ac:	fe 4f       	sbci	r31, 0xFE	; 254
    11ae:	80 81       	ld	r24, Z
    11b0:	91 81       	ldd	r25, Z+1	; 0x01
    11b2:	00 97       	sbiw	r24, 0x00	; 0
    11b4:	d1 f6       	brne	.-76     	; 0x116a <HStepper_DIR_MODE+0x488>
    11b6:	27 c0       	rjmp	.+78     	; 0x1206 <HStepper_DIR_MODE+0x524>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    11b8:	8e 01       	movw	r16, r28
    11ba:	05 5d       	subi	r16, 0xD5	; 213
    11bc:	1e 4f       	sbci	r17, 0xFE	; 254
    11be:	fe 01       	movw	r30, r28
    11c0:	e3 5d       	subi	r30, 0xD3	; 211
    11c2:	fe 4f       	sbci	r31, 0xFE	; 254
    11c4:	60 81       	ld	r22, Z
    11c6:	71 81       	ldd	r23, Z+1	; 0x01
    11c8:	82 81       	ldd	r24, Z+2	; 0x02
    11ca:	93 81       	ldd	r25, Z+3	; 0x03
    11cc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    11d0:	dc 01       	movw	r26, r24
    11d2:	cb 01       	movw	r24, r22
    11d4:	f8 01       	movw	r30, r16
    11d6:	91 83       	std	Z+1, r25	; 0x01
    11d8:	80 83       	st	Z, r24
    11da:	de 01       	movw	r26, r28
    11dc:	a9 5d       	subi	r26, 0xD9	; 217
    11de:	be 4f       	sbci	r27, 0xFE	; 254
    11e0:	fe 01       	movw	r30, r28
    11e2:	e5 5d       	subi	r30, 0xD5	; 213
    11e4:	fe 4f       	sbci	r31, 0xFE	; 254
    11e6:	80 81       	ld	r24, Z
    11e8:	91 81       	ldd	r25, Z+1	; 0x01
    11ea:	8d 93       	st	X+, r24
    11ec:	9c 93       	st	X, r25
    11ee:	fe 01       	movw	r30, r28
    11f0:	e9 5d       	subi	r30, 0xD9	; 217
    11f2:	fe 4f       	sbci	r31, 0xFE	; 254
    11f4:	80 81       	ld	r24, Z
    11f6:	91 81       	ldd	r25, Z+1	; 0x01
    11f8:	01 97       	sbiw	r24, 0x01	; 1
    11fa:	f1 f7       	brne	.-4      	; 0x11f8 <HStepper_DIR_MODE+0x516>
    11fc:	fe 01       	movw	r30, r28
    11fe:	e9 5d       	subi	r30, 0xD9	; 217
    1200:	fe 4f       	sbci	r31, 0xFE	; 254
    1202:	91 83       	std	Z+1, r25	; 0x01
    1204:	80 83       	st	Z, r24

/*		HW_PORT=HW_PORT &~(1<<Coil_Blue) &~(1<<Coil_Pink) | (1<<Coil_Yellow) & ~(1<<Coil_Orange);*/

		_delay_ms(Stepper_speed);
		MDIO_vSetPinValue(HW_PORT,Coil_Blue,DIO_LOW);
    1206:	83 e0       	ldi	r24, 0x03	; 3
    1208:	60 e0       	ldi	r22, 0x00	; 0
    120a:	40 e0       	ldi	r20, 0x00	; 0
    120c:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
		MDIO_vSetPinValue(HW_PORT,Coil_Pink,DIO_LOW);
    1210:	83 e0       	ldi	r24, 0x03	; 3
    1212:	61 e0       	ldi	r22, 0x01	; 1
    1214:	40 e0       	ldi	r20, 0x00	; 0
    1216:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
		MDIO_vSetPinValue(HW_PORT,Coil_Yellow,DIO_LOW);
    121a:	83 e0       	ldi	r24, 0x03	; 3
    121c:	62 e0       	ldi	r22, 0x02	; 2
    121e:	40 e0       	ldi	r20, 0x00	; 0
    1220:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
		MDIO_vSetPinValue(HW_PORT,Coil_Orange,DIO_HIGH);
    1224:	83 e0       	ldi	r24, 0x03	; 3
    1226:	63 e0       	ldi	r22, 0x03	; 3
    1228:	41 e0       	ldi	r20, 0x01	; 1
    122a:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
    122e:	fe 01       	movw	r30, r28
    1230:	ed 5d       	subi	r30, 0xDD	; 221
    1232:	fe 4f       	sbci	r31, 0xFE	; 254
    1234:	80 e0       	ldi	r24, 0x00	; 0
    1236:	90 e0       	ldi	r25, 0x00	; 0
    1238:	a0 ea       	ldi	r26, 0xA0	; 160
    123a:	b0 e4       	ldi	r27, 0x40	; 64
    123c:	80 83       	st	Z, r24
    123e:	91 83       	std	Z+1, r25	; 0x01
    1240:	a2 83       	std	Z+2, r26	; 0x02
    1242:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1244:	8e 01       	movw	r16, r28
    1246:	01 5e       	subi	r16, 0xE1	; 225
    1248:	1e 4f       	sbci	r17, 0xFE	; 254
    124a:	fe 01       	movw	r30, r28
    124c:	ed 5d       	subi	r30, 0xDD	; 221
    124e:	fe 4f       	sbci	r31, 0xFE	; 254
    1250:	60 81       	ld	r22, Z
    1252:	71 81       	ldd	r23, Z+1	; 0x01
    1254:	82 81       	ldd	r24, Z+2	; 0x02
    1256:	93 81       	ldd	r25, Z+3	; 0x03
    1258:	20 e0       	ldi	r18, 0x00	; 0
    125a:	30 e0       	ldi	r19, 0x00	; 0
    125c:	4a ef       	ldi	r20, 0xFA	; 250
    125e:	54 e4       	ldi	r21, 0x44	; 68
    1260:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1264:	dc 01       	movw	r26, r24
    1266:	cb 01       	movw	r24, r22
    1268:	f8 01       	movw	r30, r16
    126a:	80 83       	st	Z, r24
    126c:	91 83       	std	Z+1, r25	; 0x01
    126e:	a2 83       	std	Z+2, r26	; 0x02
    1270:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1272:	fe 01       	movw	r30, r28
    1274:	e1 5e       	subi	r30, 0xE1	; 225
    1276:	fe 4f       	sbci	r31, 0xFE	; 254
    1278:	60 81       	ld	r22, Z
    127a:	71 81       	ldd	r23, Z+1	; 0x01
    127c:	82 81       	ldd	r24, Z+2	; 0x02
    127e:	93 81       	ldd	r25, Z+3	; 0x03
    1280:	20 e0       	ldi	r18, 0x00	; 0
    1282:	30 e0       	ldi	r19, 0x00	; 0
    1284:	40 e8       	ldi	r20, 0x80	; 128
    1286:	5f e3       	ldi	r21, 0x3F	; 63
    1288:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    128c:	88 23       	and	r24, r24
    128e:	44 f4       	brge	.+16     	; 0x12a0 <HStepper_DIR_MODE+0x5be>
		__ticks = 1;
    1290:	fe 01       	movw	r30, r28
    1292:	e3 5e       	subi	r30, 0xE3	; 227
    1294:	fe 4f       	sbci	r31, 0xFE	; 254
    1296:	81 e0       	ldi	r24, 0x01	; 1
    1298:	90 e0       	ldi	r25, 0x00	; 0
    129a:	91 83       	std	Z+1, r25	; 0x01
    129c:	80 83       	st	Z, r24
    129e:	65 c0       	rjmp	.+202    	; 0x136a <HStepper_DIR_MODE+0x688>
	else if (__tmp > 65535)
    12a0:	fe 01       	movw	r30, r28
    12a2:	e1 5e       	subi	r30, 0xE1	; 225
    12a4:	fe 4f       	sbci	r31, 0xFE	; 254
    12a6:	60 81       	ld	r22, Z
    12a8:	71 81       	ldd	r23, Z+1	; 0x01
    12aa:	82 81       	ldd	r24, Z+2	; 0x02
    12ac:	93 81       	ldd	r25, Z+3	; 0x03
    12ae:	20 e0       	ldi	r18, 0x00	; 0
    12b0:	3f ef       	ldi	r19, 0xFF	; 255
    12b2:	4f e7       	ldi	r20, 0x7F	; 127
    12b4:	57 e4       	ldi	r21, 0x47	; 71
    12b6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    12ba:	18 16       	cp	r1, r24
    12bc:	0c f0       	brlt	.+2      	; 0x12c0 <HStepper_DIR_MODE+0x5de>
    12be:	44 c0       	rjmp	.+136    	; 0x1348 <HStepper_DIR_MODE+0x666>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    12c0:	fe 01       	movw	r30, r28
    12c2:	ed 5d       	subi	r30, 0xDD	; 221
    12c4:	fe 4f       	sbci	r31, 0xFE	; 254
    12c6:	60 81       	ld	r22, Z
    12c8:	71 81       	ldd	r23, Z+1	; 0x01
    12ca:	82 81       	ldd	r24, Z+2	; 0x02
    12cc:	93 81       	ldd	r25, Z+3	; 0x03
    12ce:	20 e0       	ldi	r18, 0x00	; 0
    12d0:	30 e0       	ldi	r19, 0x00	; 0
    12d2:	40 e2       	ldi	r20, 0x20	; 32
    12d4:	51 e4       	ldi	r21, 0x41	; 65
    12d6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    12da:	dc 01       	movw	r26, r24
    12dc:	cb 01       	movw	r24, r22
    12de:	8e 01       	movw	r16, r28
    12e0:	03 5e       	subi	r16, 0xE3	; 227
    12e2:	1e 4f       	sbci	r17, 0xFE	; 254
    12e4:	bc 01       	movw	r22, r24
    12e6:	cd 01       	movw	r24, r26
    12e8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    12ec:	dc 01       	movw	r26, r24
    12ee:	cb 01       	movw	r24, r22
    12f0:	f8 01       	movw	r30, r16
    12f2:	91 83       	std	Z+1, r25	; 0x01
    12f4:	80 83       	st	Z, r24
    12f6:	1f c0       	rjmp	.+62     	; 0x1336 <HStepper_DIR_MODE+0x654>
    12f8:	fe 01       	movw	r30, r28
    12fa:	e5 5e       	subi	r30, 0xE5	; 229
    12fc:	fe 4f       	sbci	r31, 0xFE	; 254
    12fe:	88 ec       	ldi	r24, 0xC8	; 200
    1300:	90 e0       	ldi	r25, 0x00	; 0
    1302:	91 83       	std	Z+1, r25	; 0x01
    1304:	80 83       	st	Z, r24
    1306:	fe 01       	movw	r30, r28
    1308:	e5 5e       	subi	r30, 0xE5	; 229
    130a:	fe 4f       	sbci	r31, 0xFE	; 254
    130c:	80 81       	ld	r24, Z
    130e:	91 81       	ldd	r25, Z+1	; 0x01
    1310:	01 97       	sbiw	r24, 0x01	; 1
    1312:	f1 f7       	brne	.-4      	; 0x1310 <HStepper_DIR_MODE+0x62e>
    1314:	fe 01       	movw	r30, r28
    1316:	e5 5e       	subi	r30, 0xE5	; 229
    1318:	fe 4f       	sbci	r31, 0xFE	; 254
    131a:	91 83       	std	Z+1, r25	; 0x01
    131c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    131e:	de 01       	movw	r26, r28
    1320:	a3 5e       	subi	r26, 0xE3	; 227
    1322:	be 4f       	sbci	r27, 0xFE	; 254
    1324:	fe 01       	movw	r30, r28
    1326:	e3 5e       	subi	r30, 0xE3	; 227
    1328:	fe 4f       	sbci	r31, 0xFE	; 254
    132a:	80 81       	ld	r24, Z
    132c:	91 81       	ldd	r25, Z+1	; 0x01
    132e:	01 97       	sbiw	r24, 0x01	; 1
    1330:	11 96       	adiw	r26, 0x01	; 1
    1332:	9c 93       	st	X, r25
    1334:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1336:	fe 01       	movw	r30, r28
    1338:	e3 5e       	subi	r30, 0xE3	; 227
    133a:	fe 4f       	sbci	r31, 0xFE	; 254
    133c:	80 81       	ld	r24, Z
    133e:	91 81       	ldd	r25, Z+1	; 0x01
    1340:	00 97       	sbiw	r24, 0x00	; 0
    1342:	d1 f6       	brne	.-76     	; 0x12f8 <HStepper_DIR_MODE+0x616>
    1344:	0c 94 57 18 	jmp	0x30ae	; 0x30ae <HStepper_DIR_MODE+0x23cc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1348:	8e 01       	movw	r16, r28
    134a:	03 5e       	subi	r16, 0xE3	; 227
    134c:	1e 4f       	sbci	r17, 0xFE	; 254
    134e:	fe 01       	movw	r30, r28
    1350:	e1 5e       	subi	r30, 0xE1	; 225
    1352:	fe 4f       	sbci	r31, 0xFE	; 254
    1354:	60 81       	ld	r22, Z
    1356:	71 81       	ldd	r23, Z+1	; 0x01
    1358:	82 81       	ldd	r24, Z+2	; 0x02
    135a:	93 81       	ldd	r25, Z+3	; 0x03
    135c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1360:	dc 01       	movw	r26, r24
    1362:	cb 01       	movw	r24, r22
    1364:	f8 01       	movw	r30, r16
    1366:	91 83       	std	Z+1, r25	; 0x01
    1368:	80 83       	st	Z, r24
    136a:	de 01       	movw	r26, r28
    136c:	a7 5e       	subi	r26, 0xE7	; 231
    136e:	be 4f       	sbci	r27, 0xFE	; 254
    1370:	fe 01       	movw	r30, r28
    1372:	e3 5e       	subi	r30, 0xE3	; 227
    1374:	fe 4f       	sbci	r31, 0xFE	; 254
    1376:	80 81       	ld	r24, Z
    1378:	91 81       	ldd	r25, Z+1	; 0x01
    137a:	11 96       	adiw	r26, 0x01	; 1
    137c:	9c 93       	st	X, r25
    137e:	8e 93       	st	-X, r24
    1380:	fe 01       	movw	r30, r28
    1382:	e7 5e       	subi	r30, 0xE7	; 231
    1384:	fe 4f       	sbci	r31, 0xFE	; 254
    1386:	80 81       	ld	r24, Z
    1388:	91 81       	ldd	r25, Z+1	; 0x01
    138a:	01 97       	sbiw	r24, 0x01	; 1
    138c:	f1 f7       	brne	.-4      	; 0x138a <HStepper_DIR_MODE+0x6a8>
    138e:	fe 01       	movw	r30, r28
    1390:	e7 5e       	subi	r30, 0xE7	; 231
    1392:	fe 4f       	sbci	r31, 0xFE	; 254
    1394:	91 83       	std	Z+1, r25	; 0x01
    1396:	80 83       	st	Z, r24
    1398:	0c 94 57 18 	jmp	0x30ae	; 0x30ae <HStepper_DIR_MODE+0x23cc>
/*		HW_PORT=HW_PORT &~(1<<Coil_Blue) &~(1<<Coil_Pink) & ~(1<<Coil_Yellow) |(1<<Coil_Orange);*/

		_delay_ms(Stepper_speed);
		break;
	case Anti_ClockWise:
		MDIO_vSetPinValue(HW_PORT,Coil_Blue,DIO_LOW);
    139c:	83 e0       	ldi	r24, 0x03	; 3
    139e:	60 e0       	ldi	r22, 0x00	; 0
    13a0:	40 e0       	ldi	r20, 0x00	; 0
    13a2:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
		MDIO_vSetPinValue(HW_PORT,Coil_Pink,DIO_LOW);
    13a6:	83 e0       	ldi	r24, 0x03	; 3
    13a8:	61 e0       	ldi	r22, 0x01	; 1
    13aa:	40 e0       	ldi	r20, 0x00	; 0
    13ac:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
		MDIO_vSetPinValue(HW_PORT,Coil_Yellow,DIO_LOW);
    13b0:	83 e0       	ldi	r24, 0x03	; 3
    13b2:	62 e0       	ldi	r22, 0x02	; 2
    13b4:	40 e0       	ldi	r20, 0x00	; 0
    13b6:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
		MDIO_vSetPinValue(HW_PORT,Coil_Orange,DIO_HIGH);
    13ba:	83 e0       	ldi	r24, 0x03	; 3
    13bc:	63 e0       	ldi	r22, 0x03	; 3
    13be:	41 e0       	ldi	r20, 0x01	; 1
    13c0:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
    13c4:	fe 01       	movw	r30, r28
    13c6:	eb 5e       	subi	r30, 0xEB	; 235
    13c8:	fe 4f       	sbci	r31, 0xFE	; 254
    13ca:	80 e0       	ldi	r24, 0x00	; 0
    13cc:	90 e0       	ldi	r25, 0x00	; 0
    13ce:	a0 ea       	ldi	r26, 0xA0	; 160
    13d0:	b0 e4       	ldi	r27, 0x40	; 64
    13d2:	80 83       	st	Z, r24
    13d4:	91 83       	std	Z+1, r25	; 0x01
    13d6:	a2 83       	std	Z+2, r26	; 0x02
    13d8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    13da:	8e 01       	movw	r16, r28
    13dc:	0f 5e       	subi	r16, 0xEF	; 239
    13de:	1e 4f       	sbci	r17, 0xFE	; 254
    13e0:	fe 01       	movw	r30, r28
    13e2:	eb 5e       	subi	r30, 0xEB	; 235
    13e4:	fe 4f       	sbci	r31, 0xFE	; 254
    13e6:	60 81       	ld	r22, Z
    13e8:	71 81       	ldd	r23, Z+1	; 0x01
    13ea:	82 81       	ldd	r24, Z+2	; 0x02
    13ec:	93 81       	ldd	r25, Z+3	; 0x03
    13ee:	20 e0       	ldi	r18, 0x00	; 0
    13f0:	30 e0       	ldi	r19, 0x00	; 0
    13f2:	4a ef       	ldi	r20, 0xFA	; 250
    13f4:	54 e4       	ldi	r21, 0x44	; 68
    13f6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    13fa:	dc 01       	movw	r26, r24
    13fc:	cb 01       	movw	r24, r22
    13fe:	f8 01       	movw	r30, r16
    1400:	80 83       	st	Z, r24
    1402:	91 83       	std	Z+1, r25	; 0x01
    1404:	a2 83       	std	Z+2, r26	; 0x02
    1406:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1408:	fe 01       	movw	r30, r28
    140a:	ef 5e       	subi	r30, 0xEF	; 239
    140c:	fe 4f       	sbci	r31, 0xFE	; 254
    140e:	60 81       	ld	r22, Z
    1410:	71 81       	ldd	r23, Z+1	; 0x01
    1412:	82 81       	ldd	r24, Z+2	; 0x02
    1414:	93 81       	ldd	r25, Z+3	; 0x03
    1416:	20 e0       	ldi	r18, 0x00	; 0
    1418:	30 e0       	ldi	r19, 0x00	; 0
    141a:	40 e8       	ldi	r20, 0x80	; 128
    141c:	5f e3       	ldi	r21, 0x3F	; 63
    141e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1422:	88 23       	and	r24, r24
    1424:	44 f4       	brge	.+16     	; 0x1436 <HStepper_DIR_MODE+0x754>
		__ticks = 1;
    1426:	fe 01       	movw	r30, r28
    1428:	e1 5f       	subi	r30, 0xF1	; 241
    142a:	fe 4f       	sbci	r31, 0xFE	; 254
    142c:	81 e0       	ldi	r24, 0x01	; 1
    142e:	90 e0       	ldi	r25, 0x00	; 0
    1430:	91 83       	std	Z+1, r25	; 0x01
    1432:	80 83       	st	Z, r24
    1434:	64 c0       	rjmp	.+200    	; 0x14fe <HStepper_DIR_MODE+0x81c>
	else if (__tmp > 65535)
    1436:	fe 01       	movw	r30, r28
    1438:	ef 5e       	subi	r30, 0xEF	; 239
    143a:	fe 4f       	sbci	r31, 0xFE	; 254
    143c:	60 81       	ld	r22, Z
    143e:	71 81       	ldd	r23, Z+1	; 0x01
    1440:	82 81       	ldd	r24, Z+2	; 0x02
    1442:	93 81       	ldd	r25, Z+3	; 0x03
    1444:	20 e0       	ldi	r18, 0x00	; 0
    1446:	3f ef       	ldi	r19, 0xFF	; 255
    1448:	4f e7       	ldi	r20, 0x7F	; 127
    144a:	57 e4       	ldi	r21, 0x47	; 71
    144c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1450:	18 16       	cp	r1, r24
    1452:	0c f0       	brlt	.+2      	; 0x1456 <HStepper_DIR_MODE+0x774>
    1454:	43 c0       	rjmp	.+134    	; 0x14dc <HStepper_DIR_MODE+0x7fa>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1456:	fe 01       	movw	r30, r28
    1458:	eb 5e       	subi	r30, 0xEB	; 235
    145a:	fe 4f       	sbci	r31, 0xFE	; 254
    145c:	60 81       	ld	r22, Z
    145e:	71 81       	ldd	r23, Z+1	; 0x01
    1460:	82 81       	ldd	r24, Z+2	; 0x02
    1462:	93 81       	ldd	r25, Z+3	; 0x03
    1464:	20 e0       	ldi	r18, 0x00	; 0
    1466:	30 e0       	ldi	r19, 0x00	; 0
    1468:	40 e2       	ldi	r20, 0x20	; 32
    146a:	51 e4       	ldi	r21, 0x41	; 65
    146c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1470:	dc 01       	movw	r26, r24
    1472:	cb 01       	movw	r24, r22
    1474:	8e 01       	movw	r16, r28
    1476:	01 5f       	subi	r16, 0xF1	; 241
    1478:	1e 4f       	sbci	r17, 0xFE	; 254
    147a:	bc 01       	movw	r22, r24
    147c:	cd 01       	movw	r24, r26
    147e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1482:	dc 01       	movw	r26, r24
    1484:	cb 01       	movw	r24, r22
    1486:	f8 01       	movw	r30, r16
    1488:	91 83       	std	Z+1, r25	; 0x01
    148a:	80 83       	st	Z, r24
    148c:	1f c0       	rjmp	.+62     	; 0x14cc <HStepper_DIR_MODE+0x7ea>
    148e:	fe 01       	movw	r30, r28
    1490:	e3 5f       	subi	r30, 0xF3	; 243
    1492:	fe 4f       	sbci	r31, 0xFE	; 254
    1494:	88 ec       	ldi	r24, 0xC8	; 200
    1496:	90 e0       	ldi	r25, 0x00	; 0
    1498:	91 83       	std	Z+1, r25	; 0x01
    149a:	80 83       	st	Z, r24
    149c:	fe 01       	movw	r30, r28
    149e:	e3 5f       	subi	r30, 0xF3	; 243
    14a0:	fe 4f       	sbci	r31, 0xFE	; 254
    14a2:	80 81       	ld	r24, Z
    14a4:	91 81       	ldd	r25, Z+1	; 0x01
    14a6:	01 97       	sbiw	r24, 0x01	; 1
    14a8:	f1 f7       	brne	.-4      	; 0x14a6 <HStepper_DIR_MODE+0x7c4>
    14aa:	fe 01       	movw	r30, r28
    14ac:	e3 5f       	subi	r30, 0xF3	; 243
    14ae:	fe 4f       	sbci	r31, 0xFE	; 254
    14b0:	91 83       	std	Z+1, r25	; 0x01
    14b2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    14b4:	de 01       	movw	r26, r28
    14b6:	a1 5f       	subi	r26, 0xF1	; 241
    14b8:	be 4f       	sbci	r27, 0xFE	; 254
    14ba:	fe 01       	movw	r30, r28
    14bc:	e1 5f       	subi	r30, 0xF1	; 241
    14be:	fe 4f       	sbci	r31, 0xFE	; 254
    14c0:	80 81       	ld	r24, Z
    14c2:	91 81       	ldd	r25, Z+1	; 0x01
    14c4:	01 97       	sbiw	r24, 0x01	; 1
    14c6:	11 96       	adiw	r26, 0x01	; 1
    14c8:	9c 93       	st	X, r25
    14ca:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    14cc:	fe 01       	movw	r30, r28
    14ce:	e1 5f       	subi	r30, 0xF1	; 241
    14d0:	fe 4f       	sbci	r31, 0xFE	; 254
    14d2:	80 81       	ld	r24, Z
    14d4:	91 81       	ldd	r25, Z+1	; 0x01
    14d6:	00 97       	sbiw	r24, 0x00	; 0
    14d8:	d1 f6       	brne	.-76     	; 0x148e <HStepper_DIR_MODE+0x7ac>
    14da:	27 c0       	rjmp	.+78     	; 0x152a <HStepper_DIR_MODE+0x848>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    14dc:	8e 01       	movw	r16, r28
    14de:	01 5f       	subi	r16, 0xF1	; 241
    14e0:	1e 4f       	sbci	r17, 0xFE	; 254
    14e2:	fe 01       	movw	r30, r28
    14e4:	ef 5e       	subi	r30, 0xEF	; 239
    14e6:	fe 4f       	sbci	r31, 0xFE	; 254
    14e8:	60 81       	ld	r22, Z
    14ea:	71 81       	ldd	r23, Z+1	; 0x01
    14ec:	82 81       	ldd	r24, Z+2	; 0x02
    14ee:	93 81       	ldd	r25, Z+3	; 0x03
    14f0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    14f4:	dc 01       	movw	r26, r24
    14f6:	cb 01       	movw	r24, r22
    14f8:	f8 01       	movw	r30, r16
    14fa:	91 83       	std	Z+1, r25	; 0x01
    14fc:	80 83       	st	Z, r24
    14fe:	de 01       	movw	r26, r28
    1500:	a5 5f       	subi	r26, 0xF5	; 245
    1502:	be 4f       	sbci	r27, 0xFE	; 254
    1504:	fe 01       	movw	r30, r28
    1506:	e1 5f       	subi	r30, 0xF1	; 241
    1508:	fe 4f       	sbci	r31, 0xFE	; 254
    150a:	80 81       	ld	r24, Z
    150c:	91 81       	ldd	r25, Z+1	; 0x01
    150e:	8d 93       	st	X+, r24
    1510:	9c 93       	st	X, r25
    1512:	fe 01       	movw	r30, r28
    1514:	e5 5f       	subi	r30, 0xF5	; 245
    1516:	fe 4f       	sbci	r31, 0xFE	; 254
    1518:	80 81       	ld	r24, Z
    151a:	91 81       	ldd	r25, Z+1	; 0x01
    151c:	01 97       	sbiw	r24, 0x01	; 1
    151e:	f1 f7       	brne	.-4      	; 0x151c <HStepper_DIR_MODE+0x83a>
    1520:	fe 01       	movw	r30, r28
    1522:	e5 5f       	subi	r30, 0xF5	; 245
    1524:	fe 4f       	sbci	r31, 0xFE	; 254
    1526:	91 83       	std	Z+1, r25	; 0x01
    1528:	80 83       	st	Z, r24


		_delay_ms(Stepper_speed);
		MDIO_vSetPinValue(HW_PORT,Coil_Blue,DIO_LOW);
    152a:	83 e0       	ldi	r24, 0x03	; 3
    152c:	60 e0       	ldi	r22, 0x00	; 0
    152e:	40 e0       	ldi	r20, 0x00	; 0
    1530:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
		MDIO_vSetPinValue(HW_PORT,Coil_Pink,DIO_LOW);
    1534:	83 e0       	ldi	r24, 0x03	; 3
    1536:	61 e0       	ldi	r22, 0x01	; 1
    1538:	40 e0       	ldi	r20, 0x00	; 0
    153a:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
		MDIO_vSetPinValue(HW_PORT,Coil_Yellow,DIO_HIGH);
    153e:	83 e0       	ldi	r24, 0x03	; 3
    1540:	62 e0       	ldi	r22, 0x02	; 2
    1542:	41 e0       	ldi	r20, 0x01	; 1
    1544:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
		MDIO_vSetPinValue(HW_PORT,Coil_Orange,DIO_LOW);
    1548:	83 e0       	ldi	r24, 0x03	; 3
    154a:	63 e0       	ldi	r22, 0x03	; 3
    154c:	40 e0       	ldi	r20, 0x00	; 0
    154e:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
    1552:	fe 01       	movw	r30, r28
    1554:	e9 5f       	subi	r30, 0xF9	; 249
    1556:	fe 4f       	sbci	r31, 0xFE	; 254
    1558:	80 e0       	ldi	r24, 0x00	; 0
    155a:	90 e0       	ldi	r25, 0x00	; 0
    155c:	a0 ea       	ldi	r26, 0xA0	; 160
    155e:	b0 e4       	ldi	r27, 0x40	; 64
    1560:	80 83       	st	Z, r24
    1562:	91 83       	std	Z+1, r25	; 0x01
    1564:	a2 83       	std	Z+2, r26	; 0x02
    1566:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1568:	8e 01       	movw	r16, r28
    156a:	0d 5f       	subi	r16, 0xFD	; 253
    156c:	1e 4f       	sbci	r17, 0xFE	; 254
    156e:	fe 01       	movw	r30, r28
    1570:	e9 5f       	subi	r30, 0xF9	; 249
    1572:	fe 4f       	sbci	r31, 0xFE	; 254
    1574:	60 81       	ld	r22, Z
    1576:	71 81       	ldd	r23, Z+1	; 0x01
    1578:	82 81       	ldd	r24, Z+2	; 0x02
    157a:	93 81       	ldd	r25, Z+3	; 0x03
    157c:	20 e0       	ldi	r18, 0x00	; 0
    157e:	30 e0       	ldi	r19, 0x00	; 0
    1580:	4a ef       	ldi	r20, 0xFA	; 250
    1582:	54 e4       	ldi	r21, 0x44	; 68
    1584:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1588:	dc 01       	movw	r26, r24
    158a:	cb 01       	movw	r24, r22
    158c:	f8 01       	movw	r30, r16
    158e:	80 83       	st	Z, r24
    1590:	91 83       	std	Z+1, r25	; 0x01
    1592:	a2 83       	std	Z+2, r26	; 0x02
    1594:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1596:	fe 01       	movw	r30, r28
    1598:	ed 5f       	subi	r30, 0xFD	; 253
    159a:	fe 4f       	sbci	r31, 0xFE	; 254
    159c:	60 81       	ld	r22, Z
    159e:	71 81       	ldd	r23, Z+1	; 0x01
    15a0:	82 81       	ldd	r24, Z+2	; 0x02
    15a2:	93 81       	ldd	r25, Z+3	; 0x03
    15a4:	20 e0       	ldi	r18, 0x00	; 0
    15a6:	30 e0       	ldi	r19, 0x00	; 0
    15a8:	40 e8       	ldi	r20, 0x80	; 128
    15aa:	5f e3       	ldi	r21, 0x3F	; 63
    15ac:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    15b0:	88 23       	and	r24, r24
    15b2:	44 f4       	brge	.+16     	; 0x15c4 <HStepper_DIR_MODE+0x8e2>
		__ticks = 1;
    15b4:	fe 01       	movw	r30, r28
    15b6:	ef 5f       	subi	r30, 0xFF	; 255
    15b8:	fe 4f       	sbci	r31, 0xFE	; 254
    15ba:	81 e0       	ldi	r24, 0x01	; 1
    15bc:	90 e0       	ldi	r25, 0x00	; 0
    15be:	91 83       	std	Z+1, r25	; 0x01
    15c0:	80 83       	st	Z, r24
    15c2:	64 c0       	rjmp	.+200    	; 0x168c <HStepper_DIR_MODE+0x9aa>
	else if (__tmp > 65535)
    15c4:	fe 01       	movw	r30, r28
    15c6:	ed 5f       	subi	r30, 0xFD	; 253
    15c8:	fe 4f       	sbci	r31, 0xFE	; 254
    15ca:	60 81       	ld	r22, Z
    15cc:	71 81       	ldd	r23, Z+1	; 0x01
    15ce:	82 81       	ldd	r24, Z+2	; 0x02
    15d0:	93 81       	ldd	r25, Z+3	; 0x03
    15d2:	20 e0       	ldi	r18, 0x00	; 0
    15d4:	3f ef       	ldi	r19, 0xFF	; 255
    15d6:	4f e7       	ldi	r20, 0x7F	; 127
    15d8:	57 e4       	ldi	r21, 0x47	; 71
    15da:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    15de:	18 16       	cp	r1, r24
    15e0:	0c f0       	brlt	.+2      	; 0x15e4 <HStepper_DIR_MODE+0x902>
    15e2:	43 c0       	rjmp	.+134    	; 0x166a <HStepper_DIR_MODE+0x988>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    15e4:	fe 01       	movw	r30, r28
    15e6:	e9 5f       	subi	r30, 0xF9	; 249
    15e8:	fe 4f       	sbci	r31, 0xFE	; 254
    15ea:	60 81       	ld	r22, Z
    15ec:	71 81       	ldd	r23, Z+1	; 0x01
    15ee:	82 81       	ldd	r24, Z+2	; 0x02
    15f0:	93 81       	ldd	r25, Z+3	; 0x03
    15f2:	20 e0       	ldi	r18, 0x00	; 0
    15f4:	30 e0       	ldi	r19, 0x00	; 0
    15f6:	40 e2       	ldi	r20, 0x20	; 32
    15f8:	51 e4       	ldi	r21, 0x41	; 65
    15fa:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    15fe:	dc 01       	movw	r26, r24
    1600:	cb 01       	movw	r24, r22
    1602:	8e 01       	movw	r16, r28
    1604:	0f 5f       	subi	r16, 0xFF	; 255
    1606:	1e 4f       	sbci	r17, 0xFE	; 254
    1608:	bc 01       	movw	r22, r24
    160a:	cd 01       	movw	r24, r26
    160c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1610:	dc 01       	movw	r26, r24
    1612:	cb 01       	movw	r24, r22
    1614:	f8 01       	movw	r30, r16
    1616:	91 83       	std	Z+1, r25	; 0x01
    1618:	80 83       	st	Z, r24
    161a:	1f c0       	rjmp	.+62     	; 0x165a <HStepper_DIR_MODE+0x978>
    161c:	fe 01       	movw	r30, r28
    161e:	e1 50       	subi	r30, 0x01	; 1
    1620:	ff 4f       	sbci	r31, 0xFF	; 255
    1622:	88 ec       	ldi	r24, 0xC8	; 200
    1624:	90 e0       	ldi	r25, 0x00	; 0
    1626:	91 83       	std	Z+1, r25	; 0x01
    1628:	80 83       	st	Z, r24
    162a:	fe 01       	movw	r30, r28
    162c:	e1 50       	subi	r30, 0x01	; 1
    162e:	ff 4f       	sbci	r31, 0xFF	; 255
    1630:	80 81       	ld	r24, Z
    1632:	91 81       	ldd	r25, Z+1	; 0x01
    1634:	01 97       	sbiw	r24, 0x01	; 1
    1636:	f1 f7       	brne	.-4      	; 0x1634 <HStepper_DIR_MODE+0x952>
    1638:	fe 01       	movw	r30, r28
    163a:	e1 50       	subi	r30, 0x01	; 1
    163c:	ff 4f       	sbci	r31, 0xFF	; 255
    163e:	91 83       	std	Z+1, r25	; 0x01
    1640:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1642:	de 01       	movw	r26, r28
    1644:	af 5f       	subi	r26, 0xFF	; 255
    1646:	be 4f       	sbci	r27, 0xFE	; 254
    1648:	fe 01       	movw	r30, r28
    164a:	ef 5f       	subi	r30, 0xFF	; 255
    164c:	fe 4f       	sbci	r31, 0xFE	; 254
    164e:	80 81       	ld	r24, Z
    1650:	91 81       	ldd	r25, Z+1	; 0x01
    1652:	01 97       	sbiw	r24, 0x01	; 1
    1654:	11 96       	adiw	r26, 0x01	; 1
    1656:	9c 93       	st	X, r25
    1658:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    165a:	fe 01       	movw	r30, r28
    165c:	ef 5f       	subi	r30, 0xFF	; 255
    165e:	fe 4f       	sbci	r31, 0xFE	; 254
    1660:	80 81       	ld	r24, Z
    1662:	91 81       	ldd	r25, Z+1	; 0x01
    1664:	00 97       	sbiw	r24, 0x00	; 0
    1666:	d1 f6       	brne	.-76     	; 0x161c <HStepper_DIR_MODE+0x93a>
    1668:	27 c0       	rjmp	.+78     	; 0x16b8 <HStepper_DIR_MODE+0x9d6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    166a:	8e 01       	movw	r16, r28
    166c:	0f 5f       	subi	r16, 0xFF	; 255
    166e:	1e 4f       	sbci	r17, 0xFE	; 254
    1670:	fe 01       	movw	r30, r28
    1672:	ed 5f       	subi	r30, 0xFD	; 253
    1674:	fe 4f       	sbci	r31, 0xFE	; 254
    1676:	60 81       	ld	r22, Z
    1678:	71 81       	ldd	r23, Z+1	; 0x01
    167a:	82 81       	ldd	r24, Z+2	; 0x02
    167c:	93 81       	ldd	r25, Z+3	; 0x03
    167e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1682:	dc 01       	movw	r26, r24
    1684:	cb 01       	movw	r24, r22
    1686:	f8 01       	movw	r30, r16
    1688:	91 83       	std	Z+1, r25	; 0x01
    168a:	80 83       	st	Z, r24
    168c:	de 01       	movw	r26, r28
    168e:	a3 50       	subi	r26, 0x03	; 3
    1690:	bf 4f       	sbci	r27, 0xFF	; 255
    1692:	fe 01       	movw	r30, r28
    1694:	ef 5f       	subi	r30, 0xFF	; 255
    1696:	fe 4f       	sbci	r31, 0xFE	; 254
    1698:	80 81       	ld	r24, Z
    169a:	91 81       	ldd	r25, Z+1	; 0x01
    169c:	8d 93       	st	X+, r24
    169e:	9c 93       	st	X, r25
    16a0:	fe 01       	movw	r30, r28
    16a2:	e3 50       	subi	r30, 0x03	; 3
    16a4:	ff 4f       	sbci	r31, 0xFF	; 255
    16a6:	80 81       	ld	r24, Z
    16a8:	91 81       	ldd	r25, Z+1	; 0x01
    16aa:	01 97       	sbiw	r24, 0x01	; 1
    16ac:	f1 f7       	brne	.-4      	; 0x16aa <HStepper_DIR_MODE+0x9c8>
    16ae:	fe 01       	movw	r30, r28
    16b0:	e3 50       	subi	r30, 0x03	; 3
    16b2:	ff 4f       	sbci	r31, 0xFF	; 255
    16b4:	91 83       	std	Z+1, r25	; 0x01
    16b6:	80 83       	st	Z, r24


		_delay_ms(Stepper_speed);
		MDIO_vSetPinValue(HW_PORT,Coil_Blue,DIO_LOW);
    16b8:	83 e0       	ldi	r24, 0x03	; 3
    16ba:	60 e0       	ldi	r22, 0x00	; 0
    16bc:	40 e0       	ldi	r20, 0x00	; 0
    16be:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
		MDIO_vSetPinValue(HW_PORT,Coil_Pink,DIO_HIGH);
    16c2:	83 e0       	ldi	r24, 0x03	; 3
    16c4:	61 e0       	ldi	r22, 0x01	; 1
    16c6:	41 e0       	ldi	r20, 0x01	; 1
    16c8:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
		MDIO_vSetPinValue(HW_PORT,Coil_Yellow,DIO_LOW);
    16cc:	83 e0       	ldi	r24, 0x03	; 3
    16ce:	62 e0       	ldi	r22, 0x02	; 2
    16d0:	40 e0       	ldi	r20, 0x00	; 0
    16d2:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
		MDIO_vSetPinValue(HW_PORT,Coil_Orange,DIO_LOW);
    16d6:	83 e0       	ldi	r24, 0x03	; 3
    16d8:	63 e0       	ldi	r22, 0x03	; 3
    16da:	40 e0       	ldi	r20, 0x00	; 0
    16dc:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
    16e0:	fe 01       	movw	r30, r28
    16e2:	e7 50       	subi	r30, 0x07	; 7
    16e4:	ff 4f       	sbci	r31, 0xFF	; 255
    16e6:	80 e0       	ldi	r24, 0x00	; 0
    16e8:	90 e0       	ldi	r25, 0x00	; 0
    16ea:	a0 ea       	ldi	r26, 0xA0	; 160
    16ec:	b0 e4       	ldi	r27, 0x40	; 64
    16ee:	80 83       	st	Z, r24
    16f0:	91 83       	std	Z+1, r25	; 0x01
    16f2:	a2 83       	std	Z+2, r26	; 0x02
    16f4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    16f6:	8e 01       	movw	r16, r28
    16f8:	0b 50       	subi	r16, 0x0B	; 11
    16fa:	1f 4f       	sbci	r17, 0xFF	; 255
    16fc:	fe 01       	movw	r30, r28
    16fe:	e7 50       	subi	r30, 0x07	; 7
    1700:	ff 4f       	sbci	r31, 0xFF	; 255
    1702:	60 81       	ld	r22, Z
    1704:	71 81       	ldd	r23, Z+1	; 0x01
    1706:	82 81       	ldd	r24, Z+2	; 0x02
    1708:	93 81       	ldd	r25, Z+3	; 0x03
    170a:	20 e0       	ldi	r18, 0x00	; 0
    170c:	30 e0       	ldi	r19, 0x00	; 0
    170e:	4a ef       	ldi	r20, 0xFA	; 250
    1710:	54 e4       	ldi	r21, 0x44	; 68
    1712:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1716:	dc 01       	movw	r26, r24
    1718:	cb 01       	movw	r24, r22
    171a:	f8 01       	movw	r30, r16
    171c:	80 83       	st	Z, r24
    171e:	91 83       	std	Z+1, r25	; 0x01
    1720:	a2 83       	std	Z+2, r26	; 0x02
    1722:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1724:	fe 01       	movw	r30, r28
    1726:	eb 50       	subi	r30, 0x0B	; 11
    1728:	ff 4f       	sbci	r31, 0xFF	; 255
    172a:	60 81       	ld	r22, Z
    172c:	71 81       	ldd	r23, Z+1	; 0x01
    172e:	82 81       	ldd	r24, Z+2	; 0x02
    1730:	93 81       	ldd	r25, Z+3	; 0x03
    1732:	20 e0       	ldi	r18, 0x00	; 0
    1734:	30 e0       	ldi	r19, 0x00	; 0
    1736:	40 e8       	ldi	r20, 0x80	; 128
    1738:	5f e3       	ldi	r21, 0x3F	; 63
    173a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    173e:	88 23       	and	r24, r24
    1740:	44 f4       	brge	.+16     	; 0x1752 <HStepper_DIR_MODE+0xa70>
		__ticks = 1;
    1742:	fe 01       	movw	r30, r28
    1744:	ed 50       	subi	r30, 0x0D	; 13
    1746:	ff 4f       	sbci	r31, 0xFF	; 255
    1748:	81 e0       	ldi	r24, 0x01	; 1
    174a:	90 e0       	ldi	r25, 0x00	; 0
    174c:	91 83       	std	Z+1, r25	; 0x01
    174e:	80 83       	st	Z, r24
    1750:	64 c0       	rjmp	.+200    	; 0x181a <HStepper_DIR_MODE+0xb38>
	else if (__tmp > 65535)
    1752:	fe 01       	movw	r30, r28
    1754:	eb 50       	subi	r30, 0x0B	; 11
    1756:	ff 4f       	sbci	r31, 0xFF	; 255
    1758:	60 81       	ld	r22, Z
    175a:	71 81       	ldd	r23, Z+1	; 0x01
    175c:	82 81       	ldd	r24, Z+2	; 0x02
    175e:	93 81       	ldd	r25, Z+3	; 0x03
    1760:	20 e0       	ldi	r18, 0x00	; 0
    1762:	3f ef       	ldi	r19, 0xFF	; 255
    1764:	4f e7       	ldi	r20, 0x7F	; 127
    1766:	57 e4       	ldi	r21, 0x47	; 71
    1768:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    176c:	18 16       	cp	r1, r24
    176e:	0c f0       	brlt	.+2      	; 0x1772 <HStepper_DIR_MODE+0xa90>
    1770:	43 c0       	rjmp	.+134    	; 0x17f8 <HStepper_DIR_MODE+0xb16>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1772:	fe 01       	movw	r30, r28
    1774:	e7 50       	subi	r30, 0x07	; 7
    1776:	ff 4f       	sbci	r31, 0xFF	; 255
    1778:	60 81       	ld	r22, Z
    177a:	71 81       	ldd	r23, Z+1	; 0x01
    177c:	82 81       	ldd	r24, Z+2	; 0x02
    177e:	93 81       	ldd	r25, Z+3	; 0x03
    1780:	20 e0       	ldi	r18, 0x00	; 0
    1782:	30 e0       	ldi	r19, 0x00	; 0
    1784:	40 e2       	ldi	r20, 0x20	; 32
    1786:	51 e4       	ldi	r21, 0x41	; 65
    1788:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    178c:	dc 01       	movw	r26, r24
    178e:	cb 01       	movw	r24, r22
    1790:	8e 01       	movw	r16, r28
    1792:	0d 50       	subi	r16, 0x0D	; 13
    1794:	1f 4f       	sbci	r17, 0xFF	; 255
    1796:	bc 01       	movw	r22, r24
    1798:	cd 01       	movw	r24, r26
    179a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    179e:	dc 01       	movw	r26, r24
    17a0:	cb 01       	movw	r24, r22
    17a2:	f8 01       	movw	r30, r16
    17a4:	91 83       	std	Z+1, r25	; 0x01
    17a6:	80 83       	st	Z, r24
    17a8:	1f c0       	rjmp	.+62     	; 0x17e8 <HStepper_DIR_MODE+0xb06>
    17aa:	fe 01       	movw	r30, r28
    17ac:	ef 50       	subi	r30, 0x0F	; 15
    17ae:	ff 4f       	sbci	r31, 0xFF	; 255
    17b0:	88 ec       	ldi	r24, 0xC8	; 200
    17b2:	90 e0       	ldi	r25, 0x00	; 0
    17b4:	91 83       	std	Z+1, r25	; 0x01
    17b6:	80 83       	st	Z, r24
    17b8:	fe 01       	movw	r30, r28
    17ba:	ef 50       	subi	r30, 0x0F	; 15
    17bc:	ff 4f       	sbci	r31, 0xFF	; 255
    17be:	80 81       	ld	r24, Z
    17c0:	91 81       	ldd	r25, Z+1	; 0x01
    17c2:	01 97       	sbiw	r24, 0x01	; 1
    17c4:	f1 f7       	brne	.-4      	; 0x17c2 <HStepper_DIR_MODE+0xae0>
    17c6:	fe 01       	movw	r30, r28
    17c8:	ef 50       	subi	r30, 0x0F	; 15
    17ca:	ff 4f       	sbci	r31, 0xFF	; 255
    17cc:	91 83       	std	Z+1, r25	; 0x01
    17ce:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    17d0:	de 01       	movw	r26, r28
    17d2:	ad 50       	subi	r26, 0x0D	; 13
    17d4:	bf 4f       	sbci	r27, 0xFF	; 255
    17d6:	fe 01       	movw	r30, r28
    17d8:	ed 50       	subi	r30, 0x0D	; 13
    17da:	ff 4f       	sbci	r31, 0xFF	; 255
    17dc:	80 81       	ld	r24, Z
    17de:	91 81       	ldd	r25, Z+1	; 0x01
    17e0:	01 97       	sbiw	r24, 0x01	; 1
    17e2:	11 96       	adiw	r26, 0x01	; 1
    17e4:	9c 93       	st	X, r25
    17e6:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    17e8:	fe 01       	movw	r30, r28
    17ea:	ed 50       	subi	r30, 0x0D	; 13
    17ec:	ff 4f       	sbci	r31, 0xFF	; 255
    17ee:	80 81       	ld	r24, Z
    17f0:	91 81       	ldd	r25, Z+1	; 0x01
    17f2:	00 97       	sbiw	r24, 0x00	; 0
    17f4:	d1 f6       	brne	.-76     	; 0x17aa <HStepper_DIR_MODE+0xac8>
    17f6:	27 c0       	rjmp	.+78     	; 0x1846 <HStepper_DIR_MODE+0xb64>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    17f8:	8e 01       	movw	r16, r28
    17fa:	0d 50       	subi	r16, 0x0D	; 13
    17fc:	1f 4f       	sbci	r17, 0xFF	; 255
    17fe:	fe 01       	movw	r30, r28
    1800:	eb 50       	subi	r30, 0x0B	; 11
    1802:	ff 4f       	sbci	r31, 0xFF	; 255
    1804:	60 81       	ld	r22, Z
    1806:	71 81       	ldd	r23, Z+1	; 0x01
    1808:	82 81       	ldd	r24, Z+2	; 0x02
    180a:	93 81       	ldd	r25, Z+3	; 0x03
    180c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1810:	dc 01       	movw	r26, r24
    1812:	cb 01       	movw	r24, r22
    1814:	f8 01       	movw	r30, r16
    1816:	91 83       	std	Z+1, r25	; 0x01
    1818:	80 83       	st	Z, r24
    181a:	de 01       	movw	r26, r28
    181c:	a1 51       	subi	r26, 0x11	; 17
    181e:	bf 4f       	sbci	r27, 0xFF	; 255
    1820:	fe 01       	movw	r30, r28
    1822:	ed 50       	subi	r30, 0x0D	; 13
    1824:	ff 4f       	sbci	r31, 0xFF	; 255
    1826:	80 81       	ld	r24, Z
    1828:	91 81       	ldd	r25, Z+1	; 0x01
    182a:	8d 93       	st	X+, r24
    182c:	9c 93       	st	X, r25
    182e:	fe 01       	movw	r30, r28
    1830:	e1 51       	subi	r30, 0x11	; 17
    1832:	ff 4f       	sbci	r31, 0xFF	; 255
    1834:	80 81       	ld	r24, Z
    1836:	91 81       	ldd	r25, Z+1	; 0x01
    1838:	01 97       	sbiw	r24, 0x01	; 1
    183a:	f1 f7       	brne	.-4      	; 0x1838 <HStepper_DIR_MODE+0xb56>
    183c:	fe 01       	movw	r30, r28
    183e:	e1 51       	subi	r30, 0x11	; 17
    1840:	ff 4f       	sbci	r31, 0xFF	; 255
    1842:	91 83       	std	Z+1, r25	; 0x01
    1844:	80 83       	st	Z, r24

		_delay_ms(Stepper_speed);
		MDIO_vSetPinValue(HW_PORT,Coil_Blue,DIO_HIGH);
    1846:	83 e0       	ldi	r24, 0x03	; 3
    1848:	60 e0       	ldi	r22, 0x00	; 0
    184a:	41 e0       	ldi	r20, 0x01	; 1
    184c:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
		MDIO_vSetPinValue(HW_PORT,Coil_Pink,DIO_LOW);
    1850:	83 e0       	ldi	r24, 0x03	; 3
    1852:	61 e0       	ldi	r22, 0x01	; 1
    1854:	40 e0       	ldi	r20, 0x00	; 0
    1856:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
		MDIO_vSetPinValue(HW_PORT,Coil_Yellow,DIO_LOW);
    185a:	83 e0       	ldi	r24, 0x03	; 3
    185c:	62 e0       	ldi	r22, 0x02	; 2
    185e:	40 e0       	ldi	r20, 0x00	; 0
    1860:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
		MDIO_vSetPinValue(HW_PORT,Coil_Orange,DIO_LOW);
    1864:	83 e0       	ldi	r24, 0x03	; 3
    1866:	63 e0       	ldi	r22, 0x03	; 3
    1868:	40 e0       	ldi	r20, 0x00	; 0
    186a:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
    186e:	fe 01       	movw	r30, r28
    1870:	e5 51       	subi	r30, 0x15	; 21
    1872:	ff 4f       	sbci	r31, 0xFF	; 255
    1874:	80 e0       	ldi	r24, 0x00	; 0
    1876:	90 e0       	ldi	r25, 0x00	; 0
    1878:	a0 ea       	ldi	r26, 0xA0	; 160
    187a:	b0 e4       	ldi	r27, 0x40	; 64
    187c:	80 83       	st	Z, r24
    187e:	91 83       	std	Z+1, r25	; 0x01
    1880:	a2 83       	std	Z+2, r26	; 0x02
    1882:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1884:	8e 01       	movw	r16, r28
    1886:	09 51       	subi	r16, 0x19	; 25
    1888:	1f 4f       	sbci	r17, 0xFF	; 255
    188a:	fe 01       	movw	r30, r28
    188c:	e5 51       	subi	r30, 0x15	; 21
    188e:	ff 4f       	sbci	r31, 0xFF	; 255
    1890:	60 81       	ld	r22, Z
    1892:	71 81       	ldd	r23, Z+1	; 0x01
    1894:	82 81       	ldd	r24, Z+2	; 0x02
    1896:	93 81       	ldd	r25, Z+3	; 0x03
    1898:	20 e0       	ldi	r18, 0x00	; 0
    189a:	30 e0       	ldi	r19, 0x00	; 0
    189c:	4a ef       	ldi	r20, 0xFA	; 250
    189e:	54 e4       	ldi	r21, 0x44	; 68
    18a0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    18a4:	dc 01       	movw	r26, r24
    18a6:	cb 01       	movw	r24, r22
    18a8:	f8 01       	movw	r30, r16
    18aa:	80 83       	st	Z, r24
    18ac:	91 83       	std	Z+1, r25	; 0x01
    18ae:	a2 83       	std	Z+2, r26	; 0x02
    18b0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    18b2:	fe 01       	movw	r30, r28
    18b4:	e9 51       	subi	r30, 0x19	; 25
    18b6:	ff 4f       	sbci	r31, 0xFF	; 255
    18b8:	60 81       	ld	r22, Z
    18ba:	71 81       	ldd	r23, Z+1	; 0x01
    18bc:	82 81       	ldd	r24, Z+2	; 0x02
    18be:	93 81       	ldd	r25, Z+3	; 0x03
    18c0:	20 e0       	ldi	r18, 0x00	; 0
    18c2:	30 e0       	ldi	r19, 0x00	; 0
    18c4:	40 e8       	ldi	r20, 0x80	; 128
    18c6:	5f e3       	ldi	r21, 0x3F	; 63
    18c8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    18cc:	88 23       	and	r24, r24
    18ce:	44 f4       	brge	.+16     	; 0x18e0 <HStepper_DIR_MODE+0xbfe>
		__ticks = 1;
    18d0:	fe 01       	movw	r30, r28
    18d2:	eb 51       	subi	r30, 0x1B	; 27
    18d4:	ff 4f       	sbci	r31, 0xFF	; 255
    18d6:	81 e0       	ldi	r24, 0x01	; 1
    18d8:	90 e0       	ldi	r25, 0x00	; 0
    18da:	91 83       	std	Z+1, r25	; 0x01
    18dc:	80 83       	st	Z, r24
    18de:	65 c0       	rjmp	.+202    	; 0x19aa <HStepper_DIR_MODE+0xcc8>
	else if (__tmp > 65535)
    18e0:	fe 01       	movw	r30, r28
    18e2:	e9 51       	subi	r30, 0x19	; 25
    18e4:	ff 4f       	sbci	r31, 0xFF	; 255
    18e6:	60 81       	ld	r22, Z
    18e8:	71 81       	ldd	r23, Z+1	; 0x01
    18ea:	82 81       	ldd	r24, Z+2	; 0x02
    18ec:	93 81       	ldd	r25, Z+3	; 0x03
    18ee:	20 e0       	ldi	r18, 0x00	; 0
    18f0:	3f ef       	ldi	r19, 0xFF	; 255
    18f2:	4f e7       	ldi	r20, 0x7F	; 127
    18f4:	57 e4       	ldi	r21, 0x47	; 71
    18f6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    18fa:	18 16       	cp	r1, r24
    18fc:	0c f0       	brlt	.+2      	; 0x1900 <HStepper_DIR_MODE+0xc1e>
    18fe:	44 c0       	rjmp	.+136    	; 0x1988 <HStepper_DIR_MODE+0xca6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1900:	fe 01       	movw	r30, r28
    1902:	e5 51       	subi	r30, 0x15	; 21
    1904:	ff 4f       	sbci	r31, 0xFF	; 255
    1906:	60 81       	ld	r22, Z
    1908:	71 81       	ldd	r23, Z+1	; 0x01
    190a:	82 81       	ldd	r24, Z+2	; 0x02
    190c:	93 81       	ldd	r25, Z+3	; 0x03
    190e:	20 e0       	ldi	r18, 0x00	; 0
    1910:	30 e0       	ldi	r19, 0x00	; 0
    1912:	40 e2       	ldi	r20, 0x20	; 32
    1914:	51 e4       	ldi	r21, 0x41	; 65
    1916:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    191a:	dc 01       	movw	r26, r24
    191c:	cb 01       	movw	r24, r22
    191e:	8e 01       	movw	r16, r28
    1920:	0b 51       	subi	r16, 0x1B	; 27
    1922:	1f 4f       	sbci	r17, 0xFF	; 255
    1924:	bc 01       	movw	r22, r24
    1926:	cd 01       	movw	r24, r26
    1928:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    192c:	dc 01       	movw	r26, r24
    192e:	cb 01       	movw	r24, r22
    1930:	f8 01       	movw	r30, r16
    1932:	91 83       	std	Z+1, r25	; 0x01
    1934:	80 83       	st	Z, r24
    1936:	1f c0       	rjmp	.+62     	; 0x1976 <HStepper_DIR_MODE+0xc94>
    1938:	fe 01       	movw	r30, r28
    193a:	ed 51       	subi	r30, 0x1D	; 29
    193c:	ff 4f       	sbci	r31, 0xFF	; 255
    193e:	88 ec       	ldi	r24, 0xC8	; 200
    1940:	90 e0       	ldi	r25, 0x00	; 0
    1942:	91 83       	std	Z+1, r25	; 0x01
    1944:	80 83       	st	Z, r24
    1946:	fe 01       	movw	r30, r28
    1948:	ed 51       	subi	r30, 0x1D	; 29
    194a:	ff 4f       	sbci	r31, 0xFF	; 255
    194c:	80 81       	ld	r24, Z
    194e:	91 81       	ldd	r25, Z+1	; 0x01
    1950:	01 97       	sbiw	r24, 0x01	; 1
    1952:	f1 f7       	brne	.-4      	; 0x1950 <HStepper_DIR_MODE+0xc6e>
    1954:	fe 01       	movw	r30, r28
    1956:	ed 51       	subi	r30, 0x1D	; 29
    1958:	ff 4f       	sbci	r31, 0xFF	; 255
    195a:	91 83       	std	Z+1, r25	; 0x01
    195c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    195e:	de 01       	movw	r26, r28
    1960:	ab 51       	subi	r26, 0x1B	; 27
    1962:	bf 4f       	sbci	r27, 0xFF	; 255
    1964:	fe 01       	movw	r30, r28
    1966:	eb 51       	subi	r30, 0x1B	; 27
    1968:	ff 4f       	sbci	r31, 0xFF	; 255
    196a:	80 81       	ld	r24, Z
    196c:	91 81       	ldd	r25, Z+1	; 0x01
    196e:	01 97       	sbiw	r24, 0x01	; 1
    1970:	11 96       	adiw	r26, 0x01	; 1
    1972:	9c 93       	st	X, r25
    1974:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1976:	fe 01       	movw	r30, r28
    1978:	eb 51       	subi	r30, 0x1B	; 27
    197a:	ff 4f       	sbci	r31, 0xFF	; 255
    197c:	80 81       	ld	r24, Z
    197e:	91 81       	ldd	r25, Z+1	; 0x01
    1980:	00 97       	sbiw	r24, 0x00	; 0
    1982:	d1 f6       	brne	.-76     	; 0x1938 <HStepper_DIR_MODE+0xc56>
    1984:	0c 94 57 18 	jmp	0x30ae	; 0x30ae <HStepper_DIR_MODE+0x23cc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1988:	8e 01       	movw	r16, r28
    198a:	0b 51       	subi	r16, 0x1B	; 27
    198c:	1f 4f       	sbci	r17, 0xFF	; 255
    198e:	fe 01       	movw	r30, r28
    1990:	e9 51       	subi	r30, 0x19	; 25
    1992:	ff 4f       	sbci	r31, 0xFF	; 255
    1994:	60 81       	ld	r22, Z
    1996:	71 81       	ldd	r23, Z+1	; 0x01
    1998:	82 81       	ldd	r24, Z+2	; 0x02
    199a:	93 81       	ldd	r25, Z+3	; 0x03
    199c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    19a0:	dc 01       	movw	r26, r24
    19a2:	cb 01       	movw	r24, r22
    19a4:	f8 01       	movw	r30, r16
    19a6:	91 83       	std	Z+1, r25	; 0x01
    19a8:	80 83       	st	Z, r24
    19aa:	de 01       	movw	r26, r28
    19ac:	af 51       	subi	r26, 0x1F	; 31
    19ae:	bf 4f       	sbci	r27, 0xFF	; 255
    19b0:	fe 01       	movw	r30, r28
    19b2:	eb 51       	subi	r30, 0x1B	; 27
    19b4:	ff 4f       	sbci	r31, 0xFF	; 255
    19b6:	80 81       	ld	r24, Z
    19b8:	91 81       	ldd	r25, Z+1	; 0x01
    19ba:	11 96       	adiw	r26, 0x01	; 1
    19bc:	9c 93       	st	X, r25
    19be:	8e 93       	st	-X, r24
    19c0:	fe 01       	movw	r30, r28
    19c2:	ef 51       	subi	r30, 0x1F	; 31
    19c4:	ff 4f       	sbci	r31, 0xFF	; 255
    19c6:	80 81       	ld	r24, Z
    19c8:	91 81       	ldd	r25, Z+1	; 0x01
    19ca:	01 97       	sbiw	r24, 0x01	; 1
    19cc:	f1 f7       	brne	.-4      	; 0x19ca <HStepper_DIR_MODE+0xce8>
    19ce:	fe 01       	movw	r30, r28
    19d0:	ef 51       	subi	r30, 0x1F	; 31
    19d2:	ff 4f       	sbci	r31, 0xFF	; 255
    19d4:	91 83       	std	Z+1, r25	; 0x01
    19d6:	80 83       	st	Z, r24
    19d8:	0c 94 57 18 	jmp	0x30ae	; 0x30ae <HStepper_DIR_MODE+0x23cc>
		_delay_ms(Stepper_speed);
		break;

	}
	}
	else if (steps_mode==half_step)
    19dc:	fe 01       	movw	r30, r28
    19de:	ee 5a       	subi	r30, 0xAE	; 174
    19e0:	fe 4f       	sbci	r31, 0xFE	; 254
    19e2:	80 81       	ld	r24, Z
    19e4:	82 30       	cpi	r24, 0x02	; 2
    19e6:	11 f0       	breq	.+4      	; 0x19ec <HStepper_DIR_MODE+0xd0a>
    19e8:	0c 94 57 18 	jmp	0x30ae	; 0x30ae <HStepper_DIR_MODE+0x23cc>
	{
		switch (DIRECTION) {
    19ec:	fe 01       	movw	r30, r28
    19ee:	ef 5a       	subi	r30, 0xAF	; 175
    19f0:	fe 4f       	sbci	r31, 0xFE	; 254
    19f2:	80 81       	ld	r24, Z
    19f4:	28 2f       	mov	r18, r24
    19f6:	30 e0       	ldi	r19, 0x00	; 0
    19f8:	cd 5a       	subi	r28, 0xAD	; 173
    19fa:	de 4f       	sbci	r29, 0xFE	; 254
    19fc:	39 83       	std	Y+1, r19	; 0x01
    19fe:	28 83       	st	Y, r18
    1a00:	c3 55       	subi	r28, 0x53	; 83
    1a02:	d1 40       	sbci	r29, 0x01	; 1
    1a04:	cd 5a       	subi	r28, 0xAD	; 173
    1a06:	de 4f       	sbci	r29, 0xFE	; 254
    1a08:	88 81       	ld	r24, Y
    1a0a:	99 81       	ldd	r25, Y+1	; 0x01
    1a0c:	c3 55       	subi	r28, 0x53	; 83
    1a0e:	d1 40       	sbci	r29, 0x01	; 1
    1a10:	81 30       	cpi	r24, 0x01	; 1
    1a12:	91 05       	cpc	r25, r1
    1a14:	61 f0       	breq	.+24     	; 0x1a2e <HStepper_DIR_MODE+0xd4c>
    1a16:	cd 5a       	subi	r28, 0xAD	; 173
    1a18:	de 4f       	sbci	r29, 0xFE	; 254
    1a1a:	e8 81       	ld	r30, Y
    1a1c:	f9 81       	ldd	r31, Y+1	; 0x01
    1a1e:	c3 55       	subi	r28, 0x53	; 83
    1a20:	d1 40       	sbci	r29, 0x01	; 1
    1a22:	e2 30       	cpi	r30, 0x02	; 2
    1a24:	f1 05       	cpc	r31, r1
    1a26:	09 f4       	brne	.+2      	; 0x1a2a <HStepper_DIR_MODE+0xd48>
    1a28:	3c c6       	rjmp	.+3192   	; 0x26a2 <HStepper_DIR_MODE+0x19c0>
    1a2a:	0c 94 57 18 	jmp	0x30ae	; 0x30ae <HStepper_DIR_MODE+0x23cc>
		case ClockWise:
			MDIO_vSetPinValue(HW_PORT,Coil_Blue,DIO_HIGH);
    1a2e:	83 e0       	ldi	r24, 0x03	; 3
    1a30:	60 e0       	ldi	r22, 0x00	; 0
    1a32:	41 e0       	ldi	r20, 0x01	; 1
    1a34:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
			MDIO_vSetPinValue(HW_PORT,Coil_Pink,DIO_LOW);
    1a38:	83 e0       	ldi	r24, 0x03	; 3
    1a3a:	61 e0       	ldi	r22, 0x01	; 1
    1a3c:	40 e0       	ldi	r20, 0x00	; 0
    1a3e:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
			MDIO_vSetPinValue(HW_PORT,Coil_Yellow,DIO_LOW);
    1a42:	83 e0       	ldi	r24, 0x03	; 3
    1a44:	62 e0       	ldi	r22, 0x02	; 2
    1a46:	40 e0       	ldi	r20, 0x00	; 0
    1a48:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
			MDIO_vSetPinValue(HW_PORT,Coil_Orange,DIO_HIGH);
    1a4c:	83 e0       	ldi	r24, 0x03	; 3
    1a4e:	63 e0       	ldi	r22, 0x03	; 3
    1a50:	41 e0       	ldi	r20, 0x01	; 1
    1a52:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
    1a56:	fe 01       	movw	r30, r28
    1a58:	e3 52       	subi	r30, 0x23	; 35
    1a5a:	ff 4f       	sbci	r31, 0xFF	; 255
    1a5c:	80 e0       	ldi	r24, 0x00	; 0
    1a5e:	90 e0       	ldi	r25, 0x00	; 0
    1a60:	a0 ea       	ldi	r26, 0xA0	; 160
    1a62:	b0 e4       	ldi	r27, 0x40	; 64
    1a64:	80 83       	st	Z, r24
    1a66:	91 83       	std	Z+1, r25	; 0x01
    1a68:	a2 83       	std	Z+2, r26	; 0x02
    1a6a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1a6c:	8e 01       	movw	r16, r28
    1a6e:	07 52       	subi	r16, 0x27	; 39
    1a70:	1f 4f       	sbci	r17, 0xFF	; 255
    1a72:	fe 01       	movw	r30, r28
    1a74:	e3 52       	subi	r30, 0x23	; 35
    1a76:	ff 4f       	sbci	r31, 0xFF	; 255
    1a78:	60 81       	ld	r22, Z
    1a7a:	71 81       	ldd	r23, Z+1	; 0x01
    1a7c:	82 81       	ldd	r24, Z+2	; 0x02
    1a7e:	93 81       	ldd	r25, Z+3	; 0x03
    1a80:	20 e0       	ldi	r18, 0x00	; 0
    1a82:	30 e0       	ldi	r19, 0x00	; 0
    1a84:	4a ef       	ldi	r20, 0xFA	; 250
    1a86:	54 e4       	ldi	r21, 0x44	; 68
    1a88:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1a8c:	dc 01       	movw	r26, r24
    1a8e:	cb 01       	movw	r24, r22
    1a90:	f8 01       	movw	r30, r16
    1a92:	80 83       	st	Z, r24
    1a94:	91 83       	std	Z+1, r25	; 0x01
    1a96:	a2 83       	std	Z+2, r26	; 0x02
    1a98:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1a9a:	fe 01       	movw	r30, r28
    1a9c:	e7 52       	subi	r30, 0x27	; 39
    1a9e:	ff 4f       	sbci	r31, 0xFF	; 255
    1aa0:	60 81       	ld	r22, Z
    1aa2:	71 81       	ldd	r23, Z+1	; 0x01
    1aa4:	82 81       	ldd	r24, Z+2	; 0x02
    1aa6:	93 81       	ldd	r25, Z+3	; 0x03
    1aa8:	20 e0       	ldi	r18, 0x00	; 0
    1aaa:	30 e0       	ldi	r19, 0x00	; 0
    1aac:	40 e8       	ldi	r20, 0x80	; 128
    1aae:	5f e3       	ldi	r21, 0x3F	; 63
    1ab0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1ab4:	88 23       	and	r24, r24
    1ab6:	44 f4       	brge	.+16     	; 0x1ac8 <HStepper_DIR_MODE+0xde6>
		__ticks = 1;
    1ab8:	fe 01       	movw	r30, r28
    1aba:	e9 52       	subi	r30, 0x29	; 41
    1abc:	ff 4f       	sbci	r31, 0xFF	; 255
    1abe:	81 e0       	ldi	r24, 0x01	; 1
    1ac0:	90 e0       	ldi	r25, 0x00	; 0
    1ac2:	91 83       	std	Z+1, r25	; 0x01
    1ac4:	80 83       	st	Z, r24
    1ac6:	64 c0       	rjmp	.+200    	; 0x1b90 <HStepper_DIR_MODE+0xeae>
	else if (__tmp > 65535)
    1ac8:	fe 01       	movw	r30, r28
    1aca:	e7 52       	subi	r30, 0x27	; 39
    1acc:	ff 4f       	sbci	r31, 0xFF	; 255
    1ace:	60 81       	ld	r22, Z
    1ad0:	71 81       	ldd	r23, Z+1	; 0x01
    1ad2:	82 81       	ldd	r24, Z+2	; 0x02
    1ad4:	93 81       	ldd	r25, Z+3	; 0x03
    1ad6:	20 e0       	ldi	r18, 0x00	; 0
    1ad8:	3f ef       	ldi	r19, 0xFF	; 255
    1ada:	4f e7       	ldi	r20, 0x7F	; 127
    1adc:	57 e4       	ldi	r21, 0x47	; 71
    1ade:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1ae2:	18 16       	cp	r1, r24
    1ae4:	0c f0       	brlt	.+2      	; 0x1ae8 <HStepper_DIR_MODE+0xe06>
    1ae6:	43 c0       	rjmp	.+134    	; 0x1b6e <HStepper_DIR_MODE+0xe8c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1ae8:	fe 01       	movw	r30, r28
    1aea:	e3 52       	subi	r30, 0x23	; 35
    1aec:	ff 4f       	sbci	r31, 0xFF	; 255
    1aee:	60 81       	ld	r22, Z
    1af0:	71 81       	ldd	r23, Z+1	; 0x01
    1af2:	82 81       	ldd	r24, Z+2	; 0x02
    1af4:	93 81       	ldd	r25, Z+3	; 0x03
    1af6:	20 e0       	ldi	r18, 0x00	; 0
    1af8:	30 e0       	ldi	r19, 0x00	; 0
    1afa:	40 e2       	ldi	r20, 0x20	; 32
    1afc:	51 e4       	ldi	r21, 0x41	; 65
    1afe:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1b02:	dc 01       	movw	r26, r24
    1b04:	cb 01       	movw	r24, r22
    1b06:	8e 01       	movw	r16, r28
    1b08:	09 52       	subi	r16, 0x29	; 41
    1b0a:	1f 4f       	sbci	r17, 0xFF	; 255
    1b0c:	bc 01       	movw	r22, r24
    1b0e:	cd 01       	movw	r24, r26
    1b10:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1b14:	dc 01       	movw	r26, r24
    1b16:	cb 01       	movw	r24, r22
    1b18:	f8 01       	movw	r30, r16
    1b1a:	91 83       	std	Z+1, r25	; 0x01
    1b1c:	80 83       	st	Z, r24
    1b1e:	1f c0       	rjmp	.+62     	; 0x1b5e <HStepper_DIR_MODE+0xe7c>
    1b20:	fe 01       	movw	r30, r28
    1b22:	eb 52       	subi	r30, 0x2B	; 43
    1b24:	ff 4f       	sbci	r31, 0xFF	; 255
    1b26:	88 ec       	ldi	r24, 0xC8	; 200
    1b28:	90 e0       	ldi	r25, 0x00	; 0
    1b2a:	91 83       	std	Z+1, r25	; 0x01
    1b2c:	80 83       	st	Z, r24
    1b2e:	fe 01       	movw	r30, r28
    1b30:	eb 52       	subi	r30, 0x2B	; 43
    1b32:	ff 4f       	sbci	r31, 0xFF	; 255
    1b34:	80 81       	ld	r24, Z
    1b36:	91 81       	ldd	r25, Z+1	; 0x01
    1b38:	01 97       	sbiw	r24, 0x01	; 1
    1b3a:	f1 f7       	brne	.-4      	; 0x1b38 <HStepper_DIR_MODE+0xe56>
    1b3c:	fe 01       	movw	r30, r28
    1b3e:	eb 52       	subi	r30, 0x2B	; 43
    1b40:	ff 4f       	sbci	r31, 0xFF	; 255
    1b42:	91 83       	std	Z+1, r25	; 0x01
    1b44:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1b46:	de 01       	movw	r26, r28
    1b48:	a9 52       	subi	r26, 0x29	; 41
    1b4a:	bf 4f       	sbci	r27, 0xFF	; 255
    1b4c:	fe 01       	movw	r30, r28
    1b4e:	e9 52       	subi	r30, 0x29	; 41
    1b50:	ff 4f       	sbci	r31, 0xFF	; 255
    1b52:	80 81       	ld	r24, Z
    1b54:	91 81       	ldd	r25, Z+1	; 0x01
    1b56:	01 97       	sbiw	r24, 0x01	; 1
    1b58:	11 96       	adiw	r26, 0x01	; 1
    1b5a:	9c 93       	st	X, r25
    1b5c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1b5e:	fe 01       	movw	r30, r28
    1b60:	e9 52       	subi	r30, 0x29	; 41
    1b62:	ff 4f       	sbci	r31, 0xFF	; 255
    1b64:	80 81       	ld	r24, Z
    1b66:	91 81       	ldd	r25, Z+1	; 0x01
    1b68:	00 97       	sbiw	r24, 0x00	; 0
    1b6a:	d1 f6       	brne	.-76     	; 0x1b20 <HStepper_DIR_MODE+0xe3e>
    1b6c:	27 c0       	rjmp	.+78     	; 0x1bbc <HStepper_DIR_MODE+0xeda>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1b6e:	8e 01       	movw	r16, r28
    1b70:	09 52       	subi	r16, 0x29	; 41
    1b72:	1f 4f       	sbci	r17, 0xFF	; 255
    1b74:	fe 01       	movw	r30, r28
    1b76:	e7 52       	subi	r30, 0x27	; 39
    1b78:	ff 4f       	sbci	r31, 0xFF	; 255
    1b7a:	60 81       	ld	r22, Z
    1b7c:	71 81       	ldd	r23, Z+1	; 0x01
    1b7e:	82 81       	ldd	r24, Z+2	; 0x02
    1b80:	93 81       	ldd	r25, Z+3	; 0x03
    1b82:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1b86:	dc 01       	movw	r26, r24
    1b88:	cb 01       	movw	r24, r22
    1b8a:	f8 01       	movw	r30, r16
    1b8c:	91 83       	std	Z+1, r25	; 0x01
    1b8e:	80 83       	st	Z, r24
    1b90:	de 01       	movw	r26, r28
    1b92:	ad 52       	subi	r26, 0x2D	; 45
    1b94:	bf 4f       	sbci	r27, 0xFF	; 255
    1b96:	fe 01       	movw	r30, r28
    1b98:	e9 52       	subi	r30, 0x29	; 41
    1b9a:	ff 4f       	sbci	r31, 0xFF	; 255
    1b9c:	80 81       	ld	r24, Z
    1b9e:	91 81       	ldd	r25, Z+1	; 0x01
    1ba0:	8d 93       	st	X+, r24
    1ba2:	9c 93       	st	X, r25
    1ba4:	fe 01       	movw	r30, r28
    1ba6:	ed 52       	subi	r30, 0x2D	; 45
    1ba8:	ff 4f       	sbci	r31, 0xFF	; 255
    1baa:	80 81       	ld	r24, Z
    1bac:	91 81       	ldd	r25, Z+1	; 0x01
    1bae:	01 97       	sbiw	r24, 0x01	; 1
    1bb0:	f1 f7       	brne	.-4      	; 0x1bae <HStepper_DIR_MODE+0xecc>
    1bb2:	fe 01       	movw	r30, r28
    1bb4:	ed 52       	subi	r30, 0x2D	; 45
    1bb6:	ff 4f       	sbci	r31, 0xFF	; 255
    1bb8:	91 83       	std	Z+1, r25	; 0x01
    1bba:	80 83       	st	Z, r24


			_delay_ms(Stepper_speed);
			MDIO_vSetPinValue(HW_PORT,Coil_Blue,DIO_HIGH);
    1bbc:	83 e0       	ldi	r24, 0x03	; 3
    1bbe:	60 e0       	ldi	r22, 0x00	; 0
    1bc0:	41 e0       	ldi	r20, 0x01	; 1
    1bc2:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
			MDIO_vSetPinValue(HW_PORT,Coil_Pink,DIO_LOW);
    1bc6:	83 e0       	ldi	r24, 0x03	; 3
    1bc8:	61 e0       	ldi	r22, 0x01	; 1
    1bca:	40 e0       	ldi	r20, 0x00	; 0
    1bcc:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
			MDIO_vSetPinValue(HW_PORT,Coil_Yellow,DIO_LOW);
    1bd0:	83 e0       	ldi	r24, 0x03	; 3
    1bd2:	62 e0       	ldi	r22, 0x02	; 2
    1bd4:	40 e0       	ldi	r20, 0x00	; 0
    1bd6:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
			MDIO_vSetPinValue(HW_PORT,Coil_Orange,DIO_LOW);
    1bda:	83 e0       	ldi	r24, 0x03	; 3
    1bdc:	63 e0       	ldi	r22, 0x03	; 3
    1bde:	40 e0       	ldi	r20, 0x00	; 0
    1be0:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
    1be4:	fe 01       	movw	r30, r28
    1be6:	e1 53       	subi	r30, 0x31	; 49
    1be8:	ff 4f       	sbci	r31, 0xFF	; 255
    1bea:	80 e0       	ldi	r24, 0x00	; 0
    1bec:	90 e0       	ldi	r25, 0x00	; 0
    1bee:	a0 ea       	ldi	r26, 0xA0	; 160
    1bf0:	b0 e4       	ldi	r27, 0x40	; 64
    1bf2:	80 83       	st	Z, r24
    1bf4:	91 83       	std	Z+1, r25	; 0x01
    1bf6:	a2 83       	std	Z+2, r26	; 0x02
    1bf8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1bfa:	8e 01       	movw	r16, r28
    1bfc:	05 53       	subi	r16, 0x35	; 53
    1bfe:	1f 4f       	sbci	r17, 0xFF	; 255
    1c00:	fe 01       	movw	r30, r28
    1c02:	e1 53       	subi	r30, 0x31	; 49
    1c04:	ff 4f       	sbci	r31, 0xFF	; 255
    1c06:	60 81       	ld	r22, Z
    1c08:	71 81       	ldd	r23, Z+1	; 0x01
    1c0a:	82 81       	ldd	r24, Z+2	; 0x02
    1c0c:	93 81       	ldd	r25, Z+3	; 0x03
    1c0e:	20 e0       	ldi	r18, 0x00	; 0
    1c10:	30 e0       	ldi	r19, 0x00	; 0
    1c12:	4a ef       	ldi	r20, 0xFA	; 250
    1c14:	54 e4       	ldi	r21, 0x44	; 68
    1c16:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1c1a:	dc 01       	movw	r26, r24
    1c1c:	cb 01       	movw	r24, r22
    1c1e:	f8 01       	movw	r30, r16
    1c20:	80 83       	st	Z, r24
    1c22:	91 83       	std	Z+1, r25	; 0x01
    1c24:	a2 83       	std	Z+2, r26	; 0x02
    1c26:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1c28:	fe 01       	movw	r30, r28
    1c2a:	e5 53       	subi	r30, 0x35	; 53
    1c2c:	ff 4f       	sbci	r31, 0xFF	; 255
    1c2e:	60 81       	ld	r22, Z
    1c30:	71 81       	ldd	r23, Z+1	; 0x01
    1c32:	82 81       	ldd	r24, Z+2	; 0x02
    1c34:	93 81       	ldd	r25, Z+3	; 0x03
    1c36:	20 e0       	ldi	r18, 0x00	; 0
    1c38:	30 e0       	ldi	r19, 0x00	; 0
    1c3a:	40 e8       	ldi	r20, 0x80	; 128
    1c3c:	5f e3       	ldi	r21, 0x3F	; 63
    1c3e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1c42:	88 23       	and	r24, r24
    1c44:	44 f4       	brge	.+16     	; 0x1c56 <HStepper_DIR_MODE+0xf74>
		__ticks = 1;
    1c46:	fe 01       	movw	r30, r28
    1c48:	e7 53       	subi	r30, 0x37	; 55
    1c4a:	ff 4f       	sbci	r31, 0xFF	; 255
    1c4c:	81 e0       	ldi	r24, 0x01	; 1
    1c4e:	90 e0       	ldi	r25, 0x00	; 0
    1c50:	91 83       	std	Z+1, r25	; 0x01
    1c52:	80 83       	st	Z, r24
    1c54:	64 c0       	rjmp	.+200    	; 0x1d1e <HStepper_DIR_MODE+0x103c>
	else if (__tmp > 65535)
    1c56:	fe 01       	movw	r30, r28
    1c58:	e5 53       	subi	r30, 0x35	; 53
    1c5a:	ff 4f       	sbci	r31, 0xFF	; 255
    1c5c:	60 81       	ld	r22, Z
    1c5e:	71 81       	ldd	r23, Z+1	; 0x01
    1c60:	82 81       	ldd	r24, Z+2	; 0x02
    1c62:	93 81       	ldd	r25, Z+3	; 0x03
    1c64:	20 e0       	ldi	r18, 0x00	; 0
    1c66:	3f ef       	ldi	r19, 0xFF	; 255
    1c68:	4f e7       	ldi	r20, 0x7F	; 127
    1c6a:	57 e4       	ldi	r21, 0x47	; 71
    1c6c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1c70:	18 16       	cp	r1, r24
    1c72:	0c f0       	brlt	.+2      	; 0x1c76 <HStepper_DIR_MODE+0xf94>
    1c74:	43 c0       	rjmp	.+134    	; 0x1cfc <HStepper_DIR_MODE+0x101a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1c76:	fe 01       	movw	r30, r28
    1c78:	e1 53       	subi	r30, 0x31	; 49
    1c7a:	ff 4f       	sbci	r31, 0xFF	; 255
    1c7c:	60 81       	ld	r22, Z
    1c7e:	71 81       	ldd	r23, Z+1	; 0x01
    1c80:	82 81       	ldd	r24, Z+2	; 0x02
    1c82:	93 81       	ldd	r25, Z+3	; 0x03
    1c84:	20 e0       	ldi	r18, 0x00	; 0
    1c86:	30 e0       	ldi	r19, 0x00	; 0
    1c88:	40 e2       	ldi	r20, 0x20	; 32
    1c8a:	51 e4       	ldi	r21, 0x41	; 65
    1c8c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1c90:	dc 01       	movw	r26, r24
    1c92:	cb 01       	movw	r24, r22
    1c94:	8e 01       	movw	r16, r28
    1c96:	07 53       	subi	r16, 0x37	; 55
    1c98:	1f 4f       	sbci	r17, 0xFF	; 255
    1c9a:	bc 01       	movw	r22, r24
    1c9c:	cd 01       	movw	r24, r26
    1c9e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1ca2:	dc 01       	movw	r26, r24
    1ca4:	cb 01       	movw	r24, r22
    1ca6:	f8 01       	movw	r30, r16
    1ca8:	91 83       	std	Z+1, r25	; 0x01
    1caa:	80 83       	st	Z, r24
    1cac:	1f c0       	rjmp	.+62     	; 0x1cec <HStepper_DIR_MODE+0x100a>
    1cae:	fe 01       	movw	r30, r28
    1cb0:	e9 53       	subi	r30, 0x39	; 57
    1cb2:	ff 4f       	sbci	r31, 0xFF	; 255
    1cb4:	88 ec       	ldi	r24, 0xC8	; 200
    1cb6:	90 e0       	ldi	r25, 0x00	; 0
    1cb8:	91 83       	std	Z+1, r25	; 0x01
    1cba:	80 83       	st	Z, r24
    1cbc:	fe 01       	movw	r30, r28
    1cbe:	e9 53       	subi	r30, 0x39	; 57
    1cc0:	ff 4f       	sbci	r31, 0xFF	; 255
    1cc2:	80 81       	ld	r24, Z
    1cc4:	91 81       	ldd	r25, Z+1	; 0x01
    1cc6:	01 97       	sbiw	r24, 0x01	; 1
    1cc8:	f1 f7       	brne	.-4      	; 0x1cc6 <HStepper_DIR_MODE+0xfe4>
    1cca:	fe 01       	movw	r30, r28
    1ccc:	e9 53       	subi	r30, 0x39	; 57
    1cce:	ff 4f       	sbci	r31, 0xFF	; 255
    1cd0:	91 83       	std	Z+1, r25	; 0x01
    1cd2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1cd4:	de 01       	movw	r26, r28
    1cd6:	a7 53       	subi	r26, 0x37	; 55
    1cd8:	bf 4f       	sbci	r27, 0xFF	; 255
    1cda:	fe 01       	movw	r30, r28
    1cdc:	e7 53       	subi	r30, 0x37	; 55
    1cde:	ff 4f       	sbci	r31, 0xFF	; 255
    1ce0:	80 81       	ld	r24, Z
    1ce2:	91 81       	ldd	r25, Z+1	; 0x01
    1ce4:	01 97       	sbiw	r24, 0x01	; 1
    1ce6:	11 96       	adiw	r26, 0x01	; 1
    1ce8:	9c 93       	st	X, r25
    1cea:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1cec:	fe 01       	movw	r30, r28
    1cee:	e7 53       	subi	r30, 0x37	; 55
    1cf0:	ff 4f       	sbci	r31, 0xFF	; 255
    1cf2:	80 81       	ld	r24, Z
    1cf4:	91 81       	ldd	r25, Z+1	; 0x01
    1cf6:	00 97       	sbiw	r24, 0x00	; 0
    1cf8:	d1 f6       	brne	.-76     	; 0x1cae <HStepper_DIR_MODE+0xfcc>
    1cfa:	27 c0       	rjmp	.+78     	; 0x1d4a <HStepper_DIR_MODE+0x1068>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1cfc:	8e 01       	movw	r16, r28
    1cfe:	07 53       	subi	r16, 0x37	; 55
    1d00:	1f 4f       	sbci	r17, 0xFF	; 255
    1d02:	fe 01       	movw	r30, r28
    1d04:	e5 53       	subi	r30, 0x35	; 53
    1d06:	ff 4f       	sbci	r31, 0xFF	; 255
    1d08:	60 81       	ld	r22, Z
    1d0a:	71 81       	ldd	r23, Z+1	; 0x01
    1d0c:	82 81       	ldd	r24, Z+2	; 0x02
    1d0e:	93 81       	ldd	r25, Z+3	; 0x03
    1d10:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1d14:	dc 01       	movw	r26, r24
    1d16:	cb 01       	movw	r24, r22
    1d18:	f8 01       	movw	r30, r16
    1d1a:	91 83       	std	Z+1, r25	; 0x01
    1d1c:	80 83       	st	Z, r24
    1d1e:	de 01       	movw	r26, r28
    1d20:	ab 53       	subi	r26, 0x3B	; 59
    1d22:	bf 4f       	sbci	r27, 0xFF	; 255
    1d24:	fe 01       	movw	r30, r28
    1d26:	e7 53       	subi	r30, 0x37	; 55
    1d28:	ff 4f       	sbci	r31, 0xFF	; 255
    1d2a:	80 81       	ld	r24, Z
    1d2c:	91 81       	ldd	r25, Z+1	; 0x01
    1d2e:	8d 93       	st	X+, r24
    1d30:	9c 93       	st	X, r25
    1d32:	fe 01       	movw	r30, r28
    1d34:	eb 53       	subi	r30, 0x3B	; 59
    1d36:	ff 4f       	sbci	r31, 0xFF	; 255
    1d38:	80 81       	ld	r24, Z
    1d3a:	91 81       	ldd	r25, Z+1	; 0x01
    1d3c:	01 97       	sbiw	r24, 0x01	; 1
    1d3e:	f1 f7       	brne	.-4      	; 0x1d3c <HStepper_DIR_MODE+0x105a>
    1d40:	fe 01       	movw	r30, r28
    1d42:	eb 53       	subi	r30, 0x3B	; 59
    1d44:	ff 4f       	sbci	r31, 0xFF	; 255
    1d46:	91 83       	std	Z+1, r25	; 0x01
    1d48:	80 83       	st	Z, r24


			_delay_ms(Stepper_speed);
			MDIO_vSetPinValue(HW_PORT,Coil_Blue,DIO_HIGH);
    1d4a:	83 e0       	ldi	r24, 0x03	; 3
    1d4c:	60 e0       	ldi	r22, 0x00	; 0
    1d4e:	41 e0       	ldi	r20, 0x01	; 1
    1d50:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
			MDIO_vSetPinValue(HW_PORT,Coil_Pink,DIO_HIGH);
    1d54:	83 e0       	ldi	r24, 0x03	; 3
    1d56:	61 e0       	ldi	r22, 0x01	; 1
    1d58:	41 e0       	ldi	r20, 0x01	; 1
    1d5a:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
			MDIO_vSetPinValue(HW_PORT,Coil_Yellow,DIO_LOW);
    1d5e:	83 e0       	ldi	r24, 0x03	; 3
    1d60:	62 e0       	ldi	r22, 0x02	; 2
    1d62:	40 e0       	ldi	r20, 0x00	; 0
    1d64:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
			MDIO_vSetPinValue(HW_PORT,Coil_Orange,DIO_LOW);
    1d68:	83 e0       	ldi	r24, 0x03	; 3
    1d6a:	63 e0       	ldi	r22, 0x03	; 3
    1d6c:	40 e0       	ldi	r20, 0x00	; 0
    1d6e:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
    1d72:	fe 01       	movw	r30, r28
    1d74:	ef 53       	subi	r30, 0x3F	; 63
    1d76:	ff 4f       	sbci	r31, 0xFF	; 255
    1d78:	80 e0       	ldi	r24, 0x00	; 0
    1d7a:	90 e0       	ldi	r25, 0x00	; 0
    1d7c:	a0 ea       	ldi	r26, 0xA0	; 160
    1d7e:	b0 e4       	ldi	r27, 0x40	; 64
    1d80:	80 83       	st	Z, r24
    1d82:	91 83       	std	Z+1, r25	; 0x01
    1d84:	a2 83       	std	Z+2, r26	; 0x02
    1d86:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1d88:	8e 01       	movw	r16, r28
    1d8a:	03 54       	subi	r16, 0x43	; 67
    1d8c:	1f 4f       	sbci	r17, 0xFF	; 255
    1d8e:	fe 01       	movw	r30, r28
    1d90:	ef 53       	subi	r30, 0x3F	; 63
    1d92:	ff 4f       	sbci	r31, 0xFF	; 255
    1d94:	60 81       	ld	r22, Z
    1d96:	71 81       	ldd	r23, Z+1	; 0x01
    1d98:	82 81       	ldd	r24, Z+2	; 0x02
    1d9a:	93 81       	ldd	r25, Z+3	; 0x03
    1d9c:	20 e0       	ldi	r18, 0x00	; 0
    1d9e:	30 e0       	ldi	r19, 0x00	; 0
    1da0:	4a ef       	ldi	r20, 0xFA	; 250
    1da2:	54 e4       	ldi	r21, 0x44	; 68
    1da4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1da8:	dc 01       	movw	r26, r24
    1daa:	cb 01       	movw	r24, r22
    1dac:	f8 01       	movw	r30, r16
    1dae:	80 83       	st	Z, r24
    1db0:	91 83       	std	Z+1, r25	; 0x01
    1db2:	a2 83       	std	Z+2, r26	; 0x02
    1db4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1db6:	fe 01       	movw	r30, r28
    1db8:	e3 54       	subi	r30, 0x43	; 67
    1dba:	ff 4f       	sbci	r31, 0xFF	; 255
    1dbc:	60 81       	ld	r22, Z
    1dbe:	71 81       	ldd	r23, Z+1	; 0x01
    1dc0:	82 81       	ldd	r24, Z+2	; 0x02
    1dc2:	93 81       	ldd	r25, Z+3	; 0x03
    1dc4:	20 e0       	ldi	r18, 0x00	; 0
    1dc6:	30 e0       	ldi	r19, 0x00	; 0
    1dc8:	40 e8       	ldi	r20, 0x80	; 128
    1dca:	5f e3       	ldi	r21, 0x3F	; 63
    1dcc:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1dd0:	88 23       	and	r24, r24
    1dd2:	44 f4       	brge	.+16     	; 0x1de4 <HStepper_DIR_MODE+0x1102>
		__ticks = 1;
    1dd4:	fe 01       	movw	r30, r28
    1dd6:	e5 54       	subi	r30, 0x45	; 69
    1dd8:	ff 4f       	sbci	r31, 0xFF	; 255
    1dda:	81 e0       	ldi	r24, 0x01	; 1
    1ddc:	90 e0       	ldi	r25, 0x00	; 0
    1dde:	91 83       	std	Z+1, r25	; 0x01
    1de0:	80 83       	st	Z, r24
    1de2:	64 c0       	rjmp	.+200    	; 0x1eac <HStepper_DIR_MODE+0x11ca>
	else if (__tmp > 65535)
    1de4:	fe 01       	movw	r30, r28
    1de6:	e3 54       	subi	r30, 0x43	; 67
    1de8:	ff 4f       	sbci	r31, 0xFF	; 255
    1dea:	60 81       	ld	r22, Z
    1dec:	71 81       	ldd	r23, Z+1	; 0x01
    1dee:	82 81       	ldd	r24, Z+2	; 0x02
    1df0:	93 81       	ldd	r25, Z+3	; 0x03
    1df2:	20 e0       	ldi	r18, 0x00	; 0
    1df4:	3f ef       	ldi	r19, 0xFF	; 255
    1df6:	4f e7       	ldi	r20, 0x7F	; 127
    1df8:	57 e4       	ldi	r21, 0x47	; 71
    1dfa:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1dfe:	18 16       	cp	r1, r24
    1e00:	0c f0       	brlt	.+2      	; 0x1e04 <HStepper_DIR_MODE+0x1122>
    1e02:	43 c0       	rjmp	.+134    	; 0x1e8a <HStepper_DIR_MODE+0x11a8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1e04:	fe 01       	movw	r30, r28
    1e06:	ef 53       	subi	r30, 0x3F	; 63
    1e08:	ff 4f       	sbci	r31, 0xFF	; 255
    1e0a:	60 81       	ld	r22, Z
    1e0c:	71 81       	ldd	r23, Z+1	; 0x01
    1e0e:	82 81       	ldd	r24, Z+2	; 0x02
    1e10:	93 81       	ldd	r25, Z+3	; 0x03
    1e12:	20 e0       	ldi	r18, 0x00	; 0
    1e14:	30 e0       	ldi	r19, 0x00	; 0
    1e16:	40 e2       	ldi	r20, 0x20	; 32
    1e18:	51 e4       	ldi	r21, 0x41	; 65
    1e1a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1e1e:	dc 01       	movw	r26, r24
    1e20:	cb 01       	movw	r24, r22
    1e22:	8e 01       	movw	r16, r28
    1e24:	05 54       	subi	r16, 0x45	; 69
    1e26:	1f 4f       	sbci	r17, 0xFF	; 255
    1e28:	bc 01       	movw	r22, r24
    1e2a:	cd 01       	movw	r24, r26
    1e2c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1e30:	dc 01       	movw	r26, r24
    1e32:	cb 01       	movw	r24, r22
    1e34:	f8 01       	movw	r30, r16
    1e36:	91 83       	std	Z+1, r25	; 0x01
    1e38:	80 83       	st	Z, r24
    1e3a:	1f c0       	rjmp	.+62     	; 0x1e7a <HStepper_DIR_MODE+0x1198>
    1e3c:	fe 01       	movw	r30, r28
    1e3e:	e7 54       	subi	r30, 0x47	; 71
    1e40:	ff 4f       	sbci	r31, 0xFF	; 255
    1e42:	88 ec       	ldi	r24, 0xC8	; 200
    1e44:	90 e0       	ldi	r25, 0x00	; 0
    1e46:	91 83       	std	Z+1, r25	; 0x01
    1e48:	80 83       	st	Z, r24
    1e4a:	fe 01       	movw	r30, r28
    1e4c:	e7 54       	subi	r30, 0x47	; 71
    1e4e:	ff 4f       	sbci	r31, 0xFF	; 255
    1e50:	80 81       	ld	r24, Z
    1e52:	91 81       	ldd	r25, Z+1	; 0x01
    1e54:	01 97       	sbiw	r24, 0x01	; 1
    1e56:	f1 f7       	brne	.-4      	; 0x1e54 <HStepper_DIR_MODE+0x1172>
    1e58:	fe 01       	movw	r30, r28
    1e5a:	e7 54       	subi	r30, 0x47	; 71
    1e5c:	ff 4f       	sbci	r31, 0xFF	; 255
    1e5e:	91 83       	std	Z+1, r25	; 0x01
    1e60:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1e62:	de 01       	movw	r26, r28
    1e64:	a5 54       	subi	r26, 0x45	; 69
    1e66:	bf 4f       	sbci	r27, 0xFF	; 255
    1e68:	fe 01       	movw	r30, r28
    1e6a:	e5 54       	subi	r30, 0x45	; 69
    1e6c:	ff 4f       	sbci	r31, 0xFF	; 255
    1e6e:	80 81       	ld	r24, Z
    1e70:	91 81       	ldd	r25, Z+1	; 0x01
    1e72:	01 97       	sbiw	r24, 0x01	; 1
    1e74:	11 96       	adiw	r26, 0x01	; 1
    1e76:	9c 93       	st	X, r25
    1e78:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1e7a:	fe 01       	movw	r30, r28
    1e7c:	e5 54       	subi	r30, 0x45	; 69
    1e7e:	ff 4f       	sbci	r31, 0xFF	; 255
    1e80:	80 81       	ld	r24, Z
    1e82:	91 81       	ldd	r25, Z+1	; 0x01
    1e84:	00 97       	sbiw	r24, 0x00	; 0
    1e86:	d1 f6       	brne	.-76     	; 0x1e3c <HStepper_DIR_MODE+0x115a>
    1e88:	27 c0       	rjmp	.+78     	; 0x1ed8 <HStepper_DIR_MODE+0x11f6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1e8a:	8e 01       	movw	r16, r28
    1e8c:	05 54       	subi	r16, 0x45	; 69
    1e8e:	1f 4f       	sbci	r17, 0xFF	; 255
    1e90:	fe 01       	movw	r30, r28
    1e92:	e3 54       	subi	r30, 0x43	; 67
    1e94:	ff 4f       	sbci	r31, 0xFF	; 255
    1e96:	60 81       	ld	r22, Z
    1e98:	71 81       	ldd	r23, Z+1	; 0x01
    1e9a:	82 81       	ldd	r24, Z+2	; 0x02
    1e9c:	93 81       	ldd	r25, Z+3	; 0x03
    1e9e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1ea2:	dc 01       	movw	r26, r24
    1ea4:	cb 01       	movw	r24, r22
    1ea6:	f8 01       	movw	r30, r16
    1ea8:	91 83       	std	Z+1, r25	; 0x01
    1eaa:	80 83       	st	Z, r24
    1eac:	de 01       	movw	r26, r28
    1eae:	a9 54       	subi	r26, 0x49	; 73
    1eb0:	bf 4f       	sbci	r27, 0xFF	; 255
    1eb2:	fe 01       	movw	r30, r28
    1eb4:	e5 54       	subi	r30, 0x45	; 69
    1eb6:	ff 4f       	sbci	r31, 0xFF	; 255
    1eb8:	80 81       	ld	r24, Z
    1eba:	91 81       	ldd	r25, Z+1	; 0x01
    1ebc:	8d 93       	st	X+, r24
    1ebe:	9c 93       	st	X, r25
    1ec0:	fe 01       	movw	r30, r28
    1ec2:	e9 54       	subi	r30, 0x49	; 73
    1ec4:	ff 4f       	sbci	r31, 0xFF	; 255
    1ec6:	80 81       	ld	r24, Z
    1ec8:	91 81       	ldd	r25, Z+1	; 0x01
    1eca:	01 97       	sbiw	r24, 0x01	; 1
    1ecc:	f1 f7       	brne	.-4      	; 0x1eca <HStepper_DIR_MODE+0x11e8>
    1ece:	fe 01       	movw	r30, r28
    1ed0:	e9 54       	subi	r30, 0x49	; 73
    1ed2:	ff 4f       	sbci	r31, 0xFF	; 255
    1ed4:	91 83       	std	Z+1, r25	; 0x01
    1ed6:	80 83       	st	Z, r24

			_delay_ms(Stepper_speed);
			MDIO_vSetPinValue(HW_PORT,Coil_Blue,DIO_LOW);
    1ed8:	83 e0       	ldi	r24, 0x03	; 3
    1eda:	60 e0       	ldi	r22, 0x00	; 0
    1edc:	40 e0       	ldi	r20, 0x00	; 0
    1ede:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
			MDIO_vSetPinValue(HW_PORT,Coil_Pink,DIO_HIGH);
    1ee2:	83 e0       	ldi	r24, 0x03	; 3
    1ee4:	61 e0       	ldi	r22, 0x01	; 1
    1ee6:	41 e0       	ldi	r20, 0x01	; 1
    1ee8:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
			MDIO_vSetPinValue(HW_PORT,Coil_Yellow,DIO_LOW);
    1eec:	83 e0       	ldi	r24, 0x03	; 3
    1eee:	62 e0       	ldi	r22, 0x02	; 2
    1ef0:	40 e0       	ldi	r20, 0x00	; 0
    1ef2:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
			MDIO_vSetPinValue(HW_PORT,Coil_Orange,DIO_LOW);
    1ef6:	83 e0       	ldi	r24, 0x03	; 3
    1ef8:	63 e0       	ldi	r22, 0x03	; 3
    1efa:	40 e0       	ldi	r20, 0x00	; 0
    1efc:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
    1f00:	fe 01       	movw	r30, r28
    1f02:	ed 54       	subi	r30, 0x4D	; 77
    1f04:	ff 4f       	sbci	r31, 0xFF	; 255
    1f06:	80 e0       	ldi	r24, 0x00	; 0
    1f08:	90 e0       	ldi	r25, 0x00	; 0
    1f0a:	a0 ea       	ldi	r26, 0xA0	; 160
    1f0c:	b0 e4       	ldi	r27, 0x40	; 64
    1f0e:	80 83       	st	Z, r24
    1f10:	91 83       	std	Z+1, r25	; 0x01
    1f12:	a2 83       	std	Z+2, r26	; 0x02
    1f14:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1f16:	8e 01       	movw	r16, r28
    1f18:	01 55       	subi	r16, 0x51	; 81
    1f1a:	1f 4f       	sbci	r17, 0xFF	; 255
    1f1c:	fe 01       	movw	r30, r28
    1f1e:	ed 54       	subi	r30, 0x4D	; 77
    1f20:	ff 4f       	sbci	r31, 0xFF	; 255
    1f22:	60 81       	ld	r22, Z
    1f24:	71 81       	ldd	r23, Z+1	; 0x01
    1f26:	82 81       	ldd	r24, Z+2	; 0x02
    1f28:	93 81       	ldd	r25, Z+3	; 0x03
    1f2a:	20 e0       	ldi	r18, 0x00	; 0
    1f2c:	30 e0       	ldi	r19, 0x00	; 0
    1f2e:	4a ef       	ldi	r20, 0xFA	; 250
    1f30:	54 e4       	ldi	r21, 0x44	; 68
    1f32:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1f36:	dc 01       	movw	r26, r24
    1f38:	cb 01       	movw	r24, r22
    1f3a:	f8 01       	movw	r30, r16
    1f3c:	80 83       	st	Z, r24
    1f3e:	91 83       	std	Z+1, r25	; 0x01
    1f40:	a2 83       	std	Z+2, r26	; 0x02
    1f42:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1f44:	fe 01       	movw	r30, r28
    1f46:	e1 55       	subi	r30, 0x51	; 81
    1f48:	ff 4f       	sbci	r31, 0xFF	; 255
    1f4a:	60 81       	ld	r22, Z
    1f4c:	71 81       	ldd	r23, Z+1	; 0x01
    1f4e:	82 81       	ldd	r24, Z+2	; 0x02
    1f50:	93 81       	ldd	r25, Z+3	; 0x03
    1f52:	20 e0       	ldi	r18, 0x00	; 0
    1f54:	30 e0       	ldi	r19, 0x00	; 0
    1f56:	40 e8       	ldi	r20, 0x80	; 128
    1f58:	5f e3       	ldi	r21, 0x3F	; 63
    1f5a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1f5e:	88 23       	and	r24, r24
    1f60:	44 f4       	brge	.+16     	; 0x1f72 <HStepper_DIR_MODE+0x1290>
		__ticks = 1;
    1f62:	fe 01       	movw	r30, r28
    1f64:	e3 55       	subi	r30, 0x53	; 83
    1f66:	ff 4f       	sbci	r31, 0xFF	; 255
    1f68:	81 e0       	ldi	r24, 0x01	; 1
    1f6a:	90 e0       	ldi	r25, 0x00	; 0
    1f6c:	91 83       	std	Z+1, r25	; 0x01
    1f6e:	80 83       	st	Z, r24
    1f70:	64 c0       	rjmp	.+200    	; 0x203a <HStepper_DIR_MODE+0x1358>
	else if (__tmp > 65535)
    1f72:	fe 01       	movw	r30, r28
    1f74:	e1 55       	subi	r30, 0x51	; 81
    1f76:	ff 4f       	sbci	r31, 0xFF	; 255
    1f78:	60 81       	ld	r22, Z
    1f7a:	71 81       	ldd	r23, Z+1	; 0x01
    1f7c:	82 81       	ldd	r24, Z+2	; 0x02
    1f7e:	93 81       	ldd	r25, Z+3	; 0x03
    1f80:	20 e0       	ldi	r18, 0x00	; 0
    1f82:	3f ef       	ldi	r19, 0xFF	; 255
    1f84:	4f e7       	ldi	r20, 0x7F	; 127
    1f86:	57 e4       	ldi	r21, 0x47	; 71
    1f88:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1f8c:	18 16       	cp	r1, r24
    1f8e:	0c f0       	brlt	.+2      	; 0x1f92 <HStepper_DIR_MODE+0x12b0>
    1f90:	43 c0       	rjmp	.+134    	; 0x2018 <HStepper_DIR_MODE+0x1336>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1f92:	fe 01       	movw	r30, r28
    1f94:	ed 54       	subi	r30, 0x4D	; 77
    1f96:	ff 4f       	sbci	r31, 0xFF	; 255
    1f98:	60 81       	ld	r22, Z
    1f9a:	71 81       	ldd	r23, Z+1	; 0x01
    1f9c:	82 81       	ldd	r24, Z+2	; 0x02
    1f9e:	93 81       	ldd	r25, Z+3	; 0x03
    1fa0:	20 e0       	ldi	r18, 0x00	; 0
    1fa2:	30 e0       	ldi	r19, 0x00	; 0
    1fa4:	40 e2       	ldi	r20, 0x20	; 32
    1fa6:	51 e4       	ldi	r21, 0x41	; 65
    1fa8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1fac:	dc 01       	movw	r26, r24
    1fae:	cb 01       	movw	r24, r22
    1fb0:	8e 01       	movw	r16, r28
    1fb2:	03 55       	subi	r16, 0x53	; 83
    1fb4:	1f 4f       	sbci	r17, 0xFF	; 255
    1fb6:	bc 01       	movw	r22, r24
    1fb8:	cd 01       	movw	r24, r26
    1fba:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1fbe:	dc 01       	movw	r26, r24
    1fc0:	cb 01       	movw	r24, r22
    1fc2:	f8 01       	movw	r30, r16
    1fc4:	91 83       	std	Z+1, r25	; 0x01
    1fc6:	80 83       	st	Z, r24
    1fc8:	1f c0       	rjmp	.+62     	; 0x2008 <HStepper_DIR_MODE+0x1326>
    1fca:	fe 01       	movw	r30, r28
    1fcc:	e5 55       	subi	r30, 0x55	; 85
    1fce:	ff 4f       	sbci	r31, 0xFF	; 255
    1fd0:	88 ec       	ldi	r24, 0xC8	; 200
    1fd2:	90 e0       	ldi	r25, 0x00	; 0
    1fd4:	91 83       	std	Z+1, r25	; 0x01
    1fd6:	80 83       	st	Z, r24
    1fd8:	fe 01       	movw	r30, r28
    1fda:	e5 55       	subi	r30, 0x55	; 85
    1fdc:	ff 4f       	sbci	r31, 0xFF	; 255
    1fde:	80 81       	ld	r24, Z
    1fe0:	91 81       	ldd	r25, Z+1	; 0x01
    1fe2:	01 97       	sbiw	r24, 0x01	; 1
    1fe4:	f1 f7       	brne	.-4      	; 0x1fe2 <HStepper_DIR_MODE+0x1300>
    1fe6:	fe 01       	movw	r30, r28
    1fe8:	e5 55       	subi	r30, 0x55	; 85
    1fea:	ff 4f       	sbci	r31, 0xFF	; 255
    1fec:	91 83       	std	Z+1, r25	; 0x01
    1fee:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1ff0:	de 01       	movw	r26, r28
    1ff2:	a3 55       	subi	r26, 0x53	; 83
    1ff4:	bf 4f       	sbci	r27, 0xFF	; 255
    1ff6:	fe 01       	movw	r30, r28
    1ff8:	e3 55       	subi	r30, 0x53	; 83
    1ffa:	ff 4f       	sbci	r31, 0xFF	; 255
    1ffc:	80 81       	ld	r24, Z
    1ffe:	91 81       	ldd	r25, Z+1	; 0x01
    2000:	01 97       	sbiw	r24, 0x01	; 1
    2002:	11 96       	adiw	r26, 0x01	; 1
    2004:	9c 93       	st	X, r25
    2006:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2008:	fe 01       	movw	r30, r28
    200a:	e3 55       	subi	r30, 0x53	; 83
    200c:	ff 4f       	sbci	r31, 0xFF	; 255
    200e:	80 81       	ld	r24, Z
    2010:	91 81       	ldd	r25, Z+1	; 0x01
    2012:	00 97       	sbiw	r24, 0x00	; 0
    2014:	d1 f6       	brne	.-76     	; 0x1fca <HStepper_DIR_MODE+0x12e8>
    2016:	27 c0       	rjmp	.+78     	; 0x2066 <HStepper_DIR_MODE+0x1384>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2018:	8e 01       	movw	r16, r28
    201a:	03 55       	subi	r16, 0x53	; 83
    201c:	1f 4f       	sbci	r17, 0xFF	; 255
    201e:	fe 01       	movw	r30, r28
    2020:	e1 55       	subi	r30, 0x51	; 81
    2022:	ff 4f       	sbci	r31, 0xFF	; 255
    2024:	60 81       	ld	r22, Z
    2026:	71 81       	ldd	r23, Z+1	; 0x01
    2028:	82 81       	ldd	r24, Z+2	; 0x02
    202a:	93 81       	ldd	r25, Z+3	; 0x03
    202c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2030:	dc 01       	movw	r26, r24
    2032:	cb 01       	movw	r24, r22
    2034:	f8 01       	movw	r30, r16
    2036:	91 83       	std	Z+1, r25	; 0x01
    2038:	80 83       	st	Z, r24
    203a:	de 01       	movw	r26, r28
    203c:	a7 55       	subi	r26, 0x57	; 87
    203e:	bf 4f       	sbci	r27, 0xFF	; 255
    2040:	fe 01       	movw	r30, r28
    2042:	e3 55       	subi	r30, 0x53	; 83
    2044:	ff 4f       	sbci	r31, 0xFF	; 255
    2046:	80 81       	ld	r24, Z
    2048:	91 81       	ldd	r25, Z+1	; 0x01
    204a:	8d 93       	st	X+, r24
    204c:	9c 93       	st	X, r25
    204e:	fe 01       	movw	r30, r28
    2050:	e7 55       	subi	r30, 0x57	; 87
    2052:	ff 4f       	sbci	r31, 0xFF	; 255
    2054:	80 81       	ld	r24, Z
    2056:	91 81       	ldd	r25, Z+1	; 0x01
    2058:	01 97       	sbiw	r24, 0x01	; 1
    205a:	f1 f7       	brne	.-4      	; 0x2058 <HStepper_DIR_MODE+0x1376>
    205c:	fe 01       	movw	r30, r28
    205e:	e7 55       	subi	r30, 0x57	; 87
    2060:	ff 4f       	sbci	r31, 0xFF	; 255
    2062:	91 83       	std	Z+1, r25	; 0x01
    2064:	80 83       	st	Z, r24

			_delay_ms(Stepper_speed);
			MDIO_vSetPinValue(HW_PORT,Coil_Blue,DIO_LOW);
    2066:	83 e0       	ldi	r24, 0x03	; 3
    2068:	60 e0       	ldi	r22, 0x00	; 0
    206a:	40 e0       	ldi	r20, 0x00	; 0
    206c:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
			MDIO_vSetPinValue(HW_PORT,Coil_Pink,DIO_HIGH);
    2070:	83 e0       	ldi	r24, 0x03	; 3
    2072:	61 e0       	ldi	r22, 0x01	; 1
    2074:	41 e0       	ldi	r20, 0x01	; 1
    2076:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
			MDIO_vSetPinValue(HW_PORT,Coil_Yellow,DIO_HIGH);
    207a:	83 e0       	ldi	r24, 0x03	; 3
    207c:	62 e0       	ldi	r22, 0x02	; 2
    207e:	41 e0       	ldi	r20, 0x01	; 1
    2080:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
			MDIO_vSetPinValue(HW_PORT,Coil_Orange,DIO_LOW);
    2084:	83 e0       	ldi	r24, 0x03	; 3
    2086:	63 e0       	ldi	r22, 0x03	; 3
    2088:	40 e0       	ldi	r20, 0x00	; 0
    208a:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
    208e:	fe 01       	movw	r30, r28
    2090:	eb 55       	subi	r30, 0x5B	; 91
    2092:	ff 4f       	sbci	r31, 0xFF	; 255
    2094:	80 e0       	ldi	r24, 0x00	; 0
    2096:	90 e0       	ldi	r25, 0x00	; 0
    2098:	a0 ea       	ldi	r26, 0xA0	; 160
    209a:	b0 e4       	ldi	r27, 0x40	; 64
    209c:	80 83       	st	Z, r24
    209e:	91 83       	std	Z+1, r25	; 0x01
    20a0:	a2 83       	std	Z+2, r26	; 0x02
    20a2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    20a4:	8e 01       	movw	r16, r28
    20a6:	0f 55       	subi	r16, 0x5F	; 95
    20a8:	1f 4f       	sbci	r17, 0xFF	; 255
    20aa:	fe 01       	movw	r30, r28
    20ac:	eb 55       	subi	r30, 0x5B	; 91
    20ae:	ff 4f       	sbci	r31, 0xFF	; 255
    20b0:	60 81       	ld	r22, Z
    20b2:	71 81       	ldd	r23, Z+1	; 0x01
    20b4:	82 81       	ldd	r24, Z+2	; 0x02
    20b6:	93 81       	ldd	r25, Z+3	; 0x03
    20b8:	20 e0       	ldi	r18, 0x00	; 0
    20ba:	30 e0       	ldi	r19, 0x00	; 0
    20bc:	4a ef       	ldi	r20, 0xFA	; 250
    20be:	54 e4       	ldi	r21, 0x44	; 68
    20c0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    20c4:	dc 01       	movw	r26, r24
    20c6:	cb 01       	movw	r24, r22
    20c8:	f8 01       	movw	r30, r16
    20ca:	80 83       	st	Z, r24
    20cc:	91 83       	std	Z+1, r25	; 0x01
    20ce:	a2 83       	std	Z+2, r26	; 0x02
    20d0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    20d2:	fe 01       	movw	r30, r28
    20d4:	ef 55       	subi	r30, 0x5F	; 95
    20d6:	ff 4f       	sbci	r31, 0xFF	; 255
    20d8:	60 81       	ld	r22, Z
    20da:	71 81       	ldd	r23, Z+1	; 0x01
    20dc:	82 81       	ldd	r24, Z+2	; 0x02
    20de:	93 81       	ldd	r25, Z+3	; 0x03
    20e0:	20 e0       	ldi	r18, 0x00	; 0
    20e2:	30 e0       	ldi	r19, 0x00	; 0
    20e4:	40 e8       	ldi	r20, 0x80	; 128
    20e6:	5f e3       	ldi	r21, 0x3F	; 63
    20e8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    20ec:	88 23       	and	r24, r24
    20ee:	44 f4       	brge	.+16     	; 0x2100 <HStepper_DIR_MODE+0x141e>
		__ticks = 1;
    20f0:	fe 01       	movw	r30, r28
    20f2:	e1 56       	subi	r30, 0x61	; 97
    20f4:	ff 4f       	sbci	r31, 0xFF	; 255
    20f6:	81 e0       	ldi	r24, 0x01	; 1
    20f8:	90 e0       	ldi	r25, 0x00	; 0
    20fa:	91 83       	std	Z+1, r25	; 0x01
    20fc:	80 83       	st	Z, r24
    20fe:	64 c0       	rjmp	.+200    	; 0x21c8 <HStepper_DIR_MODE+0x14e6>
	else if (__tmp > 65535)
    2100:	fe 01       	movw	r30, r28
    2102:	ef 55       	subi	r30, 0x5F	; 95
    2104:	ff 4f       	sbci	r31, 0xFF	; 255
    2106:	60 81       	ld	r22, Z
    2108:	71 81       	ldd	r23, Z+1	; 0x01
    210a:	82 81       	ldd	r24, Z+2	; 0x02
    210c:	93 81       	ldd	r25, Z+3	; 0x03
    210e:	20 e0       	ldi	r18, 0x00	; 0
    2110:	3f ef       	ldi	r19, 0xFF	; 255
    2112:	4f e7       	ldi	r20, 0x7F	; 127
    2114:	57 e4       	ldi	r21, 0x47	; 71
    2116:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    211a:	18 16       	cp	r1, r24
    211c:	0c f0       	brlt	.+2      	; 0x2120 <HStepper_DIR_MODE+0x143e>
    211e:	43 c0       	rjmp	.+134    	; 0x21a6 <HStepper_DIR_MODE+0x14c4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2120:	fe 01       	movw	r30, r28
    2122:	eb 55       	subi	r30, 0x5B	; 91
    2124:	ff 4f       	sbci	r31, 0xFF	; 255
    2126:	60 81       	ld	r22, Z
    2128:	71 81       	ldd	r23, Z+1	; 0x01
    212a:	82 81       	ldd	r24, Z+2	; 0x02
    212c:	93 81       	ldd	r25, Z+3	; 0x03
    212e:	20 e0       	ldi	r18, 0x00	; 0
    2130:	30 e0       	ldi	r19, 0x00	; 0
    2132:	40 e2       	ldi	r20, 0x20	; 32
    2134:	51 e4       	ldi	r21, 0x41	; 65
    2136:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    213a:	dc 01       	movw	r26, r24
    213c:	cb 01       	movw	r24, r22
    213e:	8e 01       	movw	r16, r28
    2140:	01 56       	subi	r16, 0x61	; 97
    2142:	1f 4f       	sbci	r17, 0xFF	; 255
    2144:	bc 01       	movw	r22, r24
    2146:	cd 01       	movw	r24, r26
    2148:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    214c:	dc 01       	movw	r26, r24
    214e:	cb 01       	movw	r24, r22
    2150:	f8 01       	movw	r30, r16
    2152:	91 83       	std	Z+1, r25	; 0x01
    2154:	80 83       	st	Z, r24
    2156:	1f c0       	rjmp	.+62     	; 0x2196 <HStepper_DIR_MODE+0x14b4>
    2158:	fe 01       	movw	r30, r28
    215a:	e3 56       	subi	r30, 0x63	; 99
    215c:	ff 4f       	sbci	r31, 0xFF	; 255
    215e:	88 ec       	ldi	r24, 0xC8	; 200
    2160:	90 e0       	ldi	r25, 0x00	; 0
    2162:	91 83       	std	Z+1, r25	; 0x01
    2164:	80 83       	st	Z, r24
    2166:	fe 01       	movw	r30, r28
    2168:	e3 56       	subi	r30, 0x63	; 99
    216a:	ff 4f       	sbci	r31, 0xFF	; 255
    216c:	80 81       	ld	r24, Z
    216e:	91 81       	ldd	r25, Z+1	; 0x01
    2170:	01 97       	sbiw	r24, 0x01	; 1
    2172:	f1 f7       	brne	.-4      	; 0x2170 <HStepper_DIR_MODE+0x148e>
    2174:	fe 01       	movw	r30, r28
    2176:	e3 56       	subi	r30, 0x63	; 99
    2178:	ff 4f       	sbci	r31, 0xFF	; 255
    217a:	91 83       	std	Z+1, r25	; 0x01
    217c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    217e:	de 01       	movw	r26, r28
    2180:	a1 56       	subi	r26, 0x61	; 97
    2182:	bf 4f       	sbci	r27, 0xFF	; 255
    2184:	fe 01       	movw	r30, r28
    2186:	e1 56       	subi	r30, 0x61	; 97
    2188:	ff 4f       	sbci	r31, 0xFF	; 255
    218a:	80 81       	ld	r24, Z
    218c:	91 81       	ldd	r25, Z+1	; 0x01
    218e:	01 97       	sbiw	r24, 0x01	; 1
    2190:	11 96       	adiw	r26, 0x01	; 1
    2192:	9c 93       	st	X, r25
    2194:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2196:	fe 01       	movw	r30, r28
    2198:	e1 56       	subi	r30, 0x61	; 97
    219a:	ff 4f       	sbci	r31, 0xFF	; 255
    219c:	80 81       	ld	r24, Z
    219e:	91 81       	ldd	r25, Z+1	; 0x01
    21a0:	00 97       	sbiw	r24, 0x00	; 0
    21a2:	d1 f6       	brne	.-76     	; 0x2158 <HStepper_DIR_MODE+0x1476>
    21a4:	27 c0       	rjmp	.+78     	; 0x21f4 <HStepper_DIR_MODE+0x1512>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    21a6:	8e 01       	movw	r16, r28
    21a8:	01 56       	subi	r16, 0x61	; 97
    21aa:	1f 4f       	sbci	r17, 0xFF	; 255
    21ac:	fe 01       	movw	r30, r28
    21ae:	ef 55       	subi	r30, 0x5F	; 95
    21b0:	ff 4f       	sbci	r31, 0xFF	; 255
    21b2:	60 81       	ld	r22, Z
    21b4:	71 81       	ldd	r23, Z+1	; 0x01
    21b6:	82 81       	ldd	r24, Z+2	; 0x02
    21b8:	93 81       	ldd	r25, Z+3	; 0x03
    21ba:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    21be:	dc 01       	movw	r26, r24
    21c0:	cb 01       	movw	r24, r22
    21c2:	f8 01       	movw	r30, r16
    21c4:	91 83       	std	Z+1, r25	; 0x01
    21c6:	80 83       	st	Z, r24
    21c8:	de 01       	movw	r26, r28
    21ca:	a5 56       	subi	r26, 0x65	; 101
    21cc:	bf 4f       	sbci	r27, 0xFF	; 255
    21ce:	fe 01       	movw	r30, r28
    21d0:	e1 56       	subi	r30, 0x61	; 97
    21d2:	ff 4f       	sbci	r31, 0xFF	; 255
    21d4:	80 81       	ld	r24, Z
    21d6:	91 81       	ldd	r25, Z+1	; 0x01
    21d8:	8d 93       	st	X+, r24
    21da:	9c 93       	st	X, r25
    21dc:	fe 01       	movw	r30, r28
    21de:	e5 56       	subi	r30, 0x65	; 101
    21e0:	ff 4f       	sbci	r31, 0xFF	; 255
    21e2:	80 81       	ld	r24, Z
    21e4:	91 81       	ldd	r25, Z+1	; 0x01
    21e6:	01 97       	sbiw	r24, 0x01	; 1
    21e8:	f1 f7       	brne	.-4      	; 0x21e6 <HStepper_DIR_MODE+0x1504>
    21ea:	fe 01       	movw	r30, r28
    21ec:	e5 56       	subi	r30, 0x65	; 101
    21ee:	ff 4f       	sbci	r31, 0xFF	; 255
    21f0:	91 83       	std	Z+1, r25	; 0x01
    21f2:	80 83       	st	Z, r24


			_delay_ms(Stepper_speed);
			MDIO_vSetPinValue(HW_PORT,Coil_Blue,DIO_LOW);
    21f4:	83 e0       	ldi	r24, 0x03	; 3
    21f6:	60 e0       	ldi	r22, 0x00	; 0
    21f8:	40 e0       	ldi	r20, 0x00	; 0
    21fa:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
			MDIO_vSetPinValue(HW_PORT,Coil_Pink,DIO_LOW);
    21fe:	83 e0       	ldi	r24, 0x03	; 3
    2200:	61 e0       	ldi	r22, 0x01	; 1
    2202:	40 e0       	ldi	r20, 0x00	; 0
    2204:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
			MDIO_vSetPinValue(HW_PORT,Coil_Yellow,DIO_HIGH);
    2208:	83 e0       	ldi	r24, 0x03	; 3
    220a:	62 e0       	ldi	r22, 0x02	; 2
    220c:	41 e0       	ldi	r20, 0x01	; 1
    220e:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
			MDIO_vSetPinValue(HW_PORT,Coil_Orange,DIO_LOW);
    2212:	83 e0       	ldi	r24, 0x03	; 3
    2214:	63 e0       	ldi	r22, 0x03	; 3
    2216:	40 e0       	ldi	r20, 0x00	; 0
    2218:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
    221c:	fe 01       	movw	r30, r28
    221e:	e9 56       	subi	r30, 0x69	; 105
    2220:	ff 4f       	sbci	r31, 0xFF	; 255
    2222:	80 e0       	ldi	r24, 0x00	; 0
    2224:	90 e0       	ldi	r25, 0x00	; 0
    2226:	a0 ea       	ldi	r26, 0xA0	; 160
    2228:	b0 e4       	ldi	r27, 0x40	; 64
    222a:	80 83       	st	Z, r24
    222c:	91 83       	std	Z+1, r25	; 0x01
    222e:	a2 83       	std	Z+2, r26	; 0x02
    2230:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2232:	8e 01       	movw	r16, r28
    2234:	0d 56       	subi	r16, 0x6D	; 109
    2236:	1f 4f       	sbci	r17, 0xFF	; 255
    2238:	fe 01       	movw	r30, r28
    223a:	e9 56       	subi	r30, 0x69	; 105
    223c:	ff 4f       	sbci	r31, 0xFF	; 255
    223e:	60 81       	ld	r22, Z
    2240:	71 81       	ldd	r23, Z+1	; 0x01
    2242:	82 81       	ldd	r24, Z+2	; 0x02
    2244:	93 81       	ldd	r25, Z+3	; 0x03
    2246:	20 e0       	ldi	r18, 0x00	; 0
    2248:	30 e0       	ldi	r19, 0x00	; 0
    224a:	4a ef       	ldi	r20, 0xFA	; 250
    224c:	54 e4       	ldi	r21, 0x44	; 68
    224e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2252:	dc 01       	movw	r26, r24
    2254:	cb 01       	movw	r24, r22
    2256:	f8 01       	movw	r30, r16
    2258:	80 83       	st	Z, r24
    225a:	91 83       	std	Z+1, r25	; 0x01
    225c:	a2 83       	std	Z+2, r26	; 0x02
    225e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2260:	fe 01       	movw	r30, r28
    2262:	ed 56       	subi	r30, 0x6D	; 109
    2264:	ff 4f       	sbci	r31, 0xFF	; 255
    2266:	60 81       	ld	r22, Z
    2268:	71 81       	ldd	r23, Z+1	; 0x01
    226a:	82 81       	ldd	r24, Z+2	; 0x02
    226c:	93 81       	ldd	r25, Z+3	; 0x03
    226e:	20 e0       	ldi	r18, 0x00	; 0
    2270:	30 e0       	ldi	r19, 0x00	; 0
    2272:	40 e8       	ldi	r20, 0x80	; 128
    2274:	5f e3       	ldi	r21, 0x3F	; 63
    2276:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    227a:	88 23       	and	r24, r24
    227c:	44 f4       	brge	.+16     	; 0x228e <HStepper_DIR_MODE+0x15ac>
		__ticks = 1;
    227e:	fe 01       	movw	r30, r28
    2280:	ef 56       	subi	r30, 0x6F	; 111
    2282:	ff 4f       	sbci	r31, 0xFF	; 255
    2284:	81 e0       	ldi	r24, 0x01	; 1
    2286:	90 e0       	ldi	r25, 0x00	; 0
    2288:	91 83       	std	Z+1, r25	; 0x01
    228a:	80 83       	st	Z, r24
    228c:	64 c0       	rjmp	.+200    	; 0x2356 <HStepper_DIR_MODE+0x1674>
	else if (__tmp > 65535)
    228e:	fe 01       	movw	r30, r28
    2290:	ed 56       	subi	r30, 0x6D	; 109
    2292:	ff 4f       	sbci	r31, 0xFF	; 255
    2294:	60 81       	ld	r22, Z
    2296:	71 81       	ldd	r23, Z+1	; 0x01
    2298:	82 81       	ldd	r24, Z+2	; 0x02
    229a:	93 81       	ldd	r25, Z+3	; 0x03
    229c:	20 e0       	ldi	r18, 0x00	; 0
    229e:	3f ef       	ldi	r19, 0xFF	; 255
    22a0:	4f e7       	ldi	r20, 0x7F	; 127
    22a2:	57 e4       	ldi	r21, 0x47	; 71
    22a4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    22a8:	18 16       	cp	r1, r24
    22aa:	0c f0       	brlt	.+2      	; 0x22ae <HStepper_DIR_MODE+0x15cc>
    22ac:	43 c0       	rjmp	.+134    	; 0x2334 <HStepper_DIR_MODE+0x1652>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    22ae:	fe 01       	movw	r30, r28
    22b0:	e9 56       	subi	r30, 0x69	; 105
    22b2:	ff 4f       	sbci	r31, 0xFF	; 255
    22b4:	60 81       	ld	r22, Z
    22b6:	71 81       	ldd	r23, Z+1	; 0x01
    22b8:	82 81       	ldd	r24, Z+2	; 0x02
    22ba:	93 81       	ldd	r25, Z+3	; 0x03
    22bc:	20 e0       	ldi	r18, 0x00	; 0
    22be:	30 e0       	ldi	r19, 0x00	; 0
    22c0:	40 e2       	ldi	r20, 0x20	; 32
    22c2:	51 e4       	ldi	r21, 0x41	; 65
    22c4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    22c8:	dc 01       	movw	r26, r24
    22ca:	cb 01       	movw	r24, r22
    22cc:	8e 01       	movw	r16, r28
    22ce:	0f 56       	subi	r16, 0x6F	; 111
    22d0:	1f 4f       	sbci	r17, 0xFF	; 255
    22d2:	bc 01       	movw	r22, r24
    22d4:	cd 01       	movw	r24, r26
    22d6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    22da:	dc 01       	movw	r26, r24
    22dc:	cb 01       	movw	r24, r22
    22de:	f8 01       	movw	r30, r16
    22e0:	91 83       	std	Z+1, r25	; 0x01
    22e2:	80 83       	st	Z, r24
    22e4:	1f c0       	rjmp	.+62     	; 0x2324 <HStepper_DIR_MODE+0x1642>
    22e6:	fe 01       	movw	r30, r28
    22e8:	e1 57       	subi	r30, 0x71	; 113
    22ea:	ff 4f       	sbci	r31, 0xFF	; 255
    22ec:	88 ec       	ldi	r24, 0xC8	; 200
    22ee:	90 e0       	ldi	r25, 0x00	; 0
    22f0:	91 83       	std	Z+1, r25	; 0x01
    22f2:	80 83       	st	Z, r24
    22f4:	fe 01       	movw	r30, r28
    22f6:	e1 57       	subi	r30, 0x71	; 113
    22f8:	ff 4f       	sbci	r31, 0xFF	; 255
    22fa:	80 81       	ld	r24, Z
    22fc:	91 81       	ldd	r25, Z+1	; 0x01
    22fe:	01 97       	sbiw	r24, 0x01	; 1
    2300:	f1 f7       	brne	.-4      	; 0x22fe <HStepper_DIR_MODE+0x161c>
    2302:	fe 01       	movw	r30, r28
    2304:	e1 57       	subi	r30, 0x71	; 113
    2306:	ff 4f       	sbci	r31, 0xFF	; 255
    2308:	91 83       	std	Z+1, r25	; 0x01
    230a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    230c:	de 01       	movw	r26, r28
    230e:	af 56       	subi	r26, 0x6F	; 111
    2310:	bf 4f       	sbci	r27, 0xFF	; 255
    2312:	fe 01       	movw	r30, r28
    2314:	ef 56       	subi	r30, 0x6F	; 111
    2316:	ff 4f       	sbci	r31, 0xFF	; 255
    2318:	80 81       	ld	r24, Z
    231a:	91 81       	ldd	r25, Z+1	; 0x01
    231c:	01 97       	sbiw	r24, 0x01	; 1
    231e:	11 96       	adiw	r26, 0x01	; 1
    2320:	9c 93       	st	X, r25
    2322:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2324:	fe 01       	movw	r30, r28
    2326:	ef 56       	subi	r30, 0x6F	; 111
    2328:	ff 4f       	sbci	r31, 0xFF	; 255
    232a:	80 81       	ld	r24, Z
    232c:	91 81       	ldd	r25, Z+1	; 0x01
    232e:	00 97       	sbiw	r24, 0x00	; 0
    2330:	d1 f6       	brne	.-76     	; 0x22e6 <HStepper_DIR_MODE+0x1604>
    2332:	27 c0       	rjmp	.+78     	; 0x2382 <HStepper_DIR_MODE+0x16a0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2334:	8e 01       	movw	r16, r28
    2336:	0f 56       	subi	r16, 0x6F	; 111
    2338:	1f 4f       	sbci	r17, 0xFF	; 255
    233a:	fe 01       	movw	r30, r28
    233c:	ed 56       	subi	r30, 0x6D	; 109
    233e:	ff 4f       	sbci	r31, 0xFF	; 255
    2340:	60 81       	ld	r22, Z
    2342:	71 81       	ldd	r23, Z+1	; 0x01
    2344:	82 81       	ldd	r24, Z+2	; 0x02
    2346:	93 81       	ldd	r25, Z+3	; 0x03
    2348:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    234c:	dc 01       	movw	r26, r24
    234e:	cb 01       	movw	r24, r22
    2350:	f8 01       	movw	r30, r16
    2352:	91 83       	std	Z+1, r25	; 0x01
    2354:	80 83       	st	Z, r24
    2356:	de 01       	movw	r26, r28
    2358:	a3 57       	subi	r26, 0x73	; 115
    235a:	bf 4f       	sbci	r27, 0xFF	; 255
    235c:	fe 01       	movw	r30, r28
    235e:	ef 56       	subi	r30, 0x6F	; 111
    2360:	ff 4f       	sbci	r31, 0xFF	; 255
    2362:	80 81       	ld	r24, Z
    2364:	91 81       	ldd	r25, Z+1	; 0x01
    2366:	8d 93       	st	X+, r24
    2368:	9c 93       	st	X, r25
    236a:	fe 01       	movw	r30, r28
    236c:	e3 57       	subi	r30, 0x73	; 115
    236e:	ff 4f       	sbci	r31, 0xFF	; 255
    2370:	80 81       	ld	r24, Z
    2372:	91 81       	ldd	r25, Z+1	; 0x01
    2374:	01 97       	sbiw	r24, 0x01	; 1
    2376:	f1 f7       	brne	.-4      	; 0x2374 <HStepper_DIR_MODE+0x1692>
    2378:	fe 01       	movw	r30, r28
    237a:	e3 57       	subi	r30, 0x73	; 115
    237c:	ff 4f       	sbci	r31, 0xFF	; 255
    237e:	91 83       	std	Z+1, r25	; 0x01
    2380:	80 83       	st	Z, r24

			_delay_ms(Stepper_speed);

			MDIO_vSetPinValue(HW_PORT,Coil_Blue,DIO_LOW);
    2382:	83 e0       	ldi	r24, 0x03	; 3
    2384:	60 e0       	ldi	r22, 0x00	; 0
    2386:	40 e0       	ldi	r20, 0x00	; 0
    2388:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
			MDIO_vSetPinValue(HW_PORT,Coil_Pink,DIO_LOW);
    238c:	83 e0       	ldi	r24, 0x03	; 3
    238e:	61 e0       	ldi	r22, 0x01	; 1
    2390:	40 e0       	ldi	r20, 0x00	; 0
    2392:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
			MDIO_vSetPinValue(HW_PORT,Coil_Yellow,DIO_HIGH);
    2396:	83 e0       	ldi	r24, 0x03	; 3
    2398:	62 e0       	ldi	r22, 0x02	; 2
    239a:	41 e0       	ldi	r20, 0x01	; 1
    239c:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
			MDIO_vSetPinValue(HW_PORT,Coil_Orange,DIO_HIGH);
    23a0:	83 e0       	ldi	r24, 0x03	; 3
    23a2:	63 e0       	ldi	r22, 0x03	; 3
    23a4:	41 e0       	ldi	r20, 0x01	; 1
    23a6:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
    23aa:	fe 01       	movw	r30, r28
    23ac:	e7 57       	subi	r30, 0x77	; 119
    23ae:	ff 4f       	sbci	r31, 0xFF	; 255
    23b0:	80 e0       	ldi	r24, 0x00	; 0
    23b2:	90 e0       	ldi	r25, 0x00	; 0
    23b4:	a0 ea       	ldi	r26, 0xA0	; 160
    23b6:	b0 e4       	ldi	r27, 0x40	; 64
    23b8:	80 83       	st	Z, r24
    23ba:	91 83       	std	Z+1, r25	; 0x01
    23bc:	a2 83       	std	Z+2, r26	; 0x02
    23be:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    23c0:	8e 01       	movw	r16, r28
    23c2:	0b 57       	subi	r16, 0x7B	; 123
    23c4:	1f 4f       	sbci	r17, 0xFF	; 255
    23c6:	fe 01       	movw	r30, r28
    23c8:	e7 57       	subi	r30, 0x77	; 119
    23ca:	ff 4f       	sbci	r31, 0xFF	; 255
    23cc:	60 81       	ld	r22, Z
    23ce:	71 81       	ldd	r23, Z+1	; 0x01
    23d0:	82 81       	ldd	r24, Z+2	; 0x02
    23d2:	93 81       	ldd	r25, Z+3	; 0x03
    23d4:	20 e0       	ldi	r18, 0x00	; 0
    23d6:	30 e0       	ldi	r19, 0x00	; 0
    23d8:	4a ef       	ldi	r20, 0xFA	; 250
    23da:	54 e4       	ldi	r21, 0x44	; 68
    23dc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    23e0:	dc 01       	movw	r26, r24
    23e2:	cb 01       	movw	r24, r22
    23e4:	f8 01       	movw	r30, r16
    23e6:	80 83       	st	Z, r24
    23e8:	91 83       	std	Z+1, r25	; 0x01
    23ea:	a2 83       	std	Z+2, r26	; 0x02
    23ec:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    23ee:	fe 01       	movw	r30, r28
    23f0:	eb 57       	subi	r30, 0x7B	; 123
    23f2:	ff 4f       	sbci	r31, 0xFF	; 255
    23f4:	60 81       	ld	r22, Z
    23f6:	71 81       	ldd	r23, Z+1	; 0x01
    23f8:	82 81       	ldd	r24, Z+2	; 0x02
    23fa:	93 81       	ldd	r25, Z+3	; 0x03
    23fc:	20 e0       	ldi	r18, 0x00	; 0
    23fe:	30 e0       	ldi	r19, 0x00	; 0
    2400:	40 e8       	ldi	r20, 0x80	; 128
    2402:	5f e3       	ldi	r21, 0x3F	; 63
    2404:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2408:	88 23       	and	r24, r24
    240a:	44 f4       	brge	.+16     	; 0x241c <HStepper_DIR_MODE+0x173a>
		__ticks = 1;
    240c:	fe 01       	movw	r30, r28
    240e:	ed 57       	subi	r30, 0x7D	; 125
    2410:	ff 4f       	sbci	r31, 0xFF	; 255
    2412:	81 e0       	ldi	r24, 0x01	; 1
    2414:	90 e0       	ldi	r25, 0x00	; 0
    2416:	91 83       	std	Z+1, r25	; 0x01
    2418:	80 83       	st	Z, r24
    241a:	64 c0       	rjmp	.+200    	; 0x24e4 <HStepper_DIR_MODE+0x1802>
	else if (__tmp > 65535)
    241c:	fe 01       	movw	r30, r28
    241e:	eb 57       	subi	r30, 0x7B	; 123
    2420:	ff 4f       	sbci	r31, 0xFF	; 255
    2422:	60 81       	ld	r22, Z
    2424:	71 81       	ldd	r23, Z+1	; 0x01
    2426:	82 81       	ldd	r24, Z+2	; 0x02
    2428:	93 81       	ldd	r25, Z+3	; 0x03
    242a:	20 e0       	ldi	r18, 0x00	; 0
    242c:	3f ef       	ldi	r19, 0xFF	; 255
    242e:	4f e7       	ldi	r20, 0x7F	; 127
    2430:	57 e4       	ldi	r21, 0x47	; 71
    2432:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2436:	18 16       	cp	r1, r24
    2438:	0c f0       	brlt	.+2      	; 0x243c <HStepper_DIR_MODE+0x175a>
    243a:	43 c0       	rjmp	.+134    	; 0x24c2 <HStepper_DIR_MODE+0x17e0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    243c:	fe 01       	movw	r30, r28
    243e:	e7 57       	subi	r30, 0x77	; 119
    2440:	ff 4f       	sbci	r31, 0xFF	; 255
    2442:	60 81       	ld	r22, Z
    2444:	71 81       	ldd	r23, Z+1	; 0x01
    2446:	82 81       	ldd	r24, Z+2	; 0x02
    2448:	93 81       	ldd	r25, Z+3	; 0x03
    244a:	20 e0       	ldi	r18, 0x00	; 0
    244c:	30 e0       	ldi	r19, 0x00	; 0
    244e:	40 e2       	ldi	r20, 0x20	; 32
    2450:	51 e4       	ldi	r21, 0x41	; 65
    2452:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2456:	dc 01       	movw	r26, r24
    2458:	cb 01       	movw	r24, r22
    245a:	8e 01       	movw	r16, r28
    245c:	0d 57       	subi	r16, 0x7D	; 125
    245e:	1f 4f       	sbci	r17, 0xFF	; 255
    2460:	bc 01       	movw	r22, r24
    2462:	cd 01       	movw	r24, r26
    2464:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2468:	dc 01       	movw	r26, r24
    246a:	cb 01       	movw	r24, r22
    246c:	f8 01       	movw	r30, r16
    246e:	91 83       	std	Z+1, r25	; 0x01
    2470:	80 83       	st	Z, r24
    2472:	1f c0       	rjmp	.+62     	; 0x24b2 <HStepper_DIR_MODE+0x17d0>
    2474:	fe 01       	movw	r30, r28
    2476:	ef 57       	subi	r30, 0x7F	; 127
    2478:	ff 4f       	sbci	r31, 0xFF	; 255
    247a:	88 ec       	ldi	r24, 0xC8	; 200
    247c:	90 e0       	ldi	r25, 0x00	; 0
    247e:	91 83       	std	Z+1, r25	; 0x01
    2480:	80 83       	st	Z, r24
    2482:	fe 01       	movw	r30, r28
    2484:	ef 57       	subi	r30, 0x7F	; 127
    2486:	ff 4f       	sbci	r31, 0xFF	; 255
    2488:	80 81       	ld	r24, Z
    248a:	91 81       	ldd	r25, Z+1	; 0x01
    248c:	01 97       	sbiw	r24, 0x01	; 1
    248e:	f1 f7       	brne	.-4      	; 0x248c <HStepper_DIR_MODE+0x17aa>
    2490:	fe 01       	movw	r30, r28
    2492:	ef 57       	subi	r30, 0x7F	; 127
    2494:	ff 4f       	sbci	r31, 0xFF	; 255
    2496:	91 83       	std	Z+1, r25	; 0x01
    2498:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    249a:	de 01       	movw	r26, r28
    249c:	ad 57       	subi	r26, 0x7D	; 125
    249e:	bf 4f       	sbci	r27, 0xFF	; 255
    24a0:	fe 01       	movw	r30, r28
    24a2:	ed 57       	subi	r30, 0x7D	; 125
    24a4:	ff 4f       	sbci	r31, 0xFF	; 255
    24a6:	80 81       	ld	r24, Z
    24a8:	91 81       	ldd	r25, Z+1	; 0x01
    24aa:	01 97       	sbiw	r24, 0x01	; 1
    24ac:	11 96       	adiw	r26, 0x01	; 1
    24ae:	9c 93       	st	X, r25
    24b0:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    24b2:	fe 01       	movw	r30, r28
    24b4:	ed 57       	subi	r30, 0x7D	; 125
    24b6:	ff 4f       	sbci	r31, 0xFF	; 255
    24b8:	80 81       	ld	r24, Z
    24ba:	91 81       	ldd	r25, Z+1	; 0x01
    24bc:	00 97       	sbiw	r24, 0x00	; 0
    24be:	d1 f6       	brne	.-76     	; 0x2474 <HStepper_DIR_MODE+0x1792>
    24c0:	27 c0       	rjmp	.+78     	; 0x2510 <HStepper_DIR_MODE+0x182e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    24c2:	8e 01       	movw	r16, r28
    24c4:	0d 57       	subi	r16, 0x7D	; 125
    24c6:	1f 4f       	sbci	r17, 0xFF	; 255
    24c8:	fe 01       	movw	r30, r28
    24ca:	eb 57       	subi	r30, 0x7B	; 123
    24cc:	ff 4f       	sbci	r31, 0xFF	; 255
    24ce:	60 81       	ld	r22, Z
    24d0:	71 81       	ldd	r23, Z+1	; 0x01
    24d2:	82 81       	ldd	r24, Z+2	; 0x02
    24d4:	93 81       	ldd	r25, Z+3	; 0x03
    24d6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    24da:	dc 01       	movw	r26, r24
    24dc:	cb 01       	movw	r24, r22
    24de:	f8 01       	movw	r30, r16
    24e0:	91 83       	std	Z+1, r25	; 0x01
    24e2:	80 83       	st	Z, r24
    24e4:	de 01       	movw	r26, r28
    24e6:	a1 58       	subi	r26, 0x81	; 129
    24e8:	bf 4f       	sbci	r27, 0xFF	; 255
    24ea:	fe 01       	movw	r30, r28
    24ec:	ed 57       	subi	r30, 0x7D	; 125
    24ee:	ff 4f       	sbci	r31, 0xFF	; 255
    24f0:	80 81       	ld	r24, Z
    24f2:	91 81       	ldd	r25, Z+1	; 0x01
    24f4:	8d 93       	st	X+, r24
    24f6:	9c 93       	st	X, r25
    24f8:	fe 01       	movw	r30, r28
    24fa:	e1 58       	subi	r30, 0x81	; 129
    24fc:	ff 4f       	sbci	r31, 0xFF	; 255
    24fe:	80 81       	ld	r24, Z
    2500:	91 81       	ldd	r25, Z+1	; 0x01
    2502:	01 97       	sbiw	r24, 0x01	; 1
    2504:	f1 f7       	brne	.-4      	; 0x2502 <HStepper_DIR_MODE+0x1820>
    2506:	fe 01       	movw	r30, r28
    2508:	e1 58       	subi	r30, 0x81	; 129
    250a:	ff 4f       	sbci	r31, 0xFF	; 255
    250c:	91 83       	std	Z+1, r25	; 0x01
    250e:	80 83       	st	Z, r24


			_delay_ms(Stepper_speed);
			MDIO_vSetPinValue(HW_PORT,Coil_Blue,DIO_LOW);
    2510:	83 e0       	ldi	r24, 0x03	; 3
    2512:	60 e0       	ldi	r22, 0x00	; 0
    2514:	40 e0       	ldi	r20, 0x00	; 0
    2516:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
			MDIO_vSetPinValue(HW_PORT,Coil_Pink,DIO_LOW);
    251a:	83 e0       	ldi	r24, 0x03	; 3
    251c:	61 e0       	ldi	r22, 0x01	; 1
    251e:	40 e0       	ldi	r20, 0x00	; 0
    2520:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
			MDIO_vSetPinValue(HW_PORT,Coil_Yellow,DIO_LOW);
    2524:	83 e0       	ldi	r24, 0x03	; 3
    2526:	62 e0       	ldi	r22, 0x02	; 2
    2528:	40 e0       	ldi	r20, 0x00	; 0
    252a:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
			MDIO_vSetPinValue(HW_PORT,Coil_Orange,DIO_HIGH);
    252e:	83 e0       	ldi	r24, 0x03	; 3
    2530:	63 e0       	ldi	r22, 0x03	; 3
    2532:	41 e0       	ldi	r20, 0x01	; 1
    2534:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
    2538:	fe 01       	movw	r30, r28
    253a:	e5 58       	subi	r30, 0x85	; 133
    253c:	ff 4f       	sbci	r31, 0xFF	; 255
    253e:	80 e0       	ldi	r24, 0x00	; 0
    2540:	90 e0       	ldi	r25, 0x00	; 0
    2542:	a0 ea       	ldi	r26, 0xA0	; 160
    2544:	b0 e4       	ldi	r27, 0x40	; 64
    2546:	80 83       	st	Z, r24
    2548:	91 83       	std	Z+1, r25	; 0x01
    254a:	a2 83       	std	Z+2, r26	; 0x02
    254c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    254e:	8e 01       	movw	r16, r28
    2550:	09 58       	subi	r16, 0x89	; 137
    2552:	1f 4f       	sbci	r17, 0xFF	; 255
    2554:	fe 01       	movw	r30, r28
    2556:	e5 58       	subi	r30, 0x85	; 133
    2558:	ff 4f       	sbci	r31, 0xFF	; 255
    255a:	60 81       	ld	r22, Z
    255c:	71 81       	ldd	r23, Z+1	; 0x01
    255e:	82 81       	ldd	r24, Z+2	; 0x02
    2560:	93 81       	ldd	r25, Z+3	; 0x03
    2562:	20 e0       	ldi	r18, 0x00	; 0
    2564:	30 e0       	ldi	r19, 0x00	; 0
    2566:	4a ef       	ldi	r20, 0xFA	; 250
    2568:	54 e4       	ldi	r21, 0x44	; 68
    256a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    256e:	dc 01       	movw	r26, r24
    2570:	cb 01       	movw	r24, r22
    2572:	f8 01       	movw	r30, r16
    2574:	80 83       	st	Z, r24
    2576:	91 83       	std	Z+1, r25	; 0x01
    2578:	a2 83       	std	Z+2, r26	; 0x02
    257a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    257c:	fe 01       	movw	r30, r28
    257e:	e9 58       	subi	r30, 0x89	; 137
    2580:	ff 4f       	sbci	r31, 0xFF	; 255
    2582:	60 81       	ld	r22, Z
    2584:	71 81       	ldd	r23, Z+1	; 0x01
    2586:	82 81       	ldd	r24, Z+2	; 0x02
    2588:	93 81       	ldd	r25, Z+3	; 0x03
    258a:	20 e0       	ldi	r18, 0x00	; 0
    258c:	30 e0       	ldi	r19, 0x00	; 0
    258e:	40 e8       	ldi	r20, 0x80	; 128
    2590:	5f e3       	ldi	r21, 0x3F	; 63
    2592:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2596:	88 23       	and	r24, r24
    2598:	44 f4       	brge	.+16     	; 0x25aa <HStepper_DIR_MODE+0x18c8>
		__ticks = 1;
    259a:	fe 01       	movw	r30, r28
    259c:	eb 58       	subi	r30, 0x8B	; 139
    259e:	ff 4f       	sbci	r31, 0xFF	; 255
    25a0:	81 e0       	ldi	r24, 0x01	; 1
    25a2:	90 e0       	ldi	r25, 0x00	; 0
    25a4:	91 83       	std	Z+1, r25	; 0x01
    25a6:	80 83       	st	Z, r24
    25a8:	64 c0       	rjmp	.+200    	; 0x2672 <HStepper_DIR_MODE+0x1990>
	else if (__tmp > 65535)
    25aa:	fe 01       	movw	r30, r28
    25ac:	e9 58       	subi	r30, 0x89	; 137
    25ae:	ff 4f       	sbci	r31, 0xFF	; 255
    25b0:	60 81       	ld	r22, Z
    25b2:	71 81       	ldd	r23, Z+1	; 0x01
    25b4:	82 81       	ldd	r24, Z+2	; 0x02
    25b6:	93 81       	ldd	r25, Z+3	; 0x03
    25b8:	20 e0       	ldi	r18, 0x00	; 0
    25ba:	3f ef       	ldi	r19, 0xFF	; 255
    25bc:	4f e7       	ldi	r20, 0x7F	; 127
    25be:	57 e4       	ldi	r21, 0x47	; 71
    25c0:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    25c4:	18 16       	cp	r1, r24
    25c6:	0c f0       	brlt	.+2      	; 0x25ca <HStepper_DIR_MODE+0x18e8>
    25c8:	43 c0       	rjmp	.+134    	; 0x2650 <HStepper_DIR_MODE+0x196e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    25ca:	fe 01       	movw	r30, r28
    25cc:	e5 58       	subi	r30, 0x85	; 133
    25ce:	ff 4f       	sbci	r31, 0xFF	; 255
    25d0:	60 81       	ld	r22, Z
    25d2:	71 81       	ldd	r23, Z+1	; 0x01
    25d4:	82 81       	ldd	r24, Z+2	; 0x02
    25d6:	93 81       	ldd	r25, Z+3	; 0x03
    25d8:	20 e0       	ldi	r18, 0x00	; 0
    25da:	30 e0       	ldi	r19, 0x00	; 0
    25dc:	40 e2       	ldi	r20, 0x20	; 32
    25de:	51 e4       	ldi	r21, 0x41	; 65
    25e0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    25e4:	dc 01       	movw	r26, r24
    25e6:	cb 01       	movw	r24, r22
    25e8:	8e 01       	movw	r16, r28
    25ea:	0b 58       	subi	r16, 0x8B	; 139
    25ec:	1f 4f       	sbci	r17, 0xFF	; 255
    25ee:	bc 01       	movw	r22, r24
    25f0:	cd 01       	movw	r24, r26
    25f2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    25f6:	dc 01       	movw	r26, r24
    25f8:	cb 01       	movw	r24, r22
    25fa:	f8 01       	movw	r30, r16
    25fc:	91 83       	std	Z+1, r25	; 0x01
    25fe:	80 83       	st	Z, r24
    2600:	1f c0       	rjmp	.+62     	; 0x2640 <HStepper_DIR_MODE+0x195e>
    2602:	fe 01       	movw	r30, r28
    2604:	ed 58       	subi	r30, 0x8D	; 141
    2606:	ff 4f       	sbci	r31, 0xFF	; 255
    2608:	88 ec       	ldi	r24, 0xC8	; 200
    260a:	90 e0       	ldi	r25, 0x00	; 0
    260c:	91 83       	std	Z+1, r25	; 0x01
    260e:	80 83       	st	Z, r24
    2610:	fe 01       	movw	r30, r28
    2612:	ed 58       	subi	r30, 0x8D	; 141
    2614:	ff 4f       	sbci	r31, 0xFF	; 255
    2616:	80 81       	ld	r24, Z
    2618:	91 81       	ldd	r25, Z+1	; 0x01
    261a:	01 97       	sbiw	r24, 0x01	; 1
    261c:	f1 f7       	brne	.-4      	; 0x261a <HStepper_DIR_MODE+0x1938>
    261e:	fe 01       	movw	r30, r28
    2620:	ed 58       	subi	r30, 0x8D	; 141
    2622:	ff 4f       	sbci	r31, 0xFF	; 255
    2624:	91 83       	std	Z+1, r25	; 0x01
    2626:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2628:	de 01       	movw	r26, r28
    262a:	ab 58       	subi	r26, 0x8B	; 139
    262c:	bf 4f       	sbci	r27, 0xFF	; 255
    262e:	fe 01       	movw	r30, r28
    2630:	eb 58       	subi	r30, 0x8B	; 139
    2632:	ff 4f       	sbci	r31, 0xFF	; 255
    2634:	80 81       	ld	r24, Z
    2636:	91 81       	ldd	r25, Z+1	; 0x01
    2638:	01 97       	sbiw	r24, 0x01	; 1
    263a:	11 96       	adiw	r26, 0x01	; 1
    263c:	9c 93       	st	X, r25
    263e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2640:	fe 01       	movw	r30, r28
    2642:	eb 58       	subi	r30, 0x8B	; 139
    2644:	ff 4f       	sbci	r31, 0xFF	; 255
    2646:	80 81       	ld	r24, Z
    2648:	91 81       	ldd	r25, Z+1	; 0x01
    264a:	00 97       	sbiw	r24, 0x00	; 0
    264c:	d1 f6       	brne	.-76     	; 0x2602 <HStepper_DIR_MODE+0x1920>
    264e:	2f c5       	rjmp	.+2654   	; 0x30ae <HStepper_DIR_MODE+0x23cc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2650:	8e 01       	movw	r16, r28
    2652:	0b 58       	subi	r16, 0x8B	; 139
    2654:	1f 4f       	sbci	r17, 0xFF	; 255
    2656:	fe 01       	movw	r30, r28
    2658:	e9 58       	subi	r30, 0x89	; 137
    265a:	ff 4f       	sbci	r31, 0xFF	; 255
    265c:	60 81       	ld	r22, Z
    265e:	71 81       	ldd	r23, Z+1	; 0x01
    2660:	82 81       	ldd	r24, Z+2	; 0x02
    2662:	93 81       	ldd	r25, Z+3	; 0x03
    2664:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2668:	dc 01       	movw	r26, r24
    266a:	cb 01       	movw	r24, r22
    266c:	f8 01       	movw	r30, r16
    266e:	91 83       	std	Z+1, r25	; 0x01
    2670:	80 83       	st	Z, r24
    2672:	de 01       	movw	r26, r28
    2674:	af 58       	subi	r26, 0x8F	; 143
    2676:	bf 4f       	sbci	r27, 0xFF	; 255
    2678:	fe 01       	movw	r30, r28
    267a:	eb 58       	subi	r30, 0x8B	; 139
    267c:	ff 4f       	sbci	r31, 0xFF	; 255
    267e:	80 81       	ld	r24, Z
    2680:	91 81       	ldd	r25, Z+1	; 0x01
    2682:	11 96       	adiw	r26, 0x01	; 1
    2684:	9c 93       	st	X, r25
    2686:	8e 93       	st	-X, r24
    2688:	fe 01       	movw	r30, r28
    268a:	ef 58       	subi	r30, 0x8F	; 143
    268c:	ff 4f       	sbci	r31, 0xFF	; 255
    268e:	80 81       	ld	r24, Z
    2690:	91 81       	ldd	r25, Z+1	; 0x01
    2692:	01 97       	sbiw	r24, 0x01	; 1
    2694:	f1 f7       	brne	.-4      	; 0x2692 <HStepper_DIR_MODE+0x19b0>
    2696:	fe 01       	movw	r30, r28
    2698:	ef 58       	subi	r30, 0x8F	; 143
    269a:	ff 4f       	sbci	r31, 0xFF	; 255
    269c:	91 83       	std	Z+1, r25	; 0x01
    269e:	80 83       	st	Z, r24
    26a0:	06 c5       	rjmp	.+2572   	; 0x30ae <HStepper_DIR_MODE+0x23cc>
			_delay_ms(Stepper_speed);
			break;


		case Anti_ClockWise:
			MDIO_vSetPinValue(HW_PORT,Coil_Blue,DIO_HIGH);
    26a2:	83 e0       	ldi	r24, 0x03	; 3
    26a4:	60 e0       	ldi	r22, 0x00	; 0
    26a6:	41 e0       	ldi	r20, 0x01	; 1
    26a8:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
			MDIO_vSetPinValue(HW_PORT,Coil_Pink,DIO_LOW);
    26ac:	83 e0       	ldi	r24, 0x03	; 3
    26ae:	61 e0       	ldi	r22, 0x01	; 1
    26b0:	40 e0       	ldi	r20, 0x00	; 0
    26b2:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
			MDIO_vSetPinValue(HW_PORT,Coil_Yellow,DIO_LOW);
    26b6:	83 e0       	ldi	r24, 0x03	; 3
    26b8:	62 e0       	ldi	r22, 0x02	; 2
    26ba:	40 e0       	ldi	r20, 0x00	; 0
    26bc:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
			MDIO_vSetPinValue(HW_PORT,Coil_Orange,DIO_HIGH);
    26c0:	83 e0       	ldi	r24, 0x03	; 3
    26c2:	63 e0       	ldi	r22, 0x03	; 3
    26c4:	41 e0       	ldi	r20, 0x01	; 1
    26c6:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
    26ca:	fe 01       	movw	r30, r28
    26cc:	e3 59       	subi	r30, 0x93	; 147
    26ce:	ff 4f       	sbci	r31, 0xFF	; 255
    26d0:	80 e0       	ldi	r24, 0x00	; 0
    26d2:	90 e0       	ldi	r25, 0x00	; 0
    26d4:	a0 ea       	ldi	r26, 0xA0	; 160
    26d6:	b0 e4       	ldi	r27, 0x40	; 64
    26d8:	80 83       	st	Z, r24
    26da:	91 83       	std	Z+1, r25	; 0x01
    26dc:	a2 83       	std	Z+2, r26	; 0x02
    26de:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    26e0:	8e 01       	movw	r16, r28
    26e2:	07 59       	subi	r16, 0x97	; 151
    26e4:	1f 4f       	sbci	r17, 0xFF	; 255
    26e6:	fe 01       	movw	r30, r28
    26e8:	e3 59       	subi	r30, 0x93	; 147
    26ea:	ff 4f       	sbci	r31, 0xFF	; 255
    26ec:	60 81       	ld	r22, Z
    26ee:	71 81       	ldd	r23, Z+1	; 0x01
    26f0:	82 81       	ldd	r24, Z+2	; 0x02
    26f2:	93 81       	ldd	r25, Z+3	; 0x03
    26f4:	20 e0       	ldi	r18, 0x00	; 0
    26f6:	30 e0       	ldi	r19, 0x00	; 0
    26f8:	4a ef       	ldi	r20, 0xFA	; 250
    26fa:	54 e4       	ldi	r21, 0x44	; 68
    26fc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2700:	dc 01       	movw	r26, r24
    2702:	cb 01       	movw	r24, r22
    2704:	f8 01       	movw	r30, r16
    2706:	80 83       	st	Z, r24
    2708:	91 83       	std	Z+1, r25	; 0x01
    270a:	a2 83       	std	Z+2, r26	; 0x02
    270c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    270e:	fe 01       	movw	r30, r28
    2710:	e7 59       	subi	r30, 0x97	; 151
    2712:	ff 4f       	sbci	r31, 0xFF	; 255
    2714:	60 81       	ld	r22, Z
    2716:	71 81       	ldd	r23, Z+1	; 0x01
    2718:	82 81       	ldd	r24, Z+2	; 0x02
    271a:	93 81       	ldd	r25, Z+3	; 0x03
    271c:	20 e0       	ldi	r18, 0x00	; 0
    271e:	30 e0       	ldi	r19, 0x00	; 0
    2720:	40 e8       	ldi	r20, 0x80	; 128
    2722:	5f e3       	ldi	r21, 0x3F	; 63
    2724:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2728:	88 23       	and	r24, r24
    272a:	44 f4       	brge	.+16     	; 0x273c <HStepper_DIR_MODE+0x1a5a>
		__ticks = 1;
    272c:	fe 01       	movw	r30, r28
    272e:	e9 59       	subi	r30, 0x99	; 153
    2730:	ff 4f       	sbci	r31, 0xFF	; 255
    2732:	81 e0       	ldi	r24, 0x01	; 1
    2734:	90 e0       	ldi	r25, 0x00	; 0
    2736:	91 83       	std	Z+1, r25	; 0x01
    2738:	80 83       	st	Z, r24
    273a:	64 c0       	rjmp	.+200    	; 0x2804 <HStepper_DIR_MODE+0x1b22>
	else if (__tmp > 65535)
    273c:	fe 01       	movw	r30, r28
    273e:	e7 59       	subi	r30, 0x97	; 151
    2740:	ff 4f       	sbci	r31, 0xFF	; 255
    2742:	60 81       	ld	r22, Z
    2744:	71 81       	ldd	r23, Z+1	; 0x01
    2746:	82 81       	ldd	r24, Z+2	; 0x02
    2748:	93 81       	ldd	r25, Z+3	; 0x03
    274a:	20 e0       	ldi	r18, 0x00	; 0
    274c:	3f ef       	ldi	r19, 0xFF	; 255
    274e:	4f e7       	ldi	r20, 0x7F	; 127
    2750:	57 e4       	ldi	r21, 0x47	; 71
    2752:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2756:	18 16       	cp	r1, r24
    2758:	0c f0       	brlt	.+2      	; 0x275c <HStepper_DIR_MODE+0x1a7a>
    275a:	43 c0       	rjmp	.+134    	; 0x27e2 <HStepper_DIR_MODE+0x1b00>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    275c:	fe 01       	movw	r30, r28
    275e:	e3 59       	subi	r30, 0x93	; 147
    2760:	ff 4f       	sbci	r31, 0xFF	; 255
    2762:	60 81       	ld	r22, Z
    2764:	71 81       	ldd	r23, Z+1	; 0x01
    2766:	82 81       	ldd	r24, Z+2	; 0x02
    2768:	93 81       	ldd	r25, Z+3	; 0x03
    276a:	20 e0       	ldi	r18, 0x00	; 0
    276c:	30 e0       	ldi	r19, 0x00	; 0
    276e:	40 e2       	ldi	r20, 0x20	; 32
    2770:	51 e4       	ldi	r21, 0x41	; 65
    2772:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2776:	dc 01       	movw	r26, r24
    2778:	cb 01       	movw	r24, r22
    277a:	8e 01       	movw	r16, r28
    277c:	09 59       	subi	r16, 0x99	; 153
    277e:	1f 4f       	sbci	r17, 0xFF	; 255
    2780:	bc 01       	movw	r22, r24
    2782:	cd 01       	movw	r24, r26
    2784:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2788:	dc 01       	movw	r26, r24
    278a:	cb 01       	movw	r24, r22
    278c:	f8 01       	movw	r30, r16
    278e:	91 83       	std	Z+1, r25	; 0x01
    2790:	80 83       	st	Z, r24
    2792:	1f c0       	rjmp	.+62     	; 0x27d2 <HStepper_DIR_MODE+0x1af0>
    2794:	fe 01       	movw	r30, r28
    2796:	eb 59       	subi	r30, 0x9B	; 155
    2798:	ff 4f       	sbci	r31, 0xFF	; 255
    279a:	88 ec       	ldi	r24, 0xC8	; 200
    279c:	90 e0       	ldi	r25, 0x00	; 0
    279e:	91 83       	std	Z+1, r25	; 0x01
    27a0:	80 83       	st	Z, r24
    27a2:	fe 01       	movw	r30, r28
    27a4:	eb 59       	subi	r30, 0x9B	; 155
    27a6:	ff 4f       	sbci	r31, 0xFF	; 255
    27a8:	80 81       	ld	r24, Z
    27aa:	91 81       	ldd	r25, Z+1	; 0x01
    27ac:	01 97       	sbiw	r24, 0x01	; 1
    27ae:	f1 f7       	brne	.-4      	; 0x27ac <HStepper_DIR_MODE+0x1aca>
    27b0:	fe 01       	movw	r30, r28
    27b2:	eb 59       	subi	r30, 0x9B	; 155
    27b4:	ff 4f       	sbci	r31, 0xFF	; 255
    27b6:	91 83       	std	Z+1, r25	; 0x01
    27b8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    27ba:	de 01       	movw	r26, r28
    27bc:	a9 59       	subi	r26, 0x99	; 153
    27be:	bf 4f       	sbci	r27, 0xFF	; 255
    27c0:	fe 01       	movw	r30, r28
    27c2:	e9 59       	subi	r30, 0x99	; 153
    27c4:	ff 4f       	sbci	r31, 0xFF	; 255
    27c6:	80 81       	ld	r24, Z
    27c8:	91 81       	ldd	r25, Z+1	; 0x01
    27ca:	01 97       	sbiw	r24, 0x01	; 1
    27cc:	11 96       	adiw	r26, 0x01	; 1
    27ce:	9c 93       	st	X, r25
    27d0:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    27d2:	fe 01       	movw	r30, r28
    27d4:	e9 59       	subi	r30, 0x99	; 153
    27d6:	ff 4f       	sbci	r31, 0xFF	; 255
    27d8:	80 81       	ld	r24, Z
    27da:	91 81       	ldd	r25, Z+1	; 0x01
    27dc:	00 97       	sbiw	r24, 0x00	; 0
    27de:	d1 f6       	brne	.-76     	; 0x2794 <HStepper_DIR_MODE+0x1ab2>
    27e0:	27 c0       	rjmp	.+78     	; 0x2830 <HStepper_DIR_MODE+0x1b4e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    27e2:	8e 01       	movw	r16, r28
    27e4:	09 59       	subi	r16, 0x99	; 153
    27e6:	1f 4f       	sbci	r17, 0xFF	; 255
    27e8:	fe 01       	movw	r30, r28
    27ea:	e7 59       	subi	r30, 0x97	; 151
    27ec:	ff 4f       	sbci	r31, 0xFF	; 255
    27ee:	60 81       	ld	r22, Z
    27f0:	71 81       	ldd	r23, Z+1	; 0x01
    27f2:	82 81       	ldd	r24, Z+2	; 0x02
    27f4:	93 81       	ldd	r25, Z+3	; 0x03
    27f6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    27fa:	dc 01       	movw	r26, r24
    27fc:	cb 01       	movw	r24, r22
    27fe:	f8 01       	movw	r30, r16
    2800:	91 83       	std	Z+1, r25	; 0x01
    2802:	80 83       	st	Z, r24
    2804:	de 01       	movw	r26, r28
    2806:	ad 59       	subi	r26, 0x9D	; 157
    2808:	bf 4f       	sbci	r27, 0xFF	; 255
    280a:	fe 01       	movw	r30, r28
    280c:	e9 59       	subi	r30, 0x99	; 153
    280e:	ff 4f       	sbci	r31, 0xFF	; 255
    2810:	80 81       	ld	r24, Z
    2812:	91 81       	ldd	r25, Z+1	; 0x01
    2814:	8d 93       	st	X+, r24
    2816:	9c 93       	st	X, r25
    2818:	fe 01       	movw	r30, r28
    281a:	ed 59       	subi	r30, 0x9D	; 157
    281c:	ff 4f       	sbci	r31, 0xFF	; 255
    281e:	80 81       	ld	r24, Z
    2820:	91 81       	ldd	r25, Z+1	; 0x01
    2822:	01 97       	sbiw	r24, 0x01	; 1
    2824:	f1 f7       	brne	.-4      	; 0x2822 <HStepper_DIR_MODE+0x1b40>
    2826:	fe 01       	movw	r30, r28
    2828:	ed 59       	subi	r30, 0x9D	; 157
    282a:	ff 4f       	sbci	r31, 0xFF	; 255
    282c:	91 83       	std	Z+1, r25	; 0x01
    282e:	80 83       	st	Z, r24


			_delay_ms(Stepper_speed);
			MDIO_vSetPinValue(HW_PORT,Coil_Blue,DIO_LOW);
    2830:	83 e0       	ldi	r24, 0x03	; 3
    2832:	60 e0       	ldi	r22, 0x00	; 0
    2834:	40 e0       	ldi	r20, 0x00	; 0
    2836:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
			MDIO_vSetPinValue(HW_PORT,Coil_Pink,DIO_LOW);
    283a:	83 e0       	ldi	r24, 0x03	; 3
    283c:	61 e0       	ldi	r22, 0x01	; 1
    283e:	40 e0       	ldi	r20, 0x00	; 0
    2840:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
			MDIO_vSetPinValue(HW_PORT,Coil_Yellow,DIO_LOW);
    2844:	83 e0       	ldi	r24, 0x03	; 3
    2846:	62 e0       	ldi	r22, 0x02	; 2
    2848:	40 e0       	ldi	r20, 0x00	; 0
    284a:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
			MDIO_vSetPinValue(HW_PORT,Coil_Orange,DIO_HIGH);
    284e:	83 e0       	ldi	r24, 0x03	; 3
    2850:	63 e0       	ldi	r22, 0x03	; 3
    2852:	41 e0       	ldi	r20, 0x01	; 1
    2854:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
    2858:	fe 01       	movw	r30, r28
    285a:	e1 5a       	subi	r30, 0xA1	; 161
    285c:	ff 4f       	sbci	r31, 0xFF	; 255
    285e:	80 e0       	ldi	r24, 0x00	; 0
    2860:	90 e0       	ldi	r25, 0x00	; 0
    2862:	a0 ea       	ldi	r26, 0xA0	; 160
    2864:	b0 e4       	ldi	r27, 0x40	; 64
    2866:	80 83       	st	Z, r24
    2868:	91 83       	std	Z+1, r25	; 0x01
    286a:	a2 83       	std	Z+2, r26	; 0x02
    286c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    286e:	8e 01       	movw	r16, r28
    2870:	05 5a       	subi	r16, 0xA5	; 165
    2872:	1f 4f       	sbci	r17, 0xFF	; 255
    2874:	fe 01       	movw	r30, r28
    2876:	e1 5a       	subi	r30, 0xA1	; 161
    2878:	ff 4f       	sbci	r31, 0xFF	; 255
    287a:	60 81       	ld	r22, Z
    287c:	71 81       	ldd	r23, Z+1	; 0x01
    287e:	82 81       	ldd	r24, Z+2	; 0x02
    2880:	93 81       	ldd	r25, Z+3	; 0x03
    2882:	20 e0       	ldi	r18, 0x00	; 0
    2884:	30 e0       	ldi	r19, 0x00	; 0
    2886:	4a ef       	ldi	r20, 0xFA	; 250
    2888:	54 e4       	ldi	r21, 0x44	; 68
    288a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    288e:	dc 01       	movw	r26, r24
    2890:	cb 01       	movw	r24, r22
    2892:	f8 01       	movw	r30, r16
    2894:	80 83       	st	Z, r24
    2896:	91 83       	std	Z+1, r25	; 0x01
    2898:	a2 83       	std	Z+2, r26	; 0x02
    289a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    289c:	fe 01       	movw	r30, r28
    289e:	e5 5a       	subi	r30, 0xA5	; 165
    28a0:	ff 4f       	sbci	r31, 0xFF	; 255
    28a2:	60 81       	ld	r22, Z
    28a4:	71 81       	ldd	r23, Z+1	; 0x01
    28a6:	82 81       	ldd	r24, Z+2	; 0x02
    28a8:	93 81       	ldd	r25, Z+3	; 0x03
    28aa:	20 e0       	ldi	r18, 0x00	; 0
    28ac:	30 e0       	ldi	r19, 0x00	; 0
    28ae:	40 e8       	ldi	r20, 0x80	; 128
    28b0:	5f e3       	ldi	r21, 0x3F	; 63
    28b2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    28b6:	88 23       	and	r24, r24
    28b8:	44 f4       	brge	.+16     	; 0x28ca <HStepper_DIR_MODE+0x1be8>
		__ticks = 1;
    28ba:	fe 01       	movw	r30, r28
    28bc:	e7 5a       	subi	r30, 0xA7	; 167
    28be:	ff 4f       	sbci	r31, 0xFF	; 255
    28c0:	81 e0       	ldi	r24, 0x01	; 1
    28c2:	90 e0       	ldi	r25, 0x00	; 0
    28c4:	91 83       	std	Z+1, r25	; 0x01
    28c6:	80 83       	st	Z, r24
    28c8:	64 c0       	rjmp	.+200    	; 0x2992 <HStepper_DIR_MODE+0x1cb0>
	else if (__tmp > 65535)
    28ca:	fe 01       	movw	r30, r28
    28cc:	e5 5a       	subi	r30, 0xA5	; 165
    28ce:	ff 4f       	sbci	r31, 0xFF	; 255
    28d0:	60 81       	ld	r22, Z
    28d2:	71 81       	ldd	r23, Z+1	; 0x01
    28d4:	82 81       	ldd	r24, Z+2	; 0x02
    28d6:	93 81       	ldd	r25, Z+3	; 0x03
    28d8:	20 e0       	ldi	r18, 0x00	; 0
    28da:	3f ef       	ldi	r19, 0xFF	; 255
    28dc:	4f e7       	ldi	r20, 0x7F	; 127
    28de:	57 e4       	ldi	r21, 0x47	; 71
    28e0:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    28e4:	18 16       	cp	r1, r24
    28e6:	0c f0       	brlt	.+2      	; 0x28ea <HStepper_DIR_MODE+0x1c08>
    28e8:	43 c0       	rjmp	.+134    	; 0x2970 <HStepper_DIR_MODE+0x1c8e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    28ea:	fe 01       	movw	r30, r28
    28ec:	e1 5a       	subi	r30, 0xA1	; 161
    28ee:	ff 4f       	sbci	r31, 0xFF	; 255
    28f0:	60 81       	ld	r22, Z
    28f2:	71 81       	ldd	r23, Z+1	; 0x01
    28f4:	82 81       	ldd	r24, Z+2	; 0x02
    28f6:	93 81       	ldd	r25, Z+3	; 0x03
    28f8:	20 e0       	ldi	r18, 0x00	; 0
    28fa:	30 e0       	ldi	r19, 0x00	; 0
    28fc:	40 e2       	ldi	r20, 0x20	; 32
    28fe:	51 e4       	ldi	r21, 0x41	; 65
    2900:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2904:	dc 01       	movw	r26, r24
    2906:	cb 01       	movw	r24, r22
    2908:	8e 01       	movw	r16, r28
    290a:	07 5a       	subi	r16, 0xA7	; 167
    290c:	1f 4f       	sbci	r17, 0xFF	; 255
    290e:	bc 01       	movw	r22, r24
    2910:	cd 01       	movw	r24, r26
    2912:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2916:	dc 01       	movw	r26, r24
    2918:	cb 01       	movw	r24, r22
    291a:	f8 01       	movw	r30, r16
    291c:	91 83       	std	Z+1, r25	; 0x01
    291e:	80 83       	st	Z, r24
    2920:	1f c0       	rjmp	.+62     	; 0x2960 <HStepper_DIR_MODE+0x1c7e>
    2922:	fe 01       	movw	r30, r28
    2924:	e9 5a       	subi	r30, 0xA9	; 169
    2926:	ff 4f       	sbci	r31, 0xFF	; 255
    2928:	88 ec       	ldi	r24, 0xC8	; 200
    292a:	90 e0       	ldi	r25, 0x00	; 0
    292c:	91 83       	std	Z+1, r25	; 0x01
    292e:	80 83       	st	Z, r24
    2930:	fe 01       	movw	r30, r28
    2932:	e9 5a       	subi	r30, 0xA9	; 169
    2934:	ff 4f       	sbci	r31, 0xFF	; 255
    2936:	80 81       	ld	r24, Z
    2938:	91 81       	ldd	r25, Z+1	; 0x01
    293a:	01 97       	sbiw	r24, 0x01	; 1
    293c:	f1 f7       	brne	.-4      	; 0x293a <HStepper_DIR_MODE+0x1c58>
    293e:	fe 01       	movw	r30, r28
    2940:	e9 5a       	subi	r30, 0xA9	; 169
    2942:	ff 4f       	sbci	r31, 0xFF	; 255
    2944:	91 83       	std	Z+1, r25	; 0x01
    2946:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2948:	de 01       	movw	r26, r28
    294a:	a7 5a       	subi	r26, 0xA7	; 167
    294c:	bf 4f       	sbci	r27, 0xFF	; 255
    294e:	fe 01       	movw	r30, r28
    2950:	e7 5a       	subi	r30, 0xA7	; 167
    2952:	ff 4f       	sbci	r31, 0xFF	; 255
    2954:	80 81       	ld	r24, Z
    2956:	91 81       	ldd	r25, Z+1	; 0x01
    2958:	01 97       	sbiw	r24, 0x01	; 1
    295a:	11 96       	adiw	r26, 0x01	; 1
    295c:	9c 93       	st	X, r25
    295e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2960:	fe 01       	movw	r30, r28
    2962:	e7 5a       	subi	r30, 0xA7	; 167
    2964:	ff 4f       	sbci	r31, 0xFF	; 255
    2966:	80 81       	ld	r24, Z
    2968:	91 81       	ldd	r25, Z+1	; 0x01
    296a:	00 97       	sbiw	r24, 0x00	; 0
    296c:	d1 f6       	brne	.-76     	; 0x2922 <HStepper_DIR_MODE+0x1c40>
    296e:	27 c0       	rjmp	.+78     	; 0x29be <HStepper_DIR_MODE+0x1cdc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2970:	8e 01       	movw	r16, r28
    2972:	07 5a       	subi	r16, 0xA7	; 167
    2974:	1f 4f       	sbci	r17, 0xFF	; 255
    2976:	fe 01       	movw	r30, r28
    2978:	e5 5a       	subi	r30, 0xA5	; 165
    297a:	ff 4f       	sbci	r31, 0xFF	; 255
    297c:	60 81       	ld	r22, Z
    297e:	71 81       	ldd	r23, Z+1	; 0x01
    2980:	82 81       	ldd	r24, Z+2	; 0x02
    2982:	93 81       	ldd	r25, Z+3	; 0x03
    2984:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2988:	dc 01       	movw	r26, r24
    298a:	cb 01       	movw	r24, r22
    298c:	f8 01       	movw	r30, r16
    298e:	91 83       	std	Z+1, r25	; 0x01
    2990:	80 83       	st	Z, r24
    2992:	de 01       	movw	r26, r28
    2994:	ab 5a       	subi	r26, 0xAB	; 171
    2996:	bf 4f       	sbci	r27, 0xFF	; 255
    2998:	fe 01       	movw	r30, r28
    299a:	e7 5a       	subi	r30, 0xA7	; 167
    299c:	ff 4f       	sbci	r31, 0xFF	; 255
    299e:	80 81       	ld	r24, Z
    29a0:	91 81       	ldd	r25, Z+1	; 0x01
    29a2:	8d 93       	st	X+, r24
    29a4:	9c 93       	st	X, r25
    29a6:	fe 01       	movw	r30, r28
    29a8:	eb 5a       	subi	r30, 0xAB	; 171
    29aa:	ff 4f       	sbci	r31, 0xFF	; 255
    29ac:	80 81       	ld	r24, Z
    29ae:	91 81       	ldd	r25, Z+1	; 0x01
    29b0:	01 97       	sbiw	r24, 0x01	; 1
    29b2:	f1 f7       	brne	.-4      	; 0x29b0 <HStepper_DIR_MODE+0x1cce>
    29b4:	fe 01       	movw	r30, r28
    29b6:	eb 5a       	subi	r30, 0xAB	; 171
    29b8:	ff 4f       	sbci	r31, 0xFF	; 255
    29ba:	91 83       	std	Z+1, r25	; 0x01
    29bc:	80 83       	st	Z, r24


			_delay_ms(Stepper_speed);
			MDIO_vSetPinValue(HW_PORT,Coil_Blue,DIO_LOW);
    29be:	83 e0       	ldi	r24, 0x03	; 3
    29c0:	60 e0       	ldi	r22, 0x00	; 0
    29c2:	40 e0       	ldi	r20, 0x00	; 0
    29c4:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
			MDIO_vSetPinValue(HW_PORT,Coil_Pink,DIO_LOW);
    29c8:	83 e0       	ldi	r24, 0x03	; 3
    29ca:	61 e0       	ldi	r22, 0x01	; 1
    29cc:	40 e0       	ldi	r20, 0x00	; 0
    29ce:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
			MDIO_vSetPinValue(HW_PORT,Coil_Yellow,DIO_HIGH);
    29d2:	83 e0       	ldi	r24, 0x03	; 3
    29d4:	62 e0       	ldi	r22, 0x02	; 2
    29d6:	41 e0       	ldi	r20, 0x01	; 1
    29d8:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
			MDIO_vSetPinValue(HW_PORT,Coil_Orange,DIO_HIGH);
    29dc:	83 e0       	ldi	r24, 0x03	; 3
    29de:	63 e0       	ldi	r22, 0x03	; 3
    29e0:	41 e0       	ldi	r20, 0x01	; 1
    29e2:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
    29e6:	fe 01       	movw	r30, r28
    29e8:	ef 5a       	subi	r30, 0xAF	; 175
    29ea:	ff 4f       	sbci	r31, 0xFF	; 255
    29ec:	80 e0       	ldi	r24, 0x00	; 0
    29ee:	90 e0       	ldi	r25, 0x00	; 0
    29f0:	a0 ea       	ldi	r26, 0xA0	; 160
    29f2:	b0 e4       	ldi	r27, 0x40	; 64
    29f4:	80 83       	st	Z, r24
    29f6:	91 83       	std	Z+1, r25	; 0x01
    29f8:	a2 83       	std	Z+2, r26	; 0x02
    29fa:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    29fc:	8e 01       	movw	r16, r28
    29fe:	03 5b       	subi	r16, 0xB3	; 179
    2a00:	1f 4f       	sbci	r17, 0xFF	; 255
    2a02:	fe 01       	movw	r30, r28
    2a04:	ef 5a       	subi	r30, 0xAF	; 175
    2a06:	ff 4f       	sbci	r31, 0xFF	; 255
    2a08:	60 81       	ld	r22, Z
    2a0a:	71 81       	ldd	r23, Z+1	; 0x01
    2a0c:	82 81       	ldd	r24, Z+2	; 0x02
    2a0e:	93 81       	ldd	r25, Z+3	; 0x03
    2a10:	20 e0       	ldi	r18, 0x00	; 0
    2a12:	30 e0       	ldi	r19, 0x00	; 0
    2a14:	4a ef       	ldi	r20, 0xFA	; 250
    2a16:	54 e4       	ldi	r21, 0x44	; 68
    2a18:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2a1c:	dc 01       	movw	r26, r24
    2a1e:	cb 01       	movw	r24, r22
    2a20:	f8 01       	movw	r30, r16
    2a22:	80 83       	st	Z, r24
    2a24:	91 83       	std	Z+1, r25	; 0x01
    2a26:	a2 83       	std	Z+2, r26	; 0x02
    2a28:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2a2a:	fe 01       	movw	r30, r28
    2a2c:	e3 5b       	subi	r30, 0xB3	; 179
    2a2e:	ff 4f       	sbci	r31, 0xFF	; 255
    2a30:	60 81       	ld	r22, Z
    2a32:	71 81       	ldd	r23, Z+1	; 0x01
    2a34:	82 81       	ldd	r24, Z+2	; 0x02
    2a36:	93 81       	ldd	r25, Z+3	; 0x03
    2a38:	20 e0       	ldi	r18, 0x00	; 0
    2a3a:	30 e0       	ldi	r19, 0x00	; 0
    2a3c:	40 e8       	ldi	r20, 0x80	; 128
    2a3e:	5f e3       	ldi	r21, 0x3F	; 63
    2a40:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2a44:	88 23       	and	r24, r24
    2a46:	44 f4       	brge	.+16     	; 0x2a58 <HStepper_DIR_MODE+0x1d76>
		__ticks = 1;
    2a48:	fe 01       	movw	r30, r28
    2a4a:	e5 5b       	subi	r30, 0xB5	; 181
    2a4c:	ff 4f       	sbci	r31, 0xFF	; 255
    2a4e:	81 e0       	ldi	r24, 0x01	; 1
    2a50:	90 e0       	ldi	r25, 0x00	; 0
    2a52:	91 83       	std	Z+1, r25	; 0x01
    2a54:	80 83       	st	Z, r24
    2a56:	64 c0       	rjmp	.+200    	; 0x2b20 <HStepper_DIR_MODE+0x1e3e>
	else if (__tmp > 65535)
    2a58:	fe 01       	movw	r30, r28
    2a5a:	e3 5b       	subi	r30, 0xB3	; 179
    2a5c:	ff 4f       	sbci	r31, 0xFF	; 255
    2a5e:	60 81       	ld	r22, Z
    2a60:	71 81       	ldd	r23, Z+1	; 0x01
    2a62:	82 81       	ldd	r24, Z+2	; 0x02
    2a64:	93 81       	ldd	r25, Z+3	; 0x03
    2a66:	20 e0       	ldi	r18, 0x00	; 0
    2a68:	3f ef       	ldi	r19, 0xFF	; 255
    2a6a:	4f e7       	ldi	r20, 0x7F	; 127
    2a6c:	57 e4       	ldi	r21, 0x47	; 71
    2a6e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2a72:	18 16       	cp	r1, r24
    2a74:	0c f0       	brlt	.+2      	; 0x2a78 <HStepper_DIR_MODE+0x1d96>
    2a76:	43 c0       	rjmp	.+134    	; 0x2afe <HStepper_DIR_MODE+0x1e1c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2a78:	fe 01       	movw	r30, r28
    2a7a:	ef 5a       	subi	r30, 0xAF	; 175
    2a7c:	ff 4f       	sbci	r31, 0xFF	; 255
    2a7e:	60 81       	ld	r22, Z
    2a80:	71 81       	ldd	r23, Z+1	; 0x01
    2a82:	82 81       	ldd	r24, Z+2	; 0x02
    2a84:	93 81       	ldd	r25, Z+3	; 0x03
    2a86:	20 e0       	ldi	r18, 0x00	; 0
    2a88:	30 e0       	ldi	r19, 0x00	; 0
    2a8a:	40 e2       	ldi	r20, 0x20	; 32
    2a8c:	51 e4       	ldi	r21, 0x41	; 65
    2a8e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2a92:	dc 01       	movw	r26, r24
    2a94:	cb 01       	movw	r24, r22
    2a96:	8e 01       	movw	r16, r28
    2a98:	05 5b       	subi	r16, 0xB5	; 181
    2a9a:	1f 4f       	sbci	r17, 0xFF	; 255
    2a9c:	bc 01       	movw	r22, r24
    2a9e:	cd 01       	movw	r24, r26
    2aa0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2aa4:	dc 01       	movw	r26, r24
    2aa6:	cb 01       	movw	r24, r22
    2aa8:	f8 01       	movw	r30, r16
    2aaa:	91 83       	std	Z+1, r25	; 0x01
    2aac:	80 83       	st	Z, r24
    2aae:	1f c0       	rjmp	.+62     	; 0x2aee <HStepper_DIR_MODE+0x1e0c>
    2ab0:	fe 01       	movw	r30, r28
    2ab2:	e7 5b       	subi	r30, 0xB7	; 183
    2ab4:	ff 4f       	sbci	r31, 0xFF	; 255
    2ab6:	88 ec       	ldi	r24, 0xC8	; 200
    2ab8:	90 e0       	ldi	r25, 0x00	; 0
    2aba:	91 83       	std	Z+1, r25	; 0x01
    2abc:	80 83       	st	Z, r24
    2abe:	fe 01       	movw	r30, r28
    2ac0:	e7 5b       	subi	r30, 0xB7	; 183
    2ac2:	ff 4f       	sbci	r31, 0xFF	; 255
    2ac4:	80 81       	ld	r24, Z
    2ac6:	91 81       	ldd	r25, Z+1	; 0x01
    2ac8:	01 97       	sbiw	r24, 0x01	; 1
    2aca:	f1 f7       	brne	.-4      	; 0x2ac8 <HStepper_DIR_MODE+0x1de6>
    2acc:	fe 01       	movw	r30, r28
    2ace:	e7 5b       	subi	r30, 0xB7	; 183
    2ad0:	ff 4f       	sbci	r31, 0xFF	; 255
    2ad2:	91 83       	std	Z+1, r25	; 0x01
    2ad4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2ad6:	de 01       	movw	r26, r28
    2ad8:	a5 5b       	subi	r26, 0xB5	; 181
    2ada:	bf 4f       	sbci	r27, 0xFF	; 255
    2adc:	fe 01       	movw	r30, r28
    2ade:	e5 5b       	subi	r30, 0xB5	; 181
    2ae0:	ff 4f       	sbci	r31, 0xFF	; 255
    2ae2:	80 81       	ld	r24, Z
    2ae4:	91 81       	ldd	r25, Z+1	; 0x01
    2ae6:	01 97       	sbiw	r24, 0x01	; 1
    2ae8:	11 96       	adiw	r26, 0x01	; 1
    2aea:	9c 93       	st	X, r25
    2aec:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2aee:	fe 01       	movw	r30, r28
    2af0:	e5 5b       	subi	r30, 0xB5	; 181
    2af2:	ff 4f       	sbci	r31, 0xFF	; 255
    2af4:	80 81       	ld	r24, Z
    2af6:	91 81       	ldd	r25, Z+1	; 0x01
    2af8:	00 97       	sbiw	r24, 0x00	; 0
    2afa:	d1 f6       	brne	.-76     	; 0x2ab0 <HStepper_DIR_MODE+0x1dce>
    2afc:	27 c0       	rjmp	.+78     	; 0x2b4c <HStepper_DIR_MODE+0x1e6a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2afe:	8e 01       	movw	r16, r28
    2b00:	05 5b       	subi	r16, 0xB5	; 181
    2b02:	1f 4f       	sbci	r17, 0xFF	; 255
    2b04:	fe 01       	movw	r30, r28
    2b06:	e3 5b       	subi	r30, 0xB3	; 179
    2b08:	ff 4f       	sbci	r31, 0xFF	; 255
    2b0a:	60 81       	ld	r22, Z
    2b0c:	71 81       	ldd	r23, Z+1	; 0x01
    2b0e:	82 81       	ldd	r24, Z+2	; 0x02
    2b10:	93 81       	ldd	r25, Z+3	; 0x03
    2b12:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2b16:	dc 01       	movw	r26, r24
    2b18:	cb 01       	movw	r24, r22
    2b1a:	f8 01       	movw	r30, r16
    2b1c:	91 83       	std	Z+1, r25	; 0x01
    2b1e:	80 83       	st	Z, r24
    2b20:	de 01       	movw	r26, r28
    2b22:	a9 5b       	subi	r26, 0xB9	; 185
    2b24:	bf 4f       	sbci	r27, 0xFF	; 255
    2b26:	fe 01       	movw	r30, r28
    2b28:	e5 5b       	subi	r30, 0xB5	; 181
    2b2a:	ff 4f       	sbci	r31, 0xFF	; 255
    2b2c:	80 81       	ld	r24, Z
    2b2e:	91 81       	ldd	r25, Z+1	; 0x01
    2b30:	8d 93       	st	X+, r24
    2b32:	9c 93       	st	X, r25
    2b34:	fe 01       	movw	r30, r28
    2b36:	e9 5b       	subi	r30, 0xB9	; 185
    2b38:	ff 4f       	sbci	r31, 0xFF	; 255
    2b3a:	80 81       	ld	r24, Z
    2b3c:	91 81       	ldd	r25, Z+1	; 0x01
    2b3e:	01 97       	sbiw	r24, 0x01	; 1
    2b40:	f1 f7       	brne	.-4      	; 0x2b3e <HStepper_DIR_MODE+0x1e5c>
    2b42:	fe 01       	movw	r30, r28
    2b44:	e9 5b       	subi	r30, 0xB9	; 185
    2b46:	ff 4f       	sbci	r31, 0xFF	; 255
    2b48:	91 83       	std	Z+1, r25	; 0x01
    2b4a:	80 83       	st	Z, r24


			_delay_ms(Stepper_speed);
			MDIO_vSetPinValue(HW_PORT,Coil_Blue,DIO_LOW);
    2b4c:	83 e0       	ldi	r24, 0x03	; 3
    2b4e:	60 e0       	ldi	r22, 0x00	; 0
    2b50:	40 e0       	ldi	r20, 0x00	; 0
    2b52:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
			MDIO_vSetPinValue(HW_PORT,Coil_Pink,DIO_LOW);
    2b56:	83 e0       	ldi	r24, 0x03	; 3
    2b58:	61 e0       	ldi	r22, 0x01	; 1
    2b5a:	40 e0       	ldi	r20, 0x00	; 0
    2b5c:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
			MDIO_vSetPinValue(HW_PORT,Coil_Yellow,DIO_HIGH);
    2b60:	83 e0       	ldi	r24, 0x03	; 3
    2b62:	62 e0       	ldi	r22, 0x02	; 2
    2b64:	41 e0       	ldi	r20, 0x01	; 1
    2b66:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
			MDIO_vSetPinValue(HW_PORT,Coil_Orange,DIO_LOW);
    2b6a:	83 e0       	ldi	r24, 0x03	; 3
    2b6c:	63 e0       	ldi	r22, 0x03	; 3
    2b6e:	40 e0       	ldi	r20, 0x00	; 0
    2b70:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
    2b74:	fe 01       	movw	r30, r28
    2b76:	ed 5b       	subi	r30, 0xBD	; 189
    2b78:	ff 4f       	sbci	r31, 0xFF	; 255
    2b7a:	80 e0       	ldi	r24, 0x00	; 0
    2b7c:	90 e0       	ldi	r25, 0x00	; 0
    2b7e:	a0 ea       	ldi	r26, 0xA0	; 160
    2b80:	b0 e4       	ldi	r27, 0x40	; 64
    2b82:	80 83       	st	Z, r24
    2b84:	91 83       	std	Z+1, r25	; 0x01
    2b86:	a2 83       	std	Z+2, r26	; 0x02
    2b88:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2b8a:	8e 01       	movw	r16, r28
    2b8c:	01 5c       	subi	r16, 0xC1	; 193
    2b8e:	1f 4f       	sbci	r17, 0xFF	; 255
    2b90:	fe 01       	movw	r30, r28
    2b92:	ed 5b       	subi	r30, 0xBD	; 189
    2b94:	ff 4f       	sbci	r31, 0xFF	; 255
    2b96:	60 81       	ld	r22, Z
    2b98:	71 81       	ldd	r23, Z+1	; 0x01
    2b9a:	82 81       	ldd	r24, Z+2	; 0x02
    2b9c:	93 81       	ldd	r25, Z+3	; 0x03
    2b9e:	20 e0       	ldi	r18, 0x00	; 0
    2ba0:	30 e0       	ldi	r19, 0x00	; 0
    2ba2:	4a ef       	ldi	r20, 0xFA	; 250
    2ba4:	54 e4       	ldi	r21, 0x44	; 68
    2ba6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2baa:	dc 01       	movw	r26, r24
    2bac:	cb 01       	movw	r24, r22
    2bae:	f8 01       	movw	r30, r16
    2bb0:	80 83       	st	Z, r24
    2bb2:	91 83       	std	Z+1, r25	; 0x01
    2bb4:	a2 83       	std	Z+2, r26	; 0x02
    2bb6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2bb8:	fe 01       	movw	r30, r28
    2bba:	ff 96       	adiw	r30, 0x3f	; 63
    2bbc:	60 81       	ld	r22, Z
    2bbe:	71 81       	ldd	r23, Z+1	; 0x01
    2bc0:	82 81       	ldd	r24, Z+2	; 0x02
    2bc2:	93 81       	ldd	r25, Z+3	; 0x03
    2bc4:	20 e0       	ldi	r18, 0x00	; 0
    2bc6:	30 e0       	ldi	r19, 0x00	; 0
    2bc8:	40 e8       	ldi	r20, 0x80	; 128
    2bca:	5f e3       	ldi	r21, 0x3F	; 63
    2bcc:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2bd0:	88 23       	and	r24, r24
    2bd2:	2c f4       	brge	.+10     	; 0x2bde <HStepper_DIR_MODE+0x1efc>
		__ticks = 1;
    2bd4:	81 e0       	ldi	r24, 0x01	; 1
    2bd6:	90 e0       	ldi	r25, 0x00	; 0
    2bd8:	9e af       	std	Y+62, r25	; 0x3e
    2bda:	8d af       	std	Y+61, r24	; 0x3d
    2bdc:	46 c0       	rjmp	.+140    	; 0x2c6a <HStepper_DIR_MODE+0x1f88>
	else if (__tmp > 65535)
    2bde:	fe 01       	movw	r30, r28
    2be0:	ff 96       	adiw	r30, 0x3f	; 63
    2be2:	60 81       	ld	r22, Z
    2be4:	71 81       	ldd	r23, Z+1	; 0x01
    2be6:	82 81       	ldd	r24, Z+2	; 0x02
    2be8:	93 81       	ldd	r25, Z+3	; 0x03
    2bea:	20 e0       	ldi	r18, 0x00	; 0
    2bec:	3f ef       	ldi	r19, 0xFF	; 255
    2bee:	4f e7       	ldi	r20, 0x7F	; 127
    2bf0:	57 e4       	ldi	r21, 0x47	; 71
    2bf2:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2bf6:	18 16       	cp	r1, r24
    2bf8:	64 f5       	brge	.+88     	; 0x2c52 <HStepper_DIR_MODE+0x1f70>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2bfa:	fe 01       	movw	r30, r28
    2bfc:	ed 5b       	subi	r30, 0xBD	; 189
    2bfe:	ff 4f       	sbci	r31, 0xFF	; 255
    2c00:	60 81       	ld	r22, Z
    2c02:	71 81       	ldd	r23, Z+1	; 0x01
    2c04:	82 81       	ldd	r24, Z+2	; 0x02
    2c06:	93 81       	ldd	r25, Z+3	; 0x03
    2c08:	20 e0       	ldi	r18, 0x00	; 0
    2c0a:	30 e0       	ldi	r19, 0x00	; 0
    2c0c:	40 e2       	ldi	r20, 0x20	; 32
    2c0e:	51 e4       	ldi	r21, 0x41	; 65
    2c10:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2c14:	dc 01       	movw	r26, r24
    2c16:	cb 01       	movw	r24, r22
    2c18:	bc 01       	movw	r22, r24
    2c1a:	cd 01       	movw	r24, r26
    2c1c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2c20:	dc 01       	movw	r26, r24
    2c22:	cb 01       	movw	r24, r22
    2c24:	9e af       	std	Y+62, r25	; 0x3e
    2c26:	8d af       	std	Y+61, r24	; 0x3d
    2c28:	0f c0       	rjmp	.+30     	; 0x2c48 <HStepper_DIR_MODE+0x1f66>
    2c2a:	88 ec       	ldi	r24, 0xC8	; 200
    2c2c:	90 e0       	ldi	r25, 0x00	; 0
    2c2e:	9c af       	std	Y+60, r25	; 0x3c
    2c30:	8b af       	std	Y+59, r24	; 0x3b
    2c32:	8b ad       	ldd	r24, Y+59	; 0x3b
    2c34:	9c ad       	ldd	r25, Y+60	; 0x3c
    2c36:	01 97       	sbiw	r24, 0x01	; 1
    2c38:	f1 f7       	brne	.-4      	; 0x2c36 <HStepper_DIR_MODE+0x1f54>
    2c3a:	9c af       	std	Y+60, r25	; 0x3c
    2c3c:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2c3e:	8d ad       	ldd	r24, Y+61	; 0x3d
    2c40:	9e ad       	ldd	r25, Y+62	; 0x3e
    2c42:	01 97       	sbiw	r24, 0x01	; 1
    2c44:	9e af       	std	Y+62, r25	; 0x3e
    2c46:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2c48:	8d ad       	ldd	r24, Y+61	; 0x3d
    2c4a:	9e ad       	ldd	r25, Y+62	; 0x3e
    2c4c:	00 97       	sbiw	r24, 0x00	; 0
    2c4e:	69 f7       	brne	.-38     	; 0x2c2a <HStepper_DIR_MODE+0x1f48>
    2c50:	16 c0       	rjmp	.+44     	; 0x2c7e <HStepper_DIR_MODE+0x1f9c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2c52:	fe 01       	movw	r30, r28
    2c54:	ff 96       	adiw	r30, 0x3f	; 63
    2c56:	60 81       	ld	r22, Z
    2c58:	71 81       	ldd	r23, Z+1	; 0x01
    2c5a:	82 81       	ldd	r24, Z+2	; 0x02
    2c5c:	93 81       	ldd	r25, Z+3	; 0x03
    2c5e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2c62:	dc 01       	movw	r26, r24
    2c64:	cb 01       	movw	r24, r22
    2c66:	9e af       	std	Y+62, r25	; 0x3e
    2c68:	8d af       	std	Y+61, r24	; 0x3d
    2c6a:	8d ad       	ldd	r24, Y+61	; 0x3d
    2c6c:	9e ad       	ldd	r25, Y+62	; 0x3e
    2c6e:	9a af       	std	Y+58, r25	; 0x3a
    2c70:	89 af       	std	Y+57, r24	; 0x39
    2c72:	89 ad       	ldd	r24, Y+57	; 0x39
    2c74:	9a ad       	ldd	r25, Y+58	; 0x3a
    2c76:	01 97       	sbiw	r24, 0x01	; 1
    2c78:	f1 f7       	brne	.-4      	; 0x2c76 <HStepper_DIR_MODE+0x1f94>
    2c7a:	9a af       	std	Y+58, r25	; 0x3a
    2c7c:	89 af       	std	Y+57, r24	; 0x39


			_delay_ms(Stepper_speed);

			MDIO_vSetPinValue(HW_PORT,Coil_Blue,DIO_LOW);
    2c7e:	83 e0       	ldi	r24, 0x03	; 3
    2c80:	60 e0       	ldi	r22, 0x00	; 0
    2c82:	40 e0       	ldi	r20, 0x00	; 0
    2c84:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
			MDIO_vSetPinValue(HW_PORT,Coil_Pink,DIO_HIGH);
    2c88:	83 e0       	ldi	r24, 0x03	; 3
    2c8a:	61 e0       	ldi	r22, 0x01	; 1
    2c8c:	41 e0       	ldi	r20, 0x01	; 1
    2c8e:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
			MDIO_vSetPinValue(HW_PORT,Coil_Yellow,DIO_HIGH);
    2c92:	83 e0       	ldi	r24, 0x03	; 3
    2c94:	62 e0       	ldi	r22, 0x02	; 2
    2c96:	41 e0       	ldi	r20, 0x01	; 1
    2c98:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
			MDIO_vSetPinValue(HW_PORT,Coil_Orange,DIO_LOW);
    2c9c:	83 e0       	ldi	r24, 0x03	; 3
    2c9e:	63 e0       	ldi	r22, 0x03	; 3
    2ca0:	40 e0       	ldi	r20, 0x00	; 0
    2ca2:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
    2ca6:	80 e0       	ldi	r24, 0x00	; 0
    2ca8:	90 e0       	ldi	r25, 0x00	; 0
    2caa:	a0 ea       	ldi	r26, 0xA0	; 160
    2cac:	b0 e4       	ldi	r27, 0x40	; 64
    2cae:	8d ab       	std	Y+53, r24	; 0x35
    2cb0:	9e ab       	std	Y+54, r25	; 0x36
    2cb2:	af ab       	std	Y+55, r26	; 0x37
    2cb4:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2cb6:	6d a9       	ldd	r22, Y+53	; 0x35
    2cb8:	7e a9       	ldd	r23, Y+54	; 0x36
    2cba:	8f a9       	ldd	r24, Y+55	; 0x37
    2cbc:	98 ad       	ldd	r25, Y+56	; 0x38
    2cbe:	20 e0       	ldi	r18, 0x00	; 0
    2cc0:	30 e0       	ldi	r19, 0x00	; 0
    2cc2:	4a ef       	ldi	r20, 0xFA	; 250
    2cc4:	54 e4       	ldi	r21, 0x44	; 68
    2cc6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2cca:	dc 01       	movw	r26, r24
    2ccc:	cb 01       	movw	r24, r22
    2cce:	89 ab       	std	Y+49, r24	; 0x31
    2cd0:	9a ab       	std	Y+50, r25	; 0x32
    2cd2:	ab ab       	std	Y+51, r26	; 0x33
    2cd4:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    2cd6:	69 a9       	ldd	r22, Y+49	; 0x31
    2cd8:	7a a9       	ldd	r23, Y+50	; 0x32
    2cda:	8b a9       	ldd	r24, Y+51	; 0x33
    2cdc:	9c a9       	ldd	r25, Y+52	; 0x34
    2cde:	20 e0       	ldi	r18, 0x00	; 0
    2ce0:	30 e0       	ldi	r19, 0x00	; 0
    2ce2:	40 e8       	ldi	r20, 0x80	; 128
    2ce4:	5f e3       	ldi	r21, 0x3F	; 63
    2ce6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2cea:	88 23       	and	r24, r24
    2cec:	2c f4       	brge	.+10     	; 0x2cf8 <HStepper_DIR_MODE+0x2016>
		__ticks = 1;
    2cee:	81 e0       	ldi	r24, 0x01	; 1
    2cf0:	90 e0       	ldi	r25, 0x00	; 0
    2cf2:	98 ab       	std	Y+48, r25	; 0x30
    2cf4:	8f a7       	std	Y+47, r24	; 0x2f
    2cf6:	3f c0       	rjmp	.+126    	; 0x2d76 <HStepper_DIR_MODE+0x2094>
	else if (__tmp > 65535)
    2cf8:	69 a9       	ldd	r22, Y+49	; 0x31
    2cfa:	7a a9       	ldd	r23, Y+50	; 0x32
    2cfc:	8b a9       	ldd	r24, Y+51	; 0x33
    2cfe:	9c a9       	ldd	r25, Y+52	; 0x34
    2d00:	20 e0       	ldi	r18, 0x00	; 0
    2d02:	3f ef       	ldi	r19, 0xFF	; 255
    2d04:	4f e7       	ldi	r20, 0x7F	; 127
    2d06:	57 e4       	ldi	r21, 0x47	; 71
    2d08:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2d0c:	18 16       	cp	r1, r24
    2d0e:	4c f5       	brge	.+82     	; 0x2d62 <HStepper_DIR_MODE+0x2080>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2d10:	6d a9       	ldd	r22, Y+53	; 0x35
    2d12:	7e a9       	ldd	r23, Y+54	; 0x36
    2d14:	8f a9       	ldd	r24, Y+55	; 0x37
    2d16:	98 ad       	ldd	r25, Y+56	; 0x38
    2d18:	20 e0       	ldi	r18, 0x00	; 0
    2d1a:	30 e0       	ldi	r19, 0x00	; 0
    2d1c:	40 e2       	ldi	r20, 0x20	; 32
    2d1e:	51 e4       	ldi	r21, 0x41	; 65
    2d20:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2d24:	dc 01       	movw	r26, r24
    2d26:	cb 01       	movw	r24, r22
    2d28:	bc 01       	movw	r22, r24
    2d2a:	cd 01       	movw	r24, r26
    2d2c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2d30:	dc 01       	movw	r26, r24
    2d32:	cb 01       	movw	r24, r22
    2d34:	98 ab       	std	Y+48, r25	; 0x30
    2d36:	8f a7       	std	Y+47, r24	; 0x2f
    2d38:	0f c0       	rjmp	.+30     	; 0x2d58 <HStepper_DIR_MODE+0x2076>
    2d3a:	88 ec       	ldi	r24, 0xC8	; 200
    2d3c:	90 e0       	ldi	r25, 0x00	; 0
    2d3e:	9e a7       	std	Y+46, r25	; 0x2e
    2d40:	8d a7       	std	Y+45, r24	; 0x2d
    2d42:	8d a5       	ldd	r24, Y+45	; 0x2d
    2d44:	9e a5       	ldd	r25, Y+46	; 0x2e
    2d46:	01 97       	sbiw	r24, 0x01	; 1
    2d48:	f1 f7       	brne	.-4      	; 0x2d46 <HStepper_DIR_MODE+0x2064>
    2d4a:	9e a7       	std	Y+46, r25	; 0x2e
    2d4c:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2d4e:	8f a5       	ldd	r24, Y+47	; 0x2f
    2d50:	98 a9       	ldd	r25, Y+48	; 0x30
    2d52:	01 97       	sbiw	r24, 0x01	; 1
    2d54:	98 ab       	std	Y+48, r25	; 0x30
    2d56:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2d58:	8f a5       	ldd	r24, Y+47	; 0x2f
    2d5a:	98 a9       	ldd	r25, Y+48	; 0x30
    2d5c:	00 97       	sbiw	r24, 0x00	; 0
    2d5e:	69 f7       	brne	.-38     	; 0x2d3a <HStepper_DIR_MODE+0x2058>
    2d60:	14 c0       	rjmp	.+40     	; 0x2d8a <HStepper_DIR_MODE+0x20a8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2d62:	69 a9       	ldd	r22, Y+49	; 0x31
    2d64:	7a a9       	ldd	r23, Y+50	; 0x32
    2d66:	8b a9       	ldd	r24, Y+51	; 0x33
    2d68:	9c a9       	ldd	r25, Y+52	; 0x34
    2d6a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2d6e:	dc 01       	movw	r26, r24
    2d70:	cb 01       	movw	r24, r22
    2d72:	98 ab       	std	Y+48, r25	; 0x30
    2d74:	8f a7       	std	Y+47, r24	; 0x2f
    2d76:	8f a5       	ldd	r24, Y+47	; 0x2f
    2d78:	98 a9       	ldd	r25, Y+48	; 0x30
    2d7a:	9c a7       	std	Y+44, r25	; 0x2c
    2d7c:	8b a7       	std	Y+43, r24	; 0x2b
    2d7e:	8b a5       	ldd	r24, Y+43	; 0x2b
    2d80:	9c a5       	ldd	r25, Y+44	; 0x2c
    2d82:	01 97       	sbiw	r24, 0x01	; 1
    2d84:	f1 f7       	brne	.-4      	; 0x2d82 <HStepper_DIR_MODE+0x20a0>
    2d86:	9c a7       	std	Y+44, r25	; 0x2c
    2d88:	8b a7       	std	Y+43, r24	; 0x2b

			_delay_ms(Stepper_speed);

			MDIO_vSetPinValue(HW_PORT,Coil_Blue,DIO_LOW);
    2d8a:	83 e0       	ldi	r24, 0x03	; 3
    2d8c:	60 e0       	ldi	r22, 0x00	; 0
    2d8e:	40 e0       	ldi	r20, 0x00	; 0
    2d90:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
			MDIO_vSetPinValue(HW_PORT,Coil_Pink,DIO_HIGH);
    2d94:	83 e0       	ldi	r24, 0x03	; 3
    2d96:	61 e0       	ldi	r22, 0x01	; 1
    2d98:	41 e0       	ldi	r20, 0x01	; 1
    2d9a:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
			MDIO_vSetPinValue(HW_PORT,Coil_Yellow,DIO_LOW);
    2d9e:	83 e0       	ldi	r24, 0x03	; 3
    2da0:	62 e0       	ldi	r22, 0x02	; 2
    2da2:	40 e0       	ldi	r20, 0x00	; 0
    2da4:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
			MDIO_vSetPinValue(HW_PORT,Coil_Orange,DIO_LOW);
    2da8:	83 e0       	ldi	r24, 0x03	; 3
    2daa:	63 e0       	ldi	r22, 0x03	; 3
    2dac:	40 e0       	ldi	r20, 0x00	; 0
    2dae:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
    2db2:	80 e0       	ldi	r24, 0x00	; 0
    2db4:	90 e0       	ldi	r25, 0x00	; 0
    2db6:	a0 ea       	ldi	r26, 0xA0	; 160
    2db8:	b0 e4       	ldi	r27, 0x40	; 64
    2dba:	8f a3       	std	Y+39, r24	; 0x27
    2dbc:	98 a7       	std	Y+40, r25	; 0x28
    2dbe:	a9 a7       	std	Y+41, r26	; 0x29
    2dc0:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2dc2:	6f a1       	ldd	r22, Y+39	; 0x27
    2dc4:	78 a5       	ldd	r23, Y+40	; 0x28
    2dc6:	89 a5       	ldd	r24, Y+41	; 0x29
    2dc8:	9a a5       	ldd	r25, Y+42	; 0x2a
    2dca:	20 e0       	ldi	r18, 0x00	; 0
    2dcc:	30 e0       	ldi	r19, 0x00	; 0
    2dce:	4a ef       	ldi	r20, 0xFA	; 250
    2dd0:	54 e4       	ldi	r21, 0x44	; 68
    2dd2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2dd6:	dc 01       	movw	r26, r24
    2dd8:	cb 01       	movw	r24, r22
    2dda:	8b a3       	std	Y+35, r24	; 0x23
    2ddc:	9c a3       	std	Y+36, r25	; 0x24
    2dde:	ad a3       	std	Y+37, r26	; 0x25
    2de0:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    2de2:	6b a1       	ldd	r22, Y+35	; 0x23
    2de4:	7c a1       	ldd	r23, Y+36	; 0x24
    2de6:	8d a1       	ldd	r24, Y+37	; 0x25
    2de8:	9e a1       	ldd	r25, Y+38	; 0x26
    2dea:	20 e0       	ldi	r18, 0x00	; 0
    2dec:	30 e0       	ldi	r19, 0x00	; 0
    2dee:	40 e8       	ldi	r20, 0x80	; 128
    2df0:	5f e3       	ldi	r21, 0x3F	; 63
    2df2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2df6:	88 23       	and	r24, r24
    2df8:	2c f4       	brge	.+10     	; 0x2e04 <HStepper_DIR_MODE+0x2122>
		__ticks = 1;
    2dfa:	81 e0       	ldi	r24, 0x01	; 1
    2dfc:	90 e0       	ldi	r25, 0x00	; 0
    2dfe:	9a a3       	std	Y+34, r25	; 0x22
    2e00:	89 a3       	std	Y+33, r24	; 0x21
    2e02:	3f c0       	rjmp	.+126    	; 0x2e82 <HStepper_DIR_MODE+0x21a0>
	else if (__tmp > 65535)
    2e04:	6b a1       	ldd	r22, Y+35	; 0x23
    2e06:	7c a1       	ldd	r23, Y+36	; 0x24
    2e08:	8d a1       	ldd	r24, Y+37	; 0x25
    2e0a:	9e a1       	ldd	r25, Y+38	; 0x26
    2e0c:	20 e0       	ldi	r18, 0x00	; 0
    2e0e:	3f ef       	ldi	r19, 0xFF	; 255
    2e10:	4f e7       	ldi	r20, 0x7F	; 127
    2e12:	57 e4       	ldi	r21, 0x47	; 71
    2e14:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2e18:	18 16       	cp	r1, r24
    2e1a:	4c f5       	brge	.+82     	; 0x2e6e <HStepper_DIR_MODE+0x218c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2e1c:	6f a1       	ldd	r22, Y+39	; 0x27
    2e1e:	78 a5       	ldd	r23, Y+40	; 0x28
    2e20:	89 a5       	ldd	r24, Y+41	; 0x29
    2e22:	9a a5       	ldd	r25, Y+42	; 0x2a
    2e24:	20 e0       	ldi	r18, 0x00	; 0
    2e26:	30 e0       	ldi	r19, 0x00	; 0
    2e28:	40 e2       	ldi	r20, 0x20	; 32
    2e2a:	51 e4       	ldi	r21, 0x41	; 65
    2e2c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2e30:	dc 01       	movw	r26, r24
    2e32:	cb 01       	movw	r24, r22
    2e34:	bc 01       	movw	r22, r24
    2e36:	cd 01       	movw	r24, r26
    2e38:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2e3c:	dc 01       	movw	r26, r24
    2e3e:	cb 01       	movw	r24, r22
    2e40:	9a a3       	std	Y+34, r25	; 0x22
    2e42:	89 a3       	std	Y+33, r24	; 0x21
    2e44:	0f c0       	rjmp	.+30     	; 0x2e64 <HStepper_DIR_MODE+0x2182>
    2e46:	88 ec       	ldi	r24, 0xC8	; 200
    2e48:	90 e0       	ldi	r25, 0x00	; 0
    2e4a:	98 a3       	std	Y+32, r25	; 0x20
    2e4c:	8f 8f       	std	Y+31, r24	; 0x1f
    2e4e:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2e50:	98 a1       	ldd	r25, Y+32	; 0x20
    2e52:	01 97       	sbiw	r24, 0x01	; 1
    2e54:	f1 f7       	brne	.-4      	; 0x2e52 <HStepper_DIR_MODE+0x2170>
    2e56:	98 a3       	std	Y+32, r25	; 0x20
    2e58:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2e5a:	89 a1       	ldd	r24, Y+33	; 0x21
    2e5c:	9a a1       	ldd	r25, Y+34	; 0x22
    2e5e:	01 97       	sbiw	r24, 0x01	; 1
    2e60:	9a a3       	std	Y+34, r25	; 0x22
    2e62:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2e64:	89 a1       	ldd	r24, Y+33	; 0x21
    2e66:	9a a1       	ldd	r25, Y+34	; 0x22
    2e68:	00 97       	sbiw	r24, 0x00	; 0
    2e6a:	69 f7       	brne	.-38     	; 0x2e46 <HStepper_DIR_MODE+0x2164>
    2e6c:	14 c0       	rjmp	.+40     	; 0x2e96 <HStepper_DIR_MODE+0x21b4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2e6e:	6b a1       	ldd	r22, Y+35	; 0x23
    2e70:	7c a1       	ldd	r23, Y+36	; 0x24
    2e72:	8d a1       	ldd	r24, Y+37	; 0x25
    2e74:	9e a1       	ldd	r25, Y+38	; 0x26
    2e76:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2e7a:	dc 01       	movw	r26, r24
    2e7c:	cb 01       	movw	r24, r22
    2e7e:	9a a3       	std	Y+34, r25	; 0x22
    2e80:	89 a3       	std	Y+33, r24	; 0x21
    2e82:	89 a1       	ldd	r24, Y+33	; 0x21
    2e84:	9a a1       	ldd	r25, Y+34	; 0x22
    2e86:	9e 8f       	std	Y+30, r25	; 0x1e
    2e88:	8d 8f       	std	Y+29, r24	; 0x1d
    2e8a:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2e8c:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2e8e:	01 97       	sbiw	r24, 0x01	; 1
    2e90:	f1 f7       	brne	.-4      	; 0x2e8e <HStepper_DIR_MODE+0x21ac>
    2e92:	9e 8f       	std	Y+30, r25	; 0x1e
    2e94:	8d 8f       	std	Y+29, r24	; 0x1d

			_delay_ms(Stepper_speed);
			MDIO_vSetPinValue(HW_PORT,Coil_Blue,DIO_HIGH);
    2e96:	83 e0       	ldi	r24, 0x03	; 3
    2e98:	60 e0       	ldi	r22, 0x00	; 0
    2e9a:	41 e0       	ldi	r20, 0x01	; 1
    2e9c:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
			MDIO_vSetPinValue(HW_PORT,Coil_Pink,DIO_HIGH);
    2ea0:	83 e0       	ldi	r24, 0x03	; 3
    2ea2:	61 e0       	ldi	r22, 0x01	; 1
    2ea4:	41 e0       	ldi	r20, 0x01	; 1
    2ea6:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
			MDIO_vSetPinValue(HW_PORT,Coil_Yellow,DIO_LOW);
    2eaa:	83 e0       	ldi	r24, 0x03	; 3
    2eac:	62 e0       	ldi	r22, 0x02	; 2
    2eae:	40 e0       	ldi	r20, 0x00	; 0
    2eb0:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
			MDIO_vSetPinValue(HW_PORT,Coil_Orange,DIO_LOW);
    2eb4:	83 e0       	ldi	r24, 0x03	; 3
    2eb6:	63 e0       	ldi	r22, 0x03	; 3
    2eb8:	40 e0       	ldi	r20, 0x00	; 0
    2eba:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
    2ebe:	80 e0       	ldi	r24, 0x00	; 0
    2ec0:	90 e0       	ldi	r25, 0x00	; 0
    2ec2:	a0 ea       	ldi	r26, 0xA0	; 160
    2ec4:	b0 e4       	ldi	r27, 0x40	; 64
    2ec6:	89 8f       	std	Y+25, r24	; 0x19
    2ec8:	9a 8f       	std	Y+26, r25	; 0x1a
    2eca:	ab 8f       	std	Y+27, r26	; 0x1b
    2ecc:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2ece:	69 8d       	ldd	r22, Y+25	; 0x19
    2ed0:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2ed2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2ed4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2ed6:	20 e0       	ldi	r18, 0x00	; 0
    2ed8:	30 e0       	ldi	r19, 0x00	; 0
    2eda:	4a ef       	ldi	r20, 0xFA	; 250
    2edc:	54 e4       	ldi	r21, 0x44	; 68
    2ede:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2ee2:	dc 01       	movw	r26, r24
    2ee4:	cb 01       	movw	r24, r22
    2ee6:	8d 8b       	std	Y+21, r24	; 0x15
    2ee8:	9e 8b       	std	Y+22, r25	; 0x16
    2eea:	af 8b       	std	Y+23, r26	; 0x17
    2eec:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    2eee:	6d 89       	ldd	r22, Y+21	; 0x15
    2ef0:	7e 89       	ldd	r23, Y+22	; 0x16
    2ef2:	8f 89       	ldd	r24, Y+23	; 0x17
    2ef4:	98 8d       	ldd	r25, Y+24	; 0x18
    2ef6:	20 e0       	ldi	r18, 0x00	; 0
    2ef8:	30 e0       	ldi	r19, 0x00	; 0
    2efa:	40 e8       	ldi	r20, 0x80	; 128
    2efc:	5f e3       	ldi	r21, 0x3F	; 63
    2efe:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2f02:	88 23       	and	r24, r24
    2f04:	2c f4       	brge	.+10     	; 0x2f10 <HStepper_DIR_MODE+0x222e>
		__ticks = 1;
    2f06:	81 e0       	ldi	r24, 0x01	; 1
    2f08:	90 e0       	ldi	r25, 0x00	; 0
    2f0a:	9c 8b       	std	Y+20, r25	; 0x14
    2f0c:	8b 8b       	std	Y+19, r24	; 0x13
    2f0e:	3f c0       	rjmp	.+126    	; 0x2f8e <HStepper_DIR_MODE+0x22ac>
	else if (__tmp > 65535)
    2f10:	6d 89       	ldd	r22, Y+21	; 0x15
    2f12:	7e 89       	ldd	r23, Y+22	; 0x16
    2f14:	8f 89       	ldd	r24, Y+23	; 0x17
    2f16:	98 8d       	ldd	r25, Y+24	; 0x18
    2f18:	20 e0       	ldi	r18, 0x00	; 0
    2f1a:	3f ef       	ldi	r19, 0xFF	; 255
    2f1c:	4f e7       	ldi	r20, 0x7F	; 127
    2f1e:	57 e4       	ldi	r21, 0x47	; 71
    2f20:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2f24:	18 16       	cp	r1, r24
    2f26:	4c f5       	brge	.+82     	; 0x2f7a <HStepper_DIR_MODE+0x2298>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2f28:	69 8d       	ldd	r22, Y+25	; 0x19
    2f2a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2f2c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2f2e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2f30:	20 e0       	ldi	r18, 0x00	; 0
    2f32:	30 e0       	ldi	r19, 0x00	; 0
    2f34:	40 e2       	ldi	r20, 0x20	; 32
    2f36:	51 e4       	ldi	r21, 0x41	; 65
    2f38:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2f3c:	dc 01       	movw	r26, r24
    2f3e:	cb 01       	movw	r24, r22
    2f40:	bc 01       	movw	r22, r24
    2f42:	cd 01       	movw	r24, r26
    2f44:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2f48:	dc 01       	movw	r26, r24
    2f4a:	cb 01       	movw	r24, r22
    2f4c:	9c 8b       	std	Y+20, r25	; 0x14
    2f4e:	8b 8b       	std	Y+19, r24	; 0x13
    2f50:	0f c0       	rjmp	.+30     	; 0x2f70 <HStepper_DIR_MODE+0x228e>
    2f52:	88 ec       	ldi	r24, 0xC8	; 200
    2f54:	90 e0       	ldi	r25, 0x00	; 0
    2f56:	9a 8b       	std	Y+18, r25	; 0x12
    2f58:	89 8b       	std	Y+17, r24	; 0x11
    2f5a:	89 89       	ldd	r24, Y+17	; 0x11
    2f5c:	9a 89       	ldd	r25, Y+18	; 0x12
    2f5e:	01 97       	sbiw	r24, 0x01	; 1
    2f60:	f1 f7       	brne	.-4      	; 0x2f5e <HStepper_DIR_MODE+0x227c>
    2f62:	9a 8b       	std	Y+18, r25	; 0x12
    2f64:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2f66:	8b 89       	ldd	r24, Y+19	; 0x13
    2f68:	9c 89       	ldd	r25, Y+20	; 0x14
    2f6a:	01 97       	sbiw	r24, 0x01	; 1
    2f6c:	9c 8b       	std	Y+20, r25	; 0x14
    2f6e:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2f70:	8b 89       	ldd	r24, Y+19	; 0x13
    2f72:	9c 89       	ldd	r25, Y+20	; 0x14
    2f74:	00 97       	sbiw	r24, 0x00	; 0
    2f76:	69 f7       	brne	.-38     	; 0x2f52 <HStepper_DIR_MODE+0x2270>
    2f78:	14 c0       	rjmp	.+40     	; 0x2fa2 <HStepper_DIR_MODE+0x22c0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2f7a:	6d 89       	ldd	r22, Y+21	; 0x15
    2f7c:	7e 89       	ldd	r23, Y+22	; 0x16
    2f7e:	8f 89       	ldd	r24, Y+23	; 0x17
    2f80:	98 8d       	ldd	r25, Y+24	; 0x18
    2f82:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2f86:	dc 01       	movw	r26, r24
    2f88:	cb 01       	movw	r24, r22
    2f8a:	9c 8b       	std	Y+20, r25	; 0x14
    2f8c:	8b 8b       	std	Y+19, r24	; 0x13
    2f8e:	8b 89       	ldd	r24, Y+19	; 0x13
    2f90:	9c 89       	ldd	r25, Y+20	; 0x14
    2f92:	98 8b       	std	Y+16, r25	; 0x10
    2f94:	8f 87       	std	Y+15, r24	; 0x0f
    2f96:	8f 85       	ldd	r24, Y+15	; 0x0f
    2f98:	98 89       	ldd	r25, Y+16	; 0x10
    2f9a:	01 97       	sbiw	r24, 0x01	; 1
    2f9c:	f1 f7       	brne	.-4      	; 0x2f9a <HStepper_DIR_MODE+0x22b8>
    2f9e:	98 8b       	std	Y+16, r25	; 0x10
    2fa0:	8f 87       	std	Y+15, r24	; 0x0f


			_delay_ms(Stepper_speed);
			MDIO_vSetPinValue(HW_PORT,Coil_Blue,DIO_HIGH);
    2fa2:	83 e0       	ldi	r24, 0x03	; 3
    2fa4:	60 e0       	ldi	r22, 0x00	; 0
    2fa6:	41 e0       	ldi	r20, 0x01	; 1
    2fa8:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
			MDIO_vSetPinValue(HW_PORT,Coil_Pink,DIO_LOW);
    2fac:	83 e0       	ldi	r24, 0x03	; 3
    2fae:	61 e0       	ldi	r22, 0x01	; 1
    2fb0:	40 e0       	ldi	r20, 0x00	; 0
    2fb2:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
			MDIO_vSetPinValue(HW_PORT,Coil_Yellow,DIO_LOW);
    2fb6:	83 e0       	ldi	r24, 0x03	; 3
    2fb8:	62 e0       	ldi	r22, 0x02	; 2
    2fba:	40 e0       	ldi	r20, 0x00	; 0
    2fbc:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
			MDIO_vSetPinValue(HW_PORT,Coil_Orange,DIO_HIGH);
    2fc0:	83 e0       	ldi	r24, 0x03	; 3
    2fc2:	63 e0       	ldi	r22, 0x03	; 3
    2fc4:	41 e0       	ldi	r20, 0x01	; 1
    2fc6:	0e 94 27 1a 	call	0x344e	; 0x344e <MDIO_vSetPinValue>
    2fca:	80 e0       	ldi	r24, 0x00	; 0
    2fcc:	90 e0       	ldi	r25, 0x00	; 0
    2fce:	a0 ea       	ldi	r26, 0xA0	; 160
    2fd0:	b0 e4       	ldi	r27, 0x40	; 64
    2fd2:	8b 87       	std	Y+11, r24	; 0x0b
    2fd4:	9c 87       	std	Y+12, r25	; 0x0c
    2fd6:	ad 87       	std	Y+13, r26	; 0x0d
    2fd8:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2fda:	6b 85       	ldd	r22, Y+11	; 0x0b
    2fdc:	7c 85       	ldd	r23, Y+12	; 0x0c
    2fde:	8d 85       	ldd	r24, Y+13	; 0x0d
    2fe0:	9e 85       	ldd	r25, Y+14	; 0x0e
    2fe2:	20 e0       	ldi	r18, 0x00	; 0
    2fe4:	30 e0       	ldi	r19, 0x00	; 0
    2fe6:	4a ef       	ldi	r20, 0xFA	; 250
    2fe8:	54 e4       	ldi	r21, 0x44	; 68
    2fea:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2fee:	dc 01       	movw	r26, r24
    2ff0:	cb 01       	movw	r24, r22
    2ff2:	8f 83       	std	Y+7, r24	; 0x07
    2ff4:	98 87       	std	Y+8, r25	; 0x08
    2ff6:	a9 87       	std	Y+9, r26	; 0x09
    2ff8:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2ffa:	6f 81       	ldd	r22, Y+7	; 0x07
    2ffc:	78 85       	ldd	r23, Y+8	; 0x08
    2ffe:	89 85       	ldd	r24, Y+9	; 0x09
    3000:	9a 85       	ldd	r25, Y+10	; 0x0a
    3002:	20 e0       	ldi	r18, 0x00	; 0
    3004:	30 e0       	ldi	r19, 0x00	; 0
    3006:	40 e8       	ldi	r20, 0x80	; 128
    3008:	5f e3       	ldi	r21, 0x3F	; 63
    300a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    300e:	88 23       	and	r24, r24
    3010:	2c f4       	brge	.+10     	; 0x301c <HStepper_DIR_MODE+0x233a>
		__ticks = 1;
    3012:	81 e0       	ldi	r24, 0x01	; 1
    3014:	90 e0       	ldi	r25, 0x00	; 0
    3016:	9e 83       	std	Y+6, r25	; 0x06
    3018:	8d 83       	std	Y+5, r24	; 0x05
    301a:	3f c0       	rjmp	.+126    	; 0x309a <HStepper_DIR_MODE+0x23b8>
	else if (__tmp > 65535)
    301c:	6f 81       	ldd	r22, Y+7	; 0x07
    301e:	78 85       	ldd	r23, Y+8	; 0x08
    3020:	89 85       	ldd	r24, Y+9	; 0x09
    3022:	9a 85       	ldd	r25, Y+10	; 0x0a
    3024:	20 e0       	ldi	r18, 0x00	; 0
    3026:	3f ef       	ldi	r19, 0xFF	; 255
    3028:	4f e7       	ldi	r20, 0x7F	; 127
    302a:	57 e4       	ldi	r21, 0x47	; 71
    302c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3030:	18 16       	cp	r1, r24
    3032:	4c f5       	brge	.+82     	; 0x3086 <HStepper_DIR_MODE+0x23a4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3034:	6b 85       	ldd	r22, Y+11	; 0x0b
    3036:	7c 85       	ldd	r23, Y+12	; 0x0c
    3038:	8d 85       	ldd	r24, Y+13	; 0x0d
    303a:	9e 85       	ldd	r25, Y+14	; 0x0e
    303c:	20 e0       	ldi	r18, 0x00	; 0
    303e:	30 e0       	ldi	r19, 0x00	; 0
    3040:	40 e2       	ldi	r20, 0x20	; 32
    3042:	51 e4       	ldi	r21, 0x41	; 65
    3044:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3048:	dc 01       	movw	r26, r24
    304a:	cb 01       	movw	r24, r22
    304c:	bc 01       	movw	r22, r24
    304e:	cd 01       	movw	r24, r26
    3050:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3054:	dc 01       	movw	r26, r24
    3056:	cb 01       	movw	r24, r22
    3058:	9e 83       	std	Y+6, r25	; 0x06
    305a:	8d 83       	std	Y+5, r24	; 0x05
    305c:	0f c0       	rjmp	.+30     	; 0x307c <HStepper_DIR_MODE+0x239a>
    305e:	88 ec       	ldi	r24, 0xC8	; 200
    3060:	90 e0       	ldi	r25, 0x00	; 0
    3062:	9c 83       	std	Y+4, r25	; 0x04
    3064:	8b 83       	std	Y+3, r24	; 0x03
    3066:	8b 81       	ldd	r24, Y+3	; 0x03
    3068:	9c 81       	ldd	r25, Y+4	; 0x04
    306a:	01 97       	sbiw	r24, 0x01	; 1
    306c:	f1 f7       	brne	.-4      	; 0x306a <HStepper_DIR_MODE+0x2388>
    306e:	9c 83       	std	Y+4, r25	; 0x04
    3070:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3072:	8d 81       	ldd	r24, Y+5	; 0x05
    3074:	9e 81       	ldd	r25, Y+6	; 0x06
    3076:	01 97       	sbiw	r24, 0x01	; 1
    3078:	9e 83       	std	Y+6, r25	; 0x06
    307a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    307c:	8d 81       	ldd	r24, Y+5	; 0x05
    307e:	9e 81       	ldd	r25, Y+6	; 0x06
    3080:	00 97       	sbiw	r24, 0x00	; 0
    3082:	69 f7       	brne	.-38     	; 0x305e <HStepper_DIR_MODE+0x237c>
    3084:	14 c0       	rjmp	.+40     	; 0x30ae <HStepper_DIR_MODE+0x23cc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3086:	6f 81       	ldd	r22, Y+7	; 0x07
    3088:	78 85       	ldd	r23, Y+8	; 0x08
    308a:	89 85       	ldd	r24, Y+9	; 0x09
    308c:	9a 85       	ldd	r25, Y+10	; 0x0a
    308e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3092:	dc 01       	movw	r26, r24
    3094:	cb 01       	movw	r24, r22
    3096:	9e 83       	std	Y+6, r25	; 0x06
    3098:	8d 83       	std	Y+5, r24	; 0x05
    309a:	8d 81       	ldd	r24, Y+5	; 0x05
    309c:	9e 81       	ldd	r25, Y+6	; 0x06
    309e:	9a 83       	std	Y+2, r25	; 0x02
    30a0:	89 83       	std	Y+1, r24	; 0x01
    30a2:	89 81       	ldd	r24, Y+1	; 0x01
    30a4:	9a 81       	ldd	r25, Y+2	; 0x02
    30a6:	01 97       	sbiw	r24, 0x01	; 1
    30a8:	f1 f7       	brne	.-4      	; 0x30a6 <HStepper_DIR_MODE+0x23c4>
    30aa:	9a 83       	std	Y+2, r25	; 0x02
    30ac:	89 83       	std	Y+1, r24	; 0x01

			break;

		}
	}
}
    30ae:	ca 5a       	subi	r28, 0xAA	; 170
    30b0:	de 4f       	sbci	r29, 0xFE	; 254
    30b2:	0f b6       	in	r0, 0x3f	; 63
    30b4:	f8 94       	cli
    30b6:	de bf       	out	0x3e, r29	; 62
    30b8:	0f be       	out	0x3f, r0	; 63
    30ba:	cd bf       	out	0x3d, r28	; 61
    30bc:	cf 91       	pop	r28
    30be:	df 91       	pop	r29
    30c0:	1f 91       	pop	r17
    30c2:	0f 91       	pop	r16
    30c4:	08 95       	ret

000030c6 <MDIO_vSetPortDirection>:
/*	function name:		MDIO_vSetPortDirection( u8 copy_u8port,u8 copy_u8PortDirection)
 * 	function inputs:	Port number , value to be input  or output
 * 	function outputs:	void
 */
/************************************************************************************************************/
void MDIO_vSetPortDirection( u8 copy_u8port,u8 copy_u8PortDirection){
    30c6:	df 93       	push	r29
    30c8:	cf 93       	push	r28
    30ca:	00 d0       	rcall	.+0      	; 0x30cc <MDIO_vSetPortDirection+0x6>
    30cc:	00 d0       	rcall	.+0      	; 0x30ce <MDIO_vSetPortDirection+0x8>
    30ce:	cd b7       	in	r28, 0x3d	; 61
    30d0:	de b7       	in	r29, 0x3e	; 62
    30d2:	89 83       	std	Y+1, r24	; 0x01
    30d4:	6a 83       	std	Y+2, r22	; 0x02

	switch (copy_u8port)
    30d6:	89 81       	ldd	r24, Y+1	; 0x01
    30d8:	28 2f       	mov	r18, r24
    30da:	30 e0       	ldi	r19, 0x00	; 0
    30dc:	3c 83       	std	Y+4, r19	; 0x04
    30de:	2b 83       	std	Y+3, r18	; 0x03
    30e0:	8b 81       	ldd	r24, Y+3	; 0x03
    30e2:	9c 81       	ldd	r25, Y+4	; 0x04
    30e4:	81 30       	cpi	r24, 0x01	; 1
    30e6:	91 05       	cpc	r25, r1
    30e8:	d1 f0       	breq	.+52     	; 0x311e <MDIO_vSetPortDirection+0x58>
    30ea:	2b 81       	ldd	r18, Y+3	; 0x03
    30ec:	3c 81       	ldd	r19, Y+4	; 0x04
    30ee:	22 30       	cpi	r18, 0x02	; 2
    30f0:	31 05       	cpc	r19, r1
    30f2:	2c f4       	brge	.+10     	; 0x30fe <MDIO_vSetPortDirection+0x38>
    30f4:	8b 81       	ldd	r24, Y+3	; 0x03
    30f6:	9c 81       	ldd	r25, Y+4	; 0x04
    30f8:	00 97       	sbiw	r24, 0x00	; 0
    30fa:	61 f0       	breq	.+24     	; 0x3114 <MDIO_vSetPortDirection+0x4e>
    30fc:	1e c0       	rjmp	.+60     	; 0x313a <MDIO_vSetPortDirection+0x74>
    30fe:	2b 81       	ldd	r18, Y+3	; 0x03
    3100:	3c 81       	ldd	r19, Y+4	; 0x04
    3102:	22 30       	cpi	r18, 0x02	; 2
    3104:	31 05       	cpc	r19, r1
    3106:	81 f0       	breq	.+32     	; 0x3128 <MDIO_vSetPortDirection+0x62>
    3108:	8b 81       	ldd	r24, Y+3	; 0x03
    310a:	9c 81       	ldd	r25, Y+4	; 0x04
    310c:	83 30       	cpi	r24, 0x03	; 3
    310e:	91 05       	cpc	r25, r1
    3110:	81 f0       	breq	.+32     	; 0x3132 <MDIO_vSetPortDirection+0x6c>
    3112:	13 c0       	rjmp	.+38     	; 0x313a <MDIO_vSetPortDirection+0x74>
	{
	case PORTA:
		DDRA_reg=copy_u8PortDirection;
    3114:	ea e3       	ldi	r30, 0x3A	; 58
    3116:	f0 e0       	ldi	r31, 0x00	; 0
    3118:	8a 81       	ldd	r24, Y+2	; 0x02
    311a:	80 83       	st	Z, r24
    311c:	0e c0       	rjmp	.+28     	; 0x313a <MDIO_vSetPortDirection+0x74>
		break;
	case PORTB:
		DDRB_reg=copy_u8PortDirection;
    311e:	e7 e3       	ldi	r30, 0x37	; 55
    3120:	f0 e0       	ldi	r31, 0x00	; 0
    3122:	8a 81       	ldd	r24, Y+2	; 0x02
    3124:	80 83       	st	Z, r24
    3126:	09 c0       	rjmp	.+18     	; 0x313a <MDIO_vSetPortDirection+0x74>
		break;
	case PORTC:
		DDRC_reg=copy_u8PortDirection;
    3128:	e4 e3       	ldi	r30, 0x34	; 52
    312a:	f0 e0       	ldi	r31, 0x00	; 0
    312c:	8a 81       	ldd	r24, Y+2	; 0x02
    312e:	80 83       	st	Z, r24
    3130:	04 c0       	rjmp	.+8      	; 0x313a <MDIO_vSetPortDirection+0x74>
		break;
	case PORTD:
		DDRD_reg=copy_u8PortDirection;
    3132:	e1 e3       	ldi	r30, 0x31	; 49
    3134:	f0 e0       	ldi	r31, 0x00	; 0
    3136:	8a 81       	ldd	r24, Y+2	; 0x02
    3138:	80 83       	st	Z, r24
		break;
	}
}
    313a:	0f 90       	pop	r0
    313c:	0f 90       	pop	r0
    313e:	0f 90       	pop	r0
    3140:	0f 90       	pop	r0
    3142:	cf 91       	pop	r28
    3144:	df 91       	pop	r29
    3146:	08 95       	ret

00003148 <MDIO_vSetPortValue>:
/*	function name:		void MDIO_vSetPortValue( u8 copy_u8port,u8 copy_u8PortValue)
 * 	function inputs:	Port number , value to be high or low
 * 	function outputs:	void
 */
/************************************************************************************************************/
void MDIO_vSetPortValue( u8 copy_u8port,u8 copy_u8PortValue){
    3148:	df 93       	push	r29
    314a:	cf 93       	push	r28
    314c:	00 d0       	rcall	.+0      	; 0x314e <MDIO_vSetPortValue+0x6>
    314e:	00 d0       	rcall	.+0      	; 0x3150 <MDIO_vSetPortValue+0x8>
    3150:	cd b7       	in	r28, 0x3d	; 61
    3152:	de b7       	in	r29, 0x3e	; 62
    3154:	89 83       	std	Y+1, r24	; 0x01
    3156:	6a 83       	std	Y+2, r22	; 0x02

	switch (copy_u8port) {
    3158:	89 81       	ldd	r24, Y+1	; 0x01
    315a:	28 2f       	mov	r18, r24
    315c:	30 e0       	ldi	r19, 0x00	; 0
    315e:	3c 83       	std	Y+4, r19	; 0x04
    3160:	2b 83       	std	Y+3, r18	; 0x03
    3162:	8b 81       	ldd	r24, Y+3	; 0x03
    3164:	9c 81       	ldd	r25, Y+4	; 0x04
    3166:	81 30       	cpi	r24, 0x01	; 1
    3168:	91 05       	cpc	r25, r1
    316a:	d1 f0       	breq	.+52     	; 0x31a0 <MDIO_vSetPortValue+0x58>
    316c:	2b 81       	ldd	r18, Y+3	; 0x03
    316e:	3c 81       	ldd	r19, Y+4	; 0x04
    3170:	22 30       	cpi	r18, 0x02	; 2
    3172:	31 05       	cpc	r19, r1
    3174:	2c f4       	brge	.+10     	; 0x3180 <MDIO_vSetPortValue+0x38>
    3176:	8b 81       	ldd	r24, Y+3	; 0x03
    3178:	9c 81       	ldd	r25, Y+4	; 0x04
    317a:	00 97       	sbiw	r24, 0x00	; 0
    317c:	61 f0       	breq	.+24     	; 0x3196 <MDIO_vSetPortValue+0x4e>
    317e:	1e c0       	rjmp	.+60     	; 0x31bc <MDIO_vSetPortValue+0x74>
    3180:	2b 81       	ldd	r18, Y+3	; 0x03
    3182:	3c 81       	ldd	r19, Y+4	; 0x04
    3184:	22 30       	cpi	r18, 0x02	; 2
    3186:	31 05       	cpc	r19, r1
    3188:	81 f0       	breq	.+32     	; 0x31aa <MDIO_vSetPortValue+0x62>
    318a:	8b 81       	ldd	r24, Y+3	; 0x03
    318c:	9c 81       	ldd	r25, Y+4	; 0x04
    318e:	83 30       	cpi	r24, 0x03	; 3
    3190:	91 05       	cpc	r25, r1
    3192:	81 f0       	breq	.+32     	; 0x31b4 <MDIO_vSetPortValue+0x6c>
    3194:	13 c0       	rjmp	.+38     	; 0x31bc <MDIO_vSetPortValue+0x74>
	case PORTA:
		PORTA_reg = copy_u8PortValue;
    3196:	eb e3       	ldi	r30, 0x3B	; 59
    3198:	f0 e0       	ldi	r31, 0x00	; 0
    319a:	8a 81       	ldd	r24, Y+2	; 0x02
    319c:	80 83       	st	Z, r24
    319e:	0e c0       	rjmp	.+28     	; 0x31bc <MDIO_vSetPortValue+0x74>
		break;
	case PORTB:
		PORTB_reg = copy_u8PortValue;
    31a0:	e8 e3       	ldi	r30, 0x38	; 56
    31a2:	f0 e0       	ldi	r31, 0x00	; 0
    31a4:	8a 81       	ldd	r24, Y+2	; 0x02
    31a6:	80 83       	st	Z, r24
    31a8:	09 c0       	rjmp	.+18     	; 0x31bc <MDIO_vSetPortValue+0x74>
		break;
	case PORTC:
		PORTC_reg = copy_u8PortValue;
    31aa:	e5 e3       	ldi	r30, 0x35	; 53
    31ac:	f0 e0       	ldi	r31, 0x00	; 0
    31ae:	8a 81       	ldd	r24, Y+2	; 0x02
    31b0:	80 83       	st	Z, r24
    31b2:	04 c0       	rjmp	.+8      	; 0x31bc <MDIO_vSetPortValue+0x74>
		break;
	case PORTD:
		PORTD_reg = copy_u8PortValue;
    31b4:	e2 e3       	ldi	r30, 0x32	; 50
    31b6:	f0 e0       	ldi	r31, 0x00	; 0
    31b8:	8a 81       	ldd	r24, Y+2	; 0x02
    31ba:	80 83       	st	Z, r24
		break;
	}
}
    31bc:	0f 90       	pop	r0
    31be:	0f 90       	pop	r0
    31c0:	0f 90       	pop	r0
    31c2:	0f 90       	pop	r0
    31c4:	cf 91       	pop	r28
    31c6:	df 91       	pop	r29
    31c8:	08 95       	ret

000031ca <MDIO_GetPortValue>:
/*	function name:		u8 MDIO_GetPortValue( u8 copy_u8port)
 * 	function inputs:	Port number
 * 	function outputs:	value is is high or low
 */
/************************************************************************************************************/
u8 MDIO_GetPortValue( u8 copy_u8port){
    31ca:	df 93       	push	r29
    31cc:	cf 93       	push	r28
    31ce:	00 d0       	rcall	.+0      	; 0x31d0 <MDIO_GetPortValue+0x6>
    31d0:	00 d0       	rcall	.+0      	; 0x31d2 <MDIO_GetPortValue+0x8>
    31d2:	cd b7       	in	r28, 0x3d	; 61
    31d4:	de b7       	in	r29, 0x3e	; 62
    31d6:	8a 83       	std	Y+2, r24	; 0x02

	u8 value=0;
    31d8:	19 82       	std	Y+1, r1	; 0x01
	switch (copy_u8port) {
    31da:	8a 81       	ldd	r24, Y+2	; 0x02
    31dc:	28 2f       	mov	r18, r24
    31de:	30 e0       	ldi	r19, 0x00	; 0
    31e0:	3c 83       	std	Y+4, r19	; 0x04
    31e2:	2b 83       	std	Y+3, r18	; 0x03
    31e4:	8b 81       	ldd	r24, Y+3	; 0x03
    31e6:	9c 81       	ldd	r25, Y+4	; 0x04
    31e8:	81 30       	cpi	r24, 0x01	; 1
    31ea:	91 05       	cpc	r25, r1
    31ec:	d1 f0       	breq	.+52     	; 0x3222 <MDIO_GetPortValue+0x58>
    31ee:	2b 81       	ldd	r18, Y+3	; 0x03
    31f0:	3c 81       	ldd	r19, Y+4	; 0x04
    31f2:	22 30       	cpi	r18, 0x02	; 2
    31f4:	31 05       	cpc	r19, r1
    31f6:	2c f4       	brge	.+10     	; 0x3202 <MDIO_GetPortValue+0x38>
    31f8:	8b 81       	ldd	r24, Y+3	; 0x03
    31fa:	9c 81       	ldd	r25, Y+4	; 0x04
    31fc:	00 97       	sbiw	r24, 0x00	; 0
    31fe:	61 f0       	breq	.+24     	; 0x3218 <MDIO_GetPortValue+0x4e>
    3200:	1e c0       	rjmp	.+60     	; 0x323e <MDIO_GetPortValue+0x74>
    3202:	2b 81       	ldd	r18, Y+3	; 0x03
    3204:	3c 81       	ldd	r19, Y+4	; 0x04
    3206:	22 30       	cpi	r18, 0x02	; 2
    3208:	31 05       	cpc	r19, r1
    320a:	81 f0       	breq	.+32     	; 0x322c <MDIO_GetPortValue+0x62>
    320c:	8b 81       	ldd	r24, Y+3	; 0x03
    320e:	9c 81       	ldd	r25, Y+4	; 0x04
    3210:	83 30       	cpi	r24, 0x03	; 3
    3212:	91 05       	cpc	r25, r1
    3214:	81 f0       	breq	.+32     	; 0x3236 <MDIO_GetPortValue+0x6c>
    3216:	13 c0       	rjmp	.+38     	; 0x323e <MDIO_GetPortValue+0x74>
	case PORTA:
		value = PINA_reg;
    3218:	e9 e3       	ldi	r30, 0x39	; 57
    321a:	f0 e0       	ldi	r31, 0x00	; 0
    321c:	80 81       	ld	r24, Z
    321e:	89 83       	std	Y+1, r24	; 0x01
    3220:	0e c0       	rjmp	.+28     	; 0x323e <MDIO_GetPortValue+0x74>
		break;
	case PORTB:
		value=PINB_reg;
    3222:	e6 e3       	ldi	r30, 0x36	; 54
    3224:	f0 e0       	ldi	r31, 0x00	; 0
    3226:	80 81       	ld	r24, Z
    3228:	89 83       	std	Y+1, r24	; 0x01
    322a:	09 c0       	rjmp	.+18     	; 0x323e <MDIO_GetPortValue+0x74>
		break;
	case PORTC:
		value=PINC_reg;
    322c:	e3 e3       	ldi	r30, 0x33	; 51
    322e:	f0 e0       	ldi	r31, 0x00	; 0
    3230:	80 81       	ld	r24, Z
    3232:	89 83       	std	Y+1, r24	; 0x01
    3234:	04 c0       	rjmp	.+8      	; 0x323e <MDIO_GetPortValue+0x74>
		break;
	case PORTD:
		value=PIND_reg;
    3236:	e0 e3       	ldi	r30, 0x30	; 48
    3238:	f0 e0       	ldi	r31, 0x00	; 0
    323a:	80 81       	ld	r24, Z
    323c:	89 83       	std	Y+1, r24	; 0x01
		break;
	}
	return value;
    323e:	89 81       	ldd	r24, Y+1	; 0x01

}
    3240:	0f 90       	pop	r0
    3242:	0f 90       	pop	r0
    3244:	0f 90       	pop	r0
    3246:	0f 90       	pop	r0
    3248:	cf 91       	pop	r28
    324a:	df 91       	pop	r29
    324c:	08 95       	ret

0000324e <MDIO_vSetPinDirection>:
 * 	function inputs:	Port number , pin number ,value to be input  or output
 * 	function outputs:	void
 */
/************************************************************************************************************/
void MDIO_vSetPinDirection( u8 copy_u8port,u8 copy_u8pin, u8 copy_u8PinDirection)
{
    324e:	df 93       	push	r29
    3250:	cf 93       	push	r28
    3252:	cd b7       	in	r28, 0x3d	; 61
    3254:	de b7       	in	r29, 0x3e	; 62
    3256:	27 97       	sbiw	r28, 0x07	; 7
    3258:	0f b6       	in	r0, 0x3f	; 63
    325a:	f8 94       	cli
    325c:	de bf       	out	0x3e, r29	; 62
    325e:	0f be       	out	0x3f, r0	; 63
    3260:	cd bf       	out	0x3d, r28	; 61
    3262:	89 83       	std	Y+1, r24	; 0x01
    3264:	6a 83       	std	Y+2, r22	; 0x02
    3266:	4b 83       	std	Y+3, r20	; 0x03

	if (copy_u8PinDirection == DIO_OUTPUT) 
    3268:	8b 81       	ldd	r24, Y+3	; 0x03
    326a:	81 30       	cpi	r24, 0x01	; 1
    326c:	09 f0       	breq	.+2      	; 0x3270 <MDIO_vSetPinDirection+0x22>
    326e:	6f c0       	rjmp	.+222    	; 0x334e <MDIO_vSetPinDirection+0x100>
	{
		switch (copy_u8port) 
    3270:	89 81       	ldd	r24, Y+1	; 0x01
    3272:	28 2f       	mov	r18, r24
    3274:	30 e0       	ldi	r19, 0x00	; 0
    3276:	3f 83       	std	Y+7, r19	; 0x07
    3278:	2e 83       	std	Y+6, r18	; 0x06
    327a:	8e 81       	ldd	r24, Y+6	; 0x06
    327c:	9f 81       	ldd	r25, Y+7	; 0x07
    327e:	81 30       	cpi	r24, 0x01	; 1
    3280:	91 05       	cpc	r25, r1
    3282:	49 f1       	breq	.+82     	; 0x32d6 <MDIO_vSetPinDirection+0x88>
    3284:	2e 81       	ldd	r18, Y+6	; 0x06
    3286:	3f 81       	ldd	r19, Y+7	; 0x07
    3288:	22 30       	cpi	r18, 0x02	; 2
    328a:	31 05       	cpc	r19, r1
    328c:	2c f4       	brge	.+10     	; 0x3298 <MDIO_vSetPinDirection+0x4a>
    328e:	8e 81       	ldd	r24, Y+6	; 0x06
    3290:	9f 81       	ldd	r25, Y+7	; 0x07
    3292:	00 97       	sbiw	r24, 0x00	; 0
    3294:	61 f0       	breq	.+24     	; 0x32ae <MDIO_vSetPinDirection+0x60>
    3296:	d2 c0       	rjmp	.+420    	; 0x343c <MDIO_vSetPinDirection+0x1ee>
    3298:	2e 81       	ldd	r18, Y+6	; 0x06
    329a:	3f 81       	ldd	r19, Y+7	; 0x07
    329c:	22 30       	cpi	r18, 0x02	; 2
    329e:	31 05       	cpc	r19, r1
    32a0:	71 f1       	breq	.+92     	; 0x32fe <MDIO_vSetPinDirection+0xb0>
    32a2:	8e 81       	ldd	r24, Y+6	; 0x06
    32a4:	9f 81       	ldd	r25, Y+7	; 0x07
    32a6:	83 30       	cpi	r24, 0x03	; 3
    32a8:	91 05       	cpc	r25, r1
    32aa:	e9 f1       	breq	.+122    	; 0x3326 <MDIO_vSetPinDirection+0xd8>
    32ac:	c7 c0       	rjmp	.+398    	; 0x343c <MDIO_vSetPinDirection+0x1ee>
		{
		case PORTA:
			SET_BIT(DDRA_reg, copy_u8pin);
    32ae:	aa e3       	ldi	r26, 0x3A	; 58
    32b0:	b0 e0       	ldi	r27, 0x00	; 0
    32b2:	ea e3       	ldi	r30, 0x3A	; 58
    32b4:	f0 e0       	ldi	r31, 0x00	; 0
    32b6:	80 81       	ld	r24, Z
    32b8:	48 2f       	mov	r20, r24
    32ba:	8a 81       	ldd	r24, Y+2	; 0x02
    32bc:	28 2f       	mov	r18, r24
    32be:	30 e0       	ldi	r19, 0x00	; 0
    32c0:	81 e0       	ldi	r24, 0x01	; 1
    32c2:	90 e0       	ldi	r25, 0x00	; 0
    32c4:	02 2e       	mov	r0, r18
    32c6:	02 c0       	rjmp	.+4      	; 0x32cc <MDIO_vSetPinDirection+0x7e>
    32c8:	88 0f       	add	r24, r24
    32ca:	99 1f       	adc	r25, r25
    32cc:	0a 94       	dec	r0
    32ce:	e2 f7       	brpl	.-8      	; 0x32c8 <MDIO_vSetPinDirection+0x7a>
    32d0:	84 2b       	or	r24, r20
    32d2:	8c 93       	st	X, r24
    32d4:	b3 c0       	rjmp	.+358    	; 0x343c <MDIO_vSetPinDirection+0x1ee>
			break;
		case PORTB:
			SET_BIT(DDRB_reg, copy_u8pin);
    32d6:	a7 e3       	ldi	r26, 0x37	; 55
    32d8:	b0 e0       	ldi	r27, 0x00	; 0
    32da:	e7 e3       	ldi	r30, 0x37	; 55
    32dc:	f0 e0       	ldi	r31, 0x00	; 0
    32de:	80 81       	ld	r24, Z
    32e0:	48 2f       	mov	r20, r24
    32e2:	8a 81       	ldd	r24, Y+2	; 0x02
    32e4:	28 2f       	mov	r18, r24
    32e6:	30 e0       	ldi	r19, 0x00	; 0
    32e8:	81 e0       	ldi	r24, 0x01	; 1
    32ea:	90 e0       	ldi	r25, 0x00	; 0
    32ec:	02 2e       	mov	r0, r18
    32ee:	02 c0       	rjmp	.+4      	; 0x32f4 <MDIO_vSetPinDirection+0xa6>
    32f0:	88 0f       	add	r24, r24
    32f2:	99 1f       	adc	r25, r25
    32f4:	0a 94       	dec	r0
    32f6:	e2 f7       	brpl	.-8      	; 0x32f0 <MDIO_vSetPinDirection+0xa2>
    32f8:	84 2b       	or	r24, r20
    32fa:	8c 93       	st	X, r24
    32fc:	9f c0       	rjmp	.+318    	; 0x343c <MDIO_vSetPinDirection+0x1ee>
			break;
		case PORTC:
			SET_BIT(DDRC_reg, copy_u8pin);
    32fe:	a4 e3       	ldi	r26, 0x34	; 52
    3300:	b0 e0       	ldi	r27, 0x00	; 0
    3302:	e4 e3       	ldi	r30, 0x34	; 52
    3304:	f0 e0       	ldi	r31, 0x00	; 0
    3306:	80 81       	ld	r24, Z
    3308:	48 2f       	mov	r20, r24
    330a:	8a 81       	ldd	r24, Y+2	; 0x02
    330c:	28 2f       	mov	r18, r24
    330e:	30 e0       	ldi	r19, 0x00	; 0
    3310:	81 e0       	ldi	r24, 0x01	; 1
    3312:	90 e0       	ldi	r25, 0x00	; 0
    3314:	02 2e       	mov	r0, r18
    3316:	02 c0       	rjmp	.+4      	; 0x331c <MDIO_vSetPinDirection+0xce>
    3318:	88 0f       	add	r24, r24
    331a:	99 1f       	adc	r25, r25
    331c:	0a 94       	dec	r0
    331e:	e2 f7       	brpl	.-8      	; 0x3318 <MDIO_vSetPinDirection+0xca>
    3320:	84 2b       	or	r24, r20
    3322:	8c 93       	st	X, r24
    3324:	8b c0       	rjmp	.+278    	; 0x343c <MDIO_vSetPinDirection+0x1ee>
			break;
		case PORTD:
			SET_BIT(DDRD_reg, copy_u8pin);
    3326:	a1 e3       	ldi	r26, 0x31	; 49
    3328:	b0 e0       	ldi	r27, 0x00	; 0
    332a:	e1 e3       	ldi	r30, 0x31	; 49
    332c:	f0 e0       	ldi	r31, 0x00	; 0
    332e:	80 81       	ld	r24, Z
    3330:	48 2f       	mov	r20, r24
    3332:	8a 81       	ldd	r24, Y+2	; 0x02
    3334:	28 2f       	mov	r18, r24
    3336:	30 e0       	ldi	r19, 0x00	; 0
    3338:	81 e0       	ldi	r24, 0x01	; 1
    333a:	90 e0       	ldi	r25, 0x00	; 0
    333c:	02 2e       	mov	r0, r18
    333e:	02 c0       	rjmp	.+4      	; 0x3344 <MDIO_vSetPinDirection+0xf6>
    3340:	88 0f       	add	r24, r24
    3342:	99 1f       	adc	r25, r25
    3344:	0a 94       	dec	r0
    3346:	e2 f7       	brpl	.-8      	; 0x3340 <MDIO_vSetPinDirection+0xf2>
    3348:	84 2b       	or	r24, r20
    334a:	8c 93       	st	X, r24
    334c:	77 c0       	rjmp	.+238    	; 0x343c <MDIO_vSetPinDirection+0x1ee>
			break;
		}
	}
	else if (copy_u8PinDirection == DIO_INPUT) 
    334e:	8b 81       	ldd	r24, Y+3	; 0x03
    3350:	88 23       	and	r24, r24
    3352:	09 f0       	breq	.+2      	; 0x3356 <MDIO_vSetPinDirection+0x108>
    3354:	73 c0       	rjmp	.+230    	; 0x343c <MDIO_vSetPinDirection+0x1ee>
	{
		switch (copy_u8port) 
    3356:	89 81       	ldd	r24, Y+1	; 0x01
    3358:	28 2f       	mov	r18, r24
    335a:	30 e0       	ldi	r19, 0x00	; 0
    335c:	3d 83       	std	Y+5, r19	; 0x05
    335e:	2c 83       	std	Y+4, r18	; 0x04
    3360:	8c 81       	ldd	r24, Y+4	; 0x04
    3362:	9d 81       	ldd	r25, Y+5	; 0x05
    3364:	81 30       	cpi	r24, 0x01	; 1
    3366:	91 05       	cpc	r25, r1
    3368:	59 f1       	breq	.+86     	; 0x33c0 <MDIO_vSetPinDirection+0x172>
    336a:	2c 81       	ldd	r18, Y+4	; 0x04
    336c:	3d 81       	ldd	r19, Y+5	; 0x05
    336e:	22 30       	cpi	r18, 0x02	; 2
    3370:	31 05       	cpc	r19, r1
    3372:	2c f4       	brge	.+10     	; 0x337e <MDIO_vSetPinDirection+0x130>
    3374:	8c 81       	ldd	r24, Y+4	; 0x04
    3376:	9d 81       	ldd	r25, Y+5	; 0x05
    3378:	00 97       	sbiw	r24, 0x00	; 0
    337a:	69 f0       	breq	.+26     	; 0x3396 <MDIO_vSetPinDirection+0x148>
    337c:	5f c0       	rjmp	.+190    	; 0x343c <MDIO_vSetPinDirection+0x1ee>
    337e:	2c 81       	ldd	r18, Y+4	; 0x04
    3380:	3d 81       	ldd	r19, Y+5	; 0x05
    3382:	22 30       	cpi	r18, 0x02	; 2
    3384:	31 05       	cpc	r19, r1
    3386:	89 f1       	breq	.+98     	; 0x33ea <MDIO_vSetPinDirection+0x19c>
    3388:	8c 81       	ldd	r24, Y+4	; 0x04
    338a:	9d 81       	ldd	r25, Y+5	; 0x05
    338c:	83 30       	cpi	r24, 0x03	; 3
    338e:	91 05       	cpc	r25, r1
    3390:	09 f4       	brne	.+2      	; 0x3394 <MDIO_vSetPinDirection+0x146>
    3392:	40 c0       	rjmp	.+128    	; 0x3414 <MDIO_vSetPinDirection+0x1c6>
    3394:	53 c0       	rjmp	.+166    	; 0x343c <MDIO_vSetPinDirection+0x1ee>
		{
		case PORTA:
			CLR_BIT(DDRA_reg, copy_u8pin);
    3396:	aa e3       	ldi	r26, 0x3A	; 58
    3398:	b0 e0       	ldi	r27, 0x00	; 0
    339a:	ea e3       	ldi	r30, 0x3A	; 58
    339c:	f0 e0       	ldi	r31, 0x00	; 0
    339e:	80 81       	ld	r24, Z
    33a0:	48 2f       	mov	r20, r24
    33a2:	8a 81       	ldd	r24, Y+2	; 0x02
    33a4:	28 2f       	mov	r18, r24
    33a6:	30 e0       	ldi	r19, 0x00	; 0
    33a8:	81 e0       	ldi	r24, 0x01	; 1
    33aa:	90 e0       	ldi	r25, 0x00	; 0
    33ac:	02 2e       	mov	r0, r18
    33ae:	02 c0       	rjmp	.+4      	; 0x33b4 <MDIO_vSetPinDirection+0x166>
    33b0:	88 0f       	add	r24, r24
    33b2:	99 1f       	adc	r25, r25
    33b4:	0a 94       	dec	r0
    33b6:	e2 f7       	brpl	.-8      	; 0x33b0 <MDIO_vSetPinDirection+0x162>
    33b8:	80 95       	com	r24
    33ba:	84 23       	and	r24, r20
    33bc:	8c 93       	st	X, r24
    33be:	3e c0       	rjmp	.+124    	; 0x343c <MDIO_vSetPinDirection+0x1ee>
			break;
		case PORTB:
			CLR_BIT(DDRB_reg, copy_u8pin);
    33c0:	a7 e3       	ldi	r26, 0x37	; 55
    33c2:	b0 e0       	ldi	r27, 0x00	; 0
    33c4:	e7 e3       	ldi	r30, 0x37	; 55
    33c6:	f0 e0       	ldi	r31, 0x00	; 0
    33c8:	80 81       	ld	r24, Z
    33ca:	48 2f       	mov	r20, r24
    33cc:	8a 81       	ldd	r24, Y+2	; 0x02
    33ce:	28 2f       	mov	r18, r24
    33d0:	30 e0       	ldi	r19, 0x00	; 0
    33d2:	81 e0       	ldi	r24, 0x01	; 1
    33d4:	90 e0       	ldi	r25, 0x00	; 0
    33d6:	02 2e       	mov	r0, r18
    33d8:	02 c0       	rjmp	.+4      	; 0x33de <MDIO_vSetPinDirection+0x190>
    33da:	88 0f       	add	r24, r24
    33dc:	99 1f       	adc	r25, r25
    33de:	0a 94       	dec	r0
    33e0:	e2 f7       	brpl	.-8      	; 0x33da <MDIO_vSetPinDirection+0x18c>
    33e2:	80 95       	com	r24
    33e4:	84 23       	and	r24, r20
    33e6:	8c 93       	st	X, r24
    33e8:	29 c0       	rjmp	.+82     	; 0x343c <MDIO_vSetPinDirection+0x1ee>
			break;
		case PORTC:
			CLR_BIT(DDRC_reg, copy_u8pin);
    33ea:	a4 e3       	ldi	r26, 0x34	; 52
    33ec:	b0 e0       	ldi	r27, 0x00	; 0
    33ee:	e4 e3       	ldi	r30, 0x34	; 52
    33f0:	f0 e0       	ldi	r31, 0x00	; 0
    33f2:	80 81       	ld	r24, Z
    33f4:	48 2f       	mov	r20, r24
    33f6:	8a 81       	ldd	r24, Y+2	; 0x02
    33f8:	28 2f       	mov	r18, r24
    33fa:	30 e0       	ldi	r19, 0x00	; 0
    33fc:	81 e0       	ldi	r24, 0x01	; 1
    33fe:	90 e0       	ldi	r25, 0x00	; 0
    3400:	02 2e       	mov	r0, r18
    3402:	02 c0       	rjmp	.+4      	; 0x3408 <MDIO_vSetPinDirection+0x1ba>
    3404:	88 0f       	add	r24, r24
    3406:	99 1f       	adc	r25, r25
    3408:	0a 94       	dec	r0
    340a:	e2 f7       	brpl	.-8      	; 0x3404 <MDIO_vSetPinDirection+0x1b6>
    340c:	80 95       	com	r24
    340e:	84 23       	and	r24, r20
    3410:	8c 93       	st	X, r24
    3412:	14 c0       	rjmp	.+40     	; 0x343c <MDIO_vSetPinDirection+0x1ee>
			break;
		case PORTD:
			CLR_BIT(DDRD_reg, copy_u8pin);
    3414:	a1 e3       	ldi	r26, 0x31	; 49
    3416:	b0 e0       	ldi	r27, 0x00	; 0
    3418:	e1 e3       	ldi	r30, 0x31	; 49
    341a:	f0 e0       	ldi	r31, 0x00	; 0
    341c:	80 81       	ld	r24, Z
    341e:	48 2f       	mov	r20, r24
    3420:	8a 81       	ldd	r24, Y+2	; 0x02
    3422:	28 2f       	mov	r18, r24
    3424:	30 e0       	ldi	r19, 0x00	; 0
    3426:	81 e0       	ldi	r24, 0x01	; 1
    3428:	90 e0       	ldi	r25, 0x00	; 0
    342a:	02 2e       	mov	r0, r18
    342c:	02 c0       	rjmp	.+4      	; 0x3432 <MDIO_vSetPinDirection+0x1e4>
    342e:	88 0f       	add	r24, r24
    3430:	99 1f       	adc	r25, r25
    3432:	0a 94       	dec	r0
    3434:	e2 f7       	brpl	.-8      	; 0x342e <MDIO_vSetPinDirection+0x1e0>
    3436:	80 95       	com	r24
    3438:	84 23       	and	r24, r20
    343a:	8c 93       	st	X, r24
			break;
		}
	}
}
    343c:	27 96       	adiw	r28, 0x07	; 7
    343e:	0f b6       	in	r0, 0x3f	; 63
    3440:	f8 94       	cli
    3442:	de bf       	out	0x3e, r29	; 62
    3444:	0f be       	out	0x3f, r0	; 63
    3446:	cd bf       	out	0x3d, r28	; 61
    3448:	cf 91       	pop	r28
    344a:	df 91       	pop	r29
    344c:	08 95       	ret

0000344e <MDIO_vSetPinValue>:
 * 	function inputs:	Port number , pin number, value to be high or low
 * 	function outputs:	void
 */
/************************************************************************************************************/
void MDIO_vSetPinValue( u8 copy_u8port,u8 copy_u8pin, u8 copy_u8PinValue)
{
    344e:	df 93       	push	r29
    3450:	cf 93       	push	r28
    3452:	cd b7       	in	r28, 0x3d	; 61
    3454:	de b7       	in	r29, 0x3e	; 62
    3456:	27 97       	sbiw	r28, 0x07	; 7
    3458:	0f b6       	in	r0, 0x3f	; 63
    345a:	f8 94       	cli
    345c:	de bf       	out	0x3e, r29	; 62
    345e:	0f be       	out	0x3f, r0	; 63
    3460:	cd bf       	out	0x3d, r28	; 61
    3462:	89 83       	std	Y+1, r24	; 0x01
    3464:	6a 83       	std	Y+2, r22	; 0x02
    3466:	4b 83       	std	Y+3, r20	; 0x03

	if (copy_u8PinValue == DIO_HIGH) 
    3468:	8b 81       	ldd	r24, Y+3	; 0x03
    346a:	81 30       	cpi	r24, 0x01	; 1
    346c:	09 f0       	breq	.+2      	; 0x3470 <MDIO_vSetPinValue+0x22>
    346e:	6f c0       	rjmp	.+222    	; 0x354e <MDIO_vSetPinValue+0x100>
	{
		switch (copy_u8port) 
    3470:	89 81       	ldd	r24, Y+1	; 0x01
    3472:	28 2f       	mov	r18, r24
    3474:	30 e0       	ldi	r19, 0x00	; 0
    3476:	3f 83       	std	Y+7, r19	; 0x07
    3478:	2e 83       	std	Y+6, r18	; 0x06
    347a:	8e 81       	ldd	r24, Y+6	; 0x06
    347c:	9f 81       	ldd	r25, Y+7	; 0x07
    347e:	81 30       	cpi	r24, 0x01	; 1
    3480:	91 05       	cpc	r25, r1
    3482:	49 f1       	breq	.+82     	; 0x34d6 <MDIO_vSetPinValue+0x88>
    3484:	2e 81       	ldd	r18, Y+6	; 0x06
    3486:	3f 81       	ldd	r19, Y+7	; 0x07
    3488:	22 30       	cpi	r18, 0x02	; 2
    348a:	31 05       	cpc	r19, r1
    348c:	2c f4       	brge	.+10     	; 0x3498 <MDIO_vSetPinValue+0x4a>
    348e:	8e 81       	ldd	r24, Y+6	; 0x06
    3490:	9f 81       	ldd	r25, Y+7	; 0x07
    3492:	00 97       	sbiw	r24, 0x00	; 0
    3494:	61 f0       	breq	.+24     	; 0x34ae <MDIO_vSetPinValue+0x60>
    3496:	d2 c0       	rjmp	.+420    	; 0x363c <MDIO_vSetPinValue+0x1ee>
    3498:	2e 81       	ldd	r18, Y+6	; 0x06
    349a:	3f 81       	ldd	r19, Y+7	; 0x07
    349c:	22 30       	cpi	r18, 0x02	; 2
    349e:	31 05       	cpc	r19, r1
    34a0:	71 f1       	breq	.+92     	; 0x34fe <MDIO_vSetPinValue+0xb0>
    34a2:	8e 81       	ldd	r24, Y+6	; 0x06
    34a4:	9f 81       	ldd	r25, Y+7	; 0x07
    34a6:	83 30       	cpi	r24, 0x03	; 3
    34a8:	91 05       	cpc	r25, r1
    34aa:	e9 f1       	breq	.+122    	; 0x3526 <MDIO_vSetPinValue+0xd8>
    34ac:	c7 c0       	rjmp	.+398    	; 0x363c <MDIO_vSetPinValue+0x1ee>
		{
		case PORTA:
			SET_BIT(PORTA_reg, copy_u8pin);
    34ae:	ab e3       	ldi	r26, 0x3B	; 59
    34b0:	b0 e0       	ldi	r27, 0x00	; 0
    34b2:	eb e3       	ldi	r30, 0x3B	; 59
    34b4:	f0 e0       	ldi	r31, 0x00	; 0
    34b6:	80 81       	ld	r24, Z
    34b8:	48 2f       	mov	r20, r24
    34ba:	8a 81       	ldd	r24, Y+2	; 0x02
    34bc:	28 2f       	mov	r18, r24
    34be:	30 e0       	ldi	r19, 0x00	; 0
    34c0:	81 e0       	ldi	r24, 0x01	; 1
    34c2:	90 e0       	ldi	r25, 0x00	; 0
    34c4:	02 2e       	mov	r0, r18
    34c6:	02 c0       	rjmp	.+4      	; 0x34cc <MDIO_vSetPinValue+0x7e>
    34c8:	88 0f       	add	r24, r24
    34ca:	99 1f       	adc	r25, r25
    34cc:	0a 94       	dec	r0
    34ce:	e2 f7       	brpl	.-8      	; 0x34c8 <MDIO_vSetPinValue+0x7a>
    34d0:	84 2b       	or	r24, r20
    34d2:	8c 93       	st	X, r24
    34d4:	b3 c0       	rjmp	.+358    	; 0x363c <MDIO_vSetPinValue+0x1ee>
			break;
		case PORTB:
			SET_BIT(PORTB_reg, copy_u8pin);
    34d6:	a8 e3       	ldi	r26, 0x38	; 56
    34d8:	b0 e0       	ldi	r27, 0x00	; 0
    34da:	e8 e3       	ldi	r30, 0x38	; 56
    34dc:	f0 e0       	ldi	r31, 0x00	; 0
    34de:	80 81       	ld	r24, Z
    34e0:	48 2f       	mov	r20, r24
    34e2:	8a 81       	ldd	r24, Y+2	; 0x02
    34e4:	28 2f       	mov	r18, r24
    34e6:	30 e0       	ldi	r19, 0x00	; 0
    34e8:	81 e0       	ldi	r24, 0x01	; 1
    34ea:	90 e0       	ldi	r25, 0x00	; 0
    34ec:	02 2e       	mov	r0, r18
    34ee:	02 c0       	rjmp	.+4      	; 0x34f4 <MDIO_vSetPinValue+0xa6>
    34f0:	88 0f       	add	r24, r24
    34f2:	99 1f       	adc	r25, r25
    34f4:	0a 94       	dec	r0
    34f6:	e2 f7       	brpl	.-8      	; 0x34f0 <MDIO_vSetPinValue+0xa2>
    34f8:	84 2b       	or	r24, r20
    34fa:	8c 93       	st	X, r24
    34fc:	9f c0       	rjmp	.+318    	; 0x363c <MDIO_vSetPinValue+0x1ee>
			break;
		case PORTC:
			SET_BIT(PORTC_reg, copy_u8pin);
    34fe:	a5 e3       	ldi	r26, 0x35	; 53
    3500:	b0 e0       	ldi	r27, 0x00	; 0
    3502:	e5 e3       	ldi	r30, 0x35	; 53
    3504:	f0 e0       	ldi	r31, 0x00	; 0
    3506:	80 81       	ld	r24, Z
    3508:	48 2f       	mov	r20, r24
    350a:	8a 81       	ldd	r24, Y+2	; 0x02
    350c:	28 2f       	mov	r18, r24
    350e:	30 e0       	ldi	r19, 0x00	; 0
    3510:	81 e0       	ldi	r24, 0x01	; 1
    3512:	90 e0       	ldi	r25, 0x00	; 0
    3514:	02 2e       	mov	r0, r18
    3516:	02 c0       	rjmp	.+4      	; 0x351c <MDIO_vSetPinValue+0xce>
    3518:	88 0f       	add	r24, r24
    351a:	99 1f       	adc	r25, r25
    351c:	0a 94       	dec	r0
    351e:	e2 f7       	brpl	.-8      	; 0x3518 <MDIO_vSetPinValue+0xca>
    3520:	84 2b       	or	r24, r20
    3522:	8c 93       	st	X, r24
    3524:	8b c0       	rjmp	.+278    	; 0x363c <MDIO_vSetPinValue+0x1ee>
			break;
		case PORTD:
			SET_BIT(PORTD_reg, copy_u8pin);
    3526:	a2 e3       	ldi	r26, 0x32	; 50
    3528:	b0 e0       	ldi	r27, 0x00	; 0
    352a:	e2 e3       	ldi	r30, 0x32	; 50
    352c:	f0 e0       	ldi	r31, 0x00	; 0
    352e:	80 81       	ld	r24, Z
    3530:	48 2f       	mov	r20, r24
    3532:	8a 81       	ldd	r24, Y+2	; 0x02
    3534:	28 2f       	mov	r18, r24
    3536:	30 e0       	ldi	r19, 0x00	; 0
    3538:	81 e0       	ldi	r24, 0x01	; 1
    353a:	90 e0       	ldi	r25, 0x00	; 0
    353c:	02 2e       	mov	r0, r18
    353e:	02 c0       	rjmp	.+4      	; 0x3544 <MDIO_vSetPinValue+0xf6>
    3540:	88 0f       	add	r24, r24
    3542:	99 1f       	adc	r25, r25
    3544:	0a 94       	dec	r0
    3546:	e2 f7       	brpl	.-8      	; 0x3540 <MDIO_vSetPinValue+0xf2>
    3548:	84 2b       	or	r24, r20
    354a:	8c 93       	st	X, r24
    354c:	77 c0       	rjmp	.+238    	; 0x363c <MDIO_vSetPinValue+0x1ee>
			break;
		}
	}
	else if (copy_u8PinValue == DIO_LOW) 
    354e:	8b 81       	ldd	r24, Y+3	; 0x03
    3550:	88 23       	and	r24, r24
    3552:	09 f0       	breq	.+2      	; 0x3556 <MDIO_vSetPinValue+0x108>
    3554:	73 c0       	rjmp	.+230    	; 0x363c <MDIO_vSetPinValue+0x1ee>
	{
		switch (copy_u8port) 
    3556:	89 81       	ldd	r24, Y+1	; 0x01
    3558:	28 2f       	mov	r18, r24
    355a:	30 e0       	ldi	r19, 0x00	; 0
    355c:	3d 83       	std	Y+5, r19	; 0x05
    355e:	2c 83       	std	Y+4, r18	; 0x04
    3560:	8c 81       	ldd	r24, Y+4	; 0x04
    3562:	9d 81       	ldd	r25, Y+5	; 0x05
    3564:	81 30       	cpi	r24, 0x01	; 1
    3566:	91 05       	cpc	r25, r1
    3568:	59 f1       	breq	.+86     	; 0x35c0 <MDIO_vSetPinValue+0x172>
    356a:	2c 81       	ldd	r18, Y+4	; 0x04
    356c:	3d 81       	ldd	r19, Y+5	; 0x05
    356e:	22 30       	cpi	r18, 0x02	; 2
    3570:	31 05       	cpc	r19, r1
    3572:	2c f4       	brge	.+10     	; 0x357e <MDIO_vSetPinValue+0x130>
    3574:	8c 81       	ldd	r24, Y+4	; 0x04
    3576:	9d 81       	ldd	r25, Y+5	; 0x05
    3578:	00 97       	sbiw	r24, 0x00	; 0
    357a:	69 f0       	breq	.+26     	; 0x3596 <MDIO_vSetPinValue+0x148>
    357c:	5f c0       	rjmp	.+190    	; 0x363c <MDIO_vSetPinValue+0x1ee>
    357e:	2c 81       	ldd	r18, Y+4	; 0x04
    3580:	3d 81       	ldd	r19, Y+5	; 0x05
    3582:	22 30       	cpi	r18, 0x02	; 2
    3584:	31 05       	cpc	r19, r1
    3586:	89 f1       	breq	.+98     	; 0x35ea <MDIO_vSetPinValue+0x19c>
    3588:	8c 81       	ldd	r24, Y+4	; 0x04
    358a:	9d 81       	ldd	r25, Y+5	; 0x05
    358c:	83 30       	cpi	r24, 0x03	; 3
    358e:	91 05       	cpc	r25, r1
    3590:	09 f4       	brne	.+2      	; 0x3594 <MDIO_vSetPinValue+0x146>
    3592:	40 c0       	rjmp	.+128    	; 0x3614 <MDIO_vSetPinValue+0x1c6>
    3594:	53 c0       	rjmp	.+166    	; 0x363c <MDIO_vSetPinValue+0x1ee>
		{
		case PORTA:
			CLR_BIT(PORTA_reg, copy_u8pin);
    3596:	ab e3       	ldi	r26, 0x3B	; 59
    3598:	b0 e0       	ldi	r27, 0x00	; 0
    359a:	eb e3       	ldi	r30, 0x3B	; 59
    359c:	f0 e0       	ldi	r31, 0x00	; 0
    359e:	80 81       	ld	r24, Z
    35a0:	48 2f       	mov	r20, r24
    35a2:	8a 81       	ldd	r24, Y+2	; 0x02
    35a4:	28 2f       	mov	r18, r24
    35a6:	30 e0       	ldi	r19, 0x00	; 0
    35a8:	81 e0       	ldi	r24, 0x01	; 1
    35aa:	90 e0       	ldi	r25, 0x00	; 0
    35ac:	02 2e       	mov	r0, r18
    35ae:	02 c0       	rjmp	.+4      	; 0x35b4 <MDIO_vSetPinValue+0x166>
    35b0:	88 0f       	add	r24, r24
    35b2:	99 1f       	adc	r25, r25
    35b4:	0a 94       	dec	r0
    35b6:	e2 f7       	brpl	.-8      	; 0x35b0 <MDIO_vSetPinValue+0x162>
    35b8:	80 95       	com	r24
    35ba:	84 23       	and	r24, r20
    35bc:	8c 93       	st	X, r24
    35be:	3e c0       	rjmp	.+124    	; 0x363c <MDIO_vSetPinValue+0x1ee>
			break;
		case PORTB:
			CLR_BIT(PORTB_reg, copy_u8pin);
    35c0:	a8 e3       	ldi	r26, 0x38	; 56
    35c2:	b0 e0       	ldi	r27, 0x00	; 0
    35c4:	e8 e3       	ldi	r30, 0x38	; 56
    35c6:	f0 e0       	ldi	r31, 0x00	; 0
    35c8:	80 81       	ld	r24, Z
    35ca:	48 2f       	mov	r20, r24
    35cc:	8a 81       	ldd	r24, Y+2	; 0x02
    35ce:	28 2f       	mov	r18, r24
    35d0:	30 e0       	ldi	r19, 0x00	; 0
    35d2:	81 e0       	ldi	r24, 0x01	; 1
    35d4:	90 e0       	ldi	r25, 0x00	; 0
    35d6:	02 2e       	mov	r0, r18
    35d8:	02 c0       	rjmp	.+4      	; 0x35de <MDIO_vSetPinValue+0x190>
    35da:	88 0f       	add	r24, r24
    35dc:	99 1f       	adc	r25, r25
    35de:	0a 94       	dec	r0
    35e0:	e2 f7       	brpl	.-8      	; 0x35da <MDIO_vSetPinValue+0x18c>
    35e2:	80 95       	com	r24
    35e4:	84 23       	and	r24, r20
    35e6:	8c 93       	st	X, r24
    35e8:	29 c0       	rjmp	.+82     	; 0x363c <MDIO_vSetPinValue+0x1ee>
			break;
		case PORTC:
			CLR_BIT(PORTC_reg, copy_u8pin);
    35ea:	a5 e3       	ldi	r26, 0x35	; 53
    35ec:	b0 e0       	ldi	r27, 0x00	; 0
    35ee:	e5 e3       	ldi	r30, 0x35	; 53
    35f0:	f0 e0       	ldi	r31, 0x00	; 0
    35f2:	80 81       	ld	r24, Z
    35f4:	48 2f       	mov	r20, r24
    35f6:	8a 81       	ldd	r24, Y+2	; 0x02
    35f8:	28 2f       	mov	r18, r24
    35fa:	30 e0       	ldi	r19, 0x00	; 0
    35fc:	81 e0       	ldi	r24, 0x01	; 1
    35fe:	90 e0       	ldi	r25, 0x00	; 0
    3600:	02 2e       	mov	r0, r18
    3602:	02 c0       	rjmp	.+4      	; 0x3608 <MDIO_vSetPinValue+0x1ba>
    3604:	88 0f       	add	r24, r24
    3606:	99 1f       	adc	r25, r25
    3608:	0a 94       	dec	r0
    360a:	e2 f7       	brpl	.-8      	; 0x3604 <MDIO_vSetPinValue+0x1b6>
    360c:	80 95       	com	r24
    360e:	84 23       	and	r24, r20
    3610:	8c 93       	st	X, r24
    3612:	14 c0       	rjmp	.+40     	; 0x363c <MDIO_vSetPinValue+0x1ee>
			break;
		case PORTD:
			CLR_BIT(PORTD_reg, copy_u8pin);
    3614:	a2 e3       	ldi	r26, 0x32	; 50
    3616:	b0 e0       	ldi	r27, 0x00	; 0
    3618:	e2 e3       	ldi	r30, 0x32	; 50
    361a:	f0 e0       	ldi	r31, 0x00	; 0
    361c:	80 81       	ld	r24, Z
    361e:	48 2f       	mov	r20, r24
    3620:	8a 81       	ldd	r24, Y+2	; 0x02
    3622:	28 2f       	mov	r18, r24
    3624:	30 e0       	ldi	r19, 0x00	; 0
    3626:	81 e0       	ldi	r24, 0x01	; 1
    3628:	90 e0       	ldi	r25, 0x00	; 0
    362a:	02 2e       	mov	r0, r18
    362c:	02 c0       	rjmp	.+4      	; 0x3632 <MDIO_vSetPinValue+0x1e4>
    362e:	88 0f       	add	r24, r24
    3630:	99 1f       	adc	r25, r25
    3632:	0a 94       	dec	r0
    3634:	e2 f7       	brpl	.-8      	; 0x362e <MDIO_vSetPinValue+0x1e0>
    3636:	80 95       	com	r24
    3638:	84 23       	and	r24, r20
    363a:	8c 93       	st	X, r24
			break;
		}
	}
}
    363c:	27 96       	adiw	r28, 0x07	; 7
    363e:	0f b6       	in	r0, 0x3f	; 63
    3640:	f8 94       	cli
    3642:	de bf       	out	0x3e, r29	; 62
    3644:	0f be       	out	0x3f, r0	; 63
    3646:	cd bf       	out	0x3d, r28	; 61
    3648:	cf 91       	pop	r28
    364a:	df 91       	pop	r29
    364c:	08 95       	ret

0000364e <MDIO_GetPinValue>:
/*	function name:		void GET_PIN_VALUE( u8 PORT,u8 PIN_ID)
 * 	function inputs:	Port number, Pin number
 * 	function outputs:	value is is high or low
 */
/************************************************************************************************************/
u8 MDIO_GetPinValue( u8 copy_u8port,u8 copy_u8pin){
    364e:	df 93       	push	r29
    3650:	cf 93       	push	r28
    3652:	00 d0       	rcall	.+0      	; 0x3654 <MDIO_GetPinValue+0x6>
    3654:	00 d0       	rcall	.+0      	; 0x3656 <MDIO_GetPinValue+0x8>
    3656:	0f 92       	push	r0
    3658:	cd b7       	in	r28, 0x3d	; 61
    365a:	de b7       	in	r29, 0x3e	; 62
    365c:	8a 83       	std	Y+2, r24	; 0x02
    365e:	6b 83       	std	Y+3, r22	; 0x03
	u8 value=0;
    3660:	19 82       	std	Y+1, r1	; 0x01
	switch (copy_u8port) {
    3662:	8a 81       	ldd	r24, Y+2	; 0x02
    3664:	28 2f       	mov	r18, r24
    3666:	30 e0       	ldi	r19, 0x00	; 0
    3668:	3d 83       	std	Y+5, r19	; 0x05
    366a:	2c 83       	std	Y+4, r18	; 0x04
    366c:	4c 81       	ldd	r20, Y+4	; 0x04
    366e:	5d 81       	ldd	r21, Y+5	; 0x05
    3670:	41 30       	cpi	r20, 0x01	; 1
    3672:	51 05       	cpc	r21, r1
    3674:	41 f1       	breq	.+80     	; 0x36c6 <MDIO_GetPinValue+0x78>
    3676:	8c 81       	ldd	r24, Y+4	; 0x04
    3678:	9d 81       	ldd	r25, Y+5	; 0x05
    367a:	82 30       	cpi	r24, 0x02	; 2
    367c:	91 05       	cpc	r25, r1
    367e:	34 f4       	brge	.+12     	; 0x368c <MDIO_GetPinValue+0x3e>
    3680:	2c 81       	ldd	r18, Y+4	; 0x04
    3682:	3d 81       	ldd	r19, Y+5	; 0x05
    3684:	21 15       	cp	r18, r1
    3686:	31 05       	cpc	r19, r1
    3688:	61 f0       	breq	.+24     	; 0x36a2 <MDIO_GetPinValue+0x54>
    368a:	52 c0       	rjmp	.+164    	; 0x3730 <MDIO_GetPinValue+0xe2>
    368c:	4c 81       	ldd	r20, Y+4	; 0x04
    368e:	5d 81       	ldd	r21, Y+5	; 0x05
    3690:	42 30       	cpi	r20, 0x02	; 2
    3692:	51 05       	cpc	r21, r1
    3694:	51 f1       	breq	.+84     	; 0x36ea <MDIO_GetPinValue+0x9c>
    3696:	8c 81       	ldd	r24, Y+4	; 0x04
    3698:	9d 81       	ldd	r25, Y+5	; 0x05
    369a:	83 30       	cpi	r24, 0x03	; 3
    369c:	91 05       	cpc	r25, r1
    369e:	b9 f1       	breq	.+110    	; 0x370e <MDIO_GetPinValue+0xc0>
    36a0:	47 c0       	rjmp	.+142    	; 0x3730 <MDIO_GetPinValue+0xe2>
	case PORTA:
		value = GET_BIT(PINA_reg,copy_u8pin);
    36a2:	e9 e3       	ldi	r30, 0x39	; 57
    36a4:	f0 e0       	ldi	r31, 0x00	; 0
    36a6:	80 81       	ld	r24, Z
    36a8:	28 2f       	mov	r18, r24
    36aa:	30 e0       	ldi	r19, 0x00	; 0
    36ac:	8b 81       	ldd	r24, Y+3	; 0x03
    36ae:	88 2f       	mov	r24, r24
    36b0:	90 e0       	ldi	r25, 0x00	; 0
    36b2:	a9 01       	movw	r20, r18
    36b4:	02 c0       	rjmp	.+4      	; 0x36ba <MDIO_GetPinValue+0x6c>
    36b6:	55 95       	asr	r21
    36b8:	47 95       	ror	r20
    36ba:	8a 95       	dec	r24
    36bc:	e2 f7       	brpl	.-8      	; 0x36b6 <MDIO_GetPinValue+0x68>
    36be:	ca 01       	movw	r24, r20
    36c0:	81 70       	andi	r24, 0x01	; 1
    36c2:	89 83       	std	Y+1, r24	; 0x01
    36c4:	35 c0       	rjmp	.+106    	; 0x3730 <MDIO_GetPinValue+0xe2>
		break;
	case PORTB:
		value = GET_BIT(PINB_reg,copy_u8pin);
    36c6:	e6 e3       	ldi	r30, 0x36	; 54
    36c8:	f0 e0       	ldi	r31, 0x00	; 0
    36ca:	80 81       	ld	r24, Z
    36cc:	28 2f       	mov	r18, r24
    36ce:	30 e0       	ldi	r19, 0x00	; 0
    36d0:	8b 81       	ldd	r24, Y+3	; 0x03
    36d2:	88 2f       	mov	r24, r24
    36d4:	90 e0       	ldi	r25, 0x00	; 0
    36d6:	a9 01       	movw	r20, r18
    36d8:	02 c0       	rjmp	.+4      	; 0x36de <MDIO_GetPinValue+0x90>
    36da:	55 95       	asr	r21
    36dc:	47 95       	ror	r20
    36de:	8a 95       	dec	r24
    36e0:	e2 f7       	brpl	.-8      	; 0x36da <MDIO_GetPinValue+0x8c>
    36e2:	ca 01       	movw	r24, r20
    36e4:	81 70       	andi	r24, 0x01	; 1
    36e6:	89 83       	std	Y+1, r24	; 0x01
    36e8:	23 c0       	rjmp	.+70     	; 0x3730 <MDIO_GetPinValue+0xe2>
		break;
	case PORTC:
		value = GET_BIT(PINC_reg,copy_u8pin);
    36ea:	e3 e3       	ldi	r30, 0x33	; 51
    36ec:	f0 e0       	ldi	r31, 0x00	; 0
    36ee:	80 81       	ld	r24, Z
    36f0:	28 2f       	mov	r18, r24
    36f2:	30 e0       	ldi	r19, 0x00	; 0
    36f4:	8b 81       	ldd	r24, Y+3	; 0x03
    36f6:	88 2f       	mov	r24, r24
    36f8:	90 e0       	ldi	r25, 0x00	; 0
    36fa:	a9 01       	movw	r20, r18
    36fc:	02 c0       	rjmp	.+4      	; 0x3702 <MDIO_GetPinValue+0xb4>
    36fe:	55 95       	asr	r21
    3700:	47 95       	ror	r20
    3702:	8a 95       	dec	r24
    3704:	e2 f7       	brpl	.-8      	; 0x36fe <MDIO_GetPinValue+0xb0>
    3706:	ca 01       	movw	r24, r20
    3708:	81 70       	andi	r24, 0x01	; 1
    370a:	89 83       	std	Y+1, r24	; 0x01
    370c:	11 c0       	rjmp	.+34     	; 0x3730 <MDIO_GetPinValue+0xe2>
		break;
	case PORTD:
		value = GET_BIT(PIND_reg,copy_u8pin);
    370e:	e0 e3       	ldi	r30, 0x30	; 48
    3710:	f0 e0       	ldi	r31, 0x00	; 0
    3712:	80 81       	ld	r24, Z
    3714:	28 2f       	mov	r18, r24
    3716:	30 e0       	ldi	r19, 0x00	; 0
    3718:	8b 81       	ldd	r24, Y+3	; 0x03
    371a:	88 2f       	mov	r24, r24
    371c:	90 e0       	ldi	r25, 0x00	; 0
    371e:	a9 01       	movw	r20, r18
    3720:	02 c0       	rjmp	.+4      	; 0x3726 <MDIO_GetPinValue+0xd8>
    3722:	55 95       	asr	r21
    3724:	47 95       	ror	r20
    3726:	8a 95       	dec	r24
    3728:	e2 f7       	brpl	.-8      	; 0x3722 <MDIO_GetPinValue+0xd4>
    372a:	ca 01       	movw	r24, r20
    372c:	81 70       	andi	r24, 0x01	; 1
    372e:	89 83       	std	Y+1, r24	; 0x01
		break;
	}
	return value;
    3730:	89 81       	ldd	r24, Y+1	; 0x01

}
    3732:	0f 90       	pop	r0
    3734:	0f 90       	pop	r0
    3736:	0f 90       	pop	r0
    3738:	0f 90       	pop	r0
    373a:	0f 90       	pop	r0
    373c:	cf 91       	pop	r28
    373e:	df 91       	pop	r29
    3740:	08 95       	ret

00003742 <main>:
#include "stepper_motor/STEPPER_CONFIG.h"

#define dc 0
#define d 0
int main()
{
    3742:	df 93       	push	r29
    3744:	cf 93       	push	r28
    3746:	00 d0       	rcall	.+0      	; 0x3748 <main+0x6>
    3748:	cd b7       	in	r28, 0x3d	; 61
    374a:	de b7       	in	r29, 0x3e	; 62

}

#endif

HStepper_init(0xff);
    374c:	8f ef       	ldi	r24, 0xFF	; 255
    374e:	0e 94 63 06 	call	0xcc6	; 0xcc6 <HStepper_init>

	while (1)
	{

		/* Rotate anti clock wise for 5 seconds */
		for (i= 0;  i<Full_haptic_angle;  i++)
    3752:	1a 82       	std	Y+2, r1	; 0x02
    3754:	19 82       	std	Y+1, r1	; 0x01
    3756:	09 c0       	rjmp	.+18     	; 0x376a <main+0x28>
		{
			HStepper_DIR_MODE(Anti_ClockWise,Full_step);
    3758:	82 e0       	ldi	r24, 0x02	; 2
    375a:	61 e0       	ldi	r22, 0x01	; 1
    375c:	0e 94 71 06 	call	0xce2	; 0xce2 <HStepper_DIR_MODE>

	while (1)
	{

		/* Rotate anti clock wise for 5 seconds */
		for (i= 0;  i<Full_haptic_angle;  i++)
    3760:	89 81       	ldd	r24, Y+1	; 0x01
    3762:	9a 81       	ldd	r25, Y+2	; 0x02
    3764:	01 96       	adiw	r24, 0x01	; 1
    3766:	9a 83       	std	Y+2, r25	; 0x02
    3768:	89 83       	std	Y+1, r24	; 0x01
    376a:	89 81       	ldd	r24, Y+1	; 0x01
    376c:	9a 81       	ldd	r25, Y+2	; 0x02
    376e:	cc 01       	movw	r24, r24
    3770:	a0 e0       	ldi	r26, 0x00	; 0
    3772:	b0 e0       	ldi	r27, 0x00	; 0
    3774:	bc 01       	movw	r22, r24
    3776:	cd 01       	movw	r24, r26
    3778:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    377c:	dc 01       	movw	r26, r24
    377e:	cb 01       	movw	r24, r22
    3780:	bc 01       	movw	r22, r24
    3782:	cd 01       	movw	r24, r26
    3784:	20 e0       	ldi	r18, 0x00	; 0
    3786:	30 e0       	ldi	r19, 0x00	; 0
    3788:	40 e8       	ldi	r20, 0x80	; 128
    378a:	55 e4       	ldi	r21, 0x45	; 69
    378c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3790:	88 23       	and	r24, r24
    3792:	14 f3       	brlt	.-60     	; 0x3758 <main+0x16>
    3794:	de cf       	rjmp	.-68     	; 0x3752 <main+0x10>

00003796 <__prologue_saves__>:
    3796:	2f 92       	push	r2
    3798:	3f 92       	push	r3
    379a:	4f 92       	push	r4
    379c:	5f 92       	push	r5
    379e:	6f 92       	push	r6
    37a0:	7f 92       	push	r7
    37a2:	8f 92       	push	r8
    37a4:	9f 92       	push	r9
    37a6:	af 92       	push	r10
    37a8:	bf 92       	push	r11
    37aa:	cf 92       	push	r12
    37ac:	df 92       	push	r13
    37ae:	ef 92       	push	r14
    37b0:	ff 92       	push	r15
    37b2:	0f 93       	push	r16
    37b4:	1f 93       	push	r17
    37b6:	cf 93       	push	r28
    37b8:	df 93       	push	r29
    37ba:	cd b7       	in	r28, 0x3d	; 61
    37bc:	de b7       	in	r29, 0x3e	; 62
    37be:	ca 1b       	sub	r28, r26
    37c0:	db 0b       	sbc	r29, r27
    37c2:	0f b6       	in	r0, 0x3f	; 63
    37c4:	f8 94       	cli
    37c6:	de bf       	out	0x3e, r29	; 62
    37c8:	0f be       	out	0x3f, r0	; 63
    37ca:	cd bf       	out	0x3d, r28	; 61
    37cc:	09 94       	ijmp

000037ce <__epilogue_restores__>:
    37ce:	2a 88       	ldd	r2, Y+18	; 0x12
    37d0:	39 88       	ldd	r3, Y+17	; 0x11
    37d2:	48 88       	ldd	r4, Y+16	; 0x10
    37d4:	5f 84       	ldd	r5, Y+15	; 0x0f
    37d6:	6e 84       	ldd	r6, Y+14	; 0x0e
    37d8:	7d 84       	ldd	r7, Y+13	; 0x0d
    37da:	8c 84       	ldd	r8, Y+12	; 0x0c
    37dc:	9b 84       	ldd	r9, Y+11	; 0x0b
    37de:	aa 84       	ldd	r10, Y+10	; 0x0a
    37e0:	b9 84       	ldd	r11, Y+9	; 0x09
    37e2:	c8 84       	ldd	r12, Y+8	; 0x08
    37e4:	df 80       	ldd	r13, Y+7	; 0x07
    37e6:	ee 80       	ldd	r14, Y+6	; 0x06
    37e8:	fd 80       	ldd	r15, Y+5	; 0x05
    37ea:	0c 81       	ldd	r16, Y+4	; 0x04
    37ec:	1b 81       	ldd	r17, Y+3	; 0x03
    37ee:	aa 81       	ldd	r26, Y+2	; 0x02
    37f0:	b9 81       	ldd	r27, Y+1	; 0x01
    37f2:	ce 0f       	add	r28, r30
    37f4:	d1 1d       	adc	r29, r1
    37f6:	0f b6       	in	r0, 0x3f	; 63
    37f8:	f8 94       	cli
    37fa:	de bf       	out	0x3e, r29	; 62
    37fc:	0f be       	out	0x3f, r0	; 63
    37fe:	cd bf       	out	0x3d, r28	; 61
    3800:	ed 01       	movw	r28, r26
    3802:	08 95       	ret

00003804 <_exit>:
    3804:	f8 94       	cli

00003806 <__stop_program>:
    3806:	ff cf       	rjmp	.-2      	; 0x3806 <__stop_program>
